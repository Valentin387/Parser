Grammar:

Rule 0     S' -> program
Rule 1     program -> _1_repeat
Rule 2     _1_repeat -> _1_items
Rule 3     _1_repeat -> <empty>
Rule 4     _1_items -> _1_items _1_item
Rule 5     _1_items -> _1_item
Rule 6     _1_item -> declaration
Rule 7     declaration -> statement
Rule 8     declaration -> var_declaration
Rule 9     declaration -> func_declaration
Rule 10    declaration -> class_declaration
Rule 11    class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE
Rule 12    _2_optional -> LT IDENT
Rule 13    _2_optional -> <empty>
Rule 14    _3_repeat -> _3_items
Rule 15    _3_repeat -> <empty>
Rule 16    _3_items -> _3_items _3_item
Rule 17    _3_items -> _3_item
Rule 18    _3_item -> function
Rule 19    func_declaration -> FUN function
Rule 20    var_declaration -> VAR IDENT _4_optional SEMI
Rule 21    _4_optional -> ASSIGN expression  [precedence=right, level=1]
Rule 22    _4_optional -> <empty>
Rule 23    statement -> block
Rule 24    statement -> while_stmt
Rule 25    statement -> return_stmt
Rule 26    statement -> print_stmt
Rule 27    statement -> if_stmt
Rule 28    statement -> for_stmt
Rule 29    statement -> expr_stmt
Rule 30    expr_stmt -> expression SEMI
Rule 31    for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
Rule 32    _5_optional -> expression
Rule 33    _5_optional -> <empty>
Rule 34    _6_optional -> expression
Rule 35    _6_optional -> <empty>
Rule 36    for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
Rule 37    _7_optional -> expression
Rule 38    _7_optional -> <empty>
Rule 39    _8_optional -> expression
Rule 40    _8_optional -> <empty>
Rule 41    for_initialize -> expr_stmt
Rule 42    for_initialize -> var_declaration
Rule 43    if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional
Rule 44    _9_optional -> expression
Rule 45    _9_optional -> <empty>
Rule 46    _10_optional -> ELSE statement
Rule 47    _10_optional -> <empty>
Rule 48    print_stmt -> PRINT expression SEMI
Rule 49    return_stmt -> RETURN _11_optional SEMI
Rule 50    _11_optional -> expression
Rule 51    _11_optional -> <empty>
Rule 52    while_stmt -> WHILE LPAREN expression RPAREN statement
Rule 53    block -> LBRACE _12_repeat RBRACE
Rule 54    _12_repeat -> _12_items
Rule 55    _12_repeat -> <empty>
Rule 56    _12_items -> _12_items _12_item
Rule 57    _12_items -> _12_item
Rule 58    _12_item -> declaration
Rule 59    expression -> factor
Rule 60    expression -> expression NE expression  [precedence=left, level=4]
Rule 61    expression -> expression EQ expression  [precedence=left, level=4]
Rule 62    expression -> expression GE expression  [precedence=left, level=5]
Rule 63    expression -> expression GT expression  [precedence=left, level=5]
Rule 64    expression -> expression LE expression  [precedence=left, level=5]
Rule 65    expression -> expression LT expression  [precedence=left, level=5]
Rule 66    expression -> expression MODULE expression  [precedence=left, level=7]
Rule 67    expression -> expression DIVIDE expression  [precedence=left, level=7]
Rule 68    expression -> expression TIMES expression  [precedence=left, level=7]
Rule 69    expression -> expression MINUS expression  [precedence=left, level=6]
Rule 70    expression -> expression PLUS expression  [precedence=left, level=6]
Rule 71    expression -> expression AND expression  [precedence=left, level=3]
Rule 72    expression -> expression OR expression  [precedence=left, level=2]
Rule 73    expression -> expression ASSIGN expression  [precedence=right, level=1]
Rule 74    factor -> NOT factor  [precedence=right, level=8]
Rule 75    factor -> MINUS factor  [precedence=right, level=8]
Rule 76    factor -> LPAREN expression RPAREN
Rule 77    factor -> factor LPAREN _13_optional RPAREN
Rule 78    _13_optional -> arguments
Rule 79    _13_optional -> <empty>
Rule 80    factor -> factor POINT IDENT
Rule 81    factor -> SUPER POINT IDENT
Rule 82    factor -> IDENT
Rule 83    factor -> THIS
Rule 84    factor -> NIL
Rule 85    factor -> FALSE
Rule 86    factor -> TRUE
Rule 87    factor -> STRING
Rule 88    factor -> NUM
Rule 89    factor -> REAL
Rule 90    function -> IDENT LPAREN _14_optional RPAREN block
Rule 91    _14_optional -> parameters
Rule 92    _14_optional -> <empty>
Rule 93    parameters -> IDENT _15_repeat
Rule 94    _15_repeat -> _15_items
Rule 95    _15_repeat -> <empty>
Rule 96    _15_items -> _15_items _15_item
Rule 97    _15_items -> _15_item
Rule 98    _15_item -> COMMA IDENT
Rule 99    arguments -> expression _16_repeat
Rule 100   _16_repeat -> _16_items
Rule 101   _16_repeat -> <empty>
Rule 102   _16_items -> _16_items _16_item
Rule 103   _16_items -> _16_item
Rule 104   _16_item -> COMMA expression

Terminals, with rules where they appear:

AND                  : 71
ASSIGN               : 21 73
CLASS                : 11
COMMA                : 98 104
DIVIDE               : 67
ELSE                 : 46
EQ                   : 61
FALSE                : 85
FOR                  : 31 36
FUN                  : 19
GE                   : 62
GT                   : 63
IDENT                : 11 12 20 80 81 82 90 93 98
IF                   : 43
LBRACE               : 11 53
LE                   : 64
LPAREN               : 31 36 43 52 76 77 90
LT                   : 12 65
MINUS                : 69 75
MODULE               : 66
NE                   : 60
NIL                  : 84
NOT                  : 74
NUM                  : 88
OR                   : 72
PLUS                 : 70
POINT                : 80 81
PRINT                : 48
RBRACE               : 11 53
REAL                 : 89
RETURN               : 49
RPAREN               : 31 36 43 52 76 77 90
SEMI                 : 20 30 31 31 36 48 49
STRING               : 87
SUPER                : 81
THIS                 : 83
TIMES                : 68
TRUE                 : 86
VAR                  : 20
WHILE                : 52
error                : 

Nonterminals, with rules where they appear:

_10_optional         : 43
_11_optional         : 49
_12_item             : 56 57
_12_items            : 54 56
_12_repeat           : 53
_13_optional         : 77
_14_optional         : 90
_15_item             : 96 97
_15_items            : 94 96
_15_repeat           : 93
_16_item             : 102 103
_16_items            : 100 102
_16_repeat           : 99
_1_item              : 4 5
_1_items             : 2 4
_1_repeat            : 1
_2_optional          : 11
_3_item              : 16 17
_3_items             : 14 16
_3_repeat            : 11
_4_optional          : 20
_5_optional          : 31
_6_optional          : 31
_7_optional          : 36
_8_optional          : 36
_9_optional          : 43
arguments            : 78
block                : 23 90
class_declaration    : 10
declaration          : 6 58
expr_stmt            : 29 41
expression           : 21 30 32 34 37 39 44 48 50 52 60 60 61 61 62 62 63 63 64 64 65 65 66 66 67 67 68 68 69 69 70 70 71 71 72 72 73 73 76 99 104
factor               : 59 74 75 77 80
for_initialize       : 36
for_stmt             : 28
func_declaration     : 9
function             : 18 19
if_stmt              : 27
parameters           : 91
print_stmt           : 26
program              : 0
return_stmt          : 25
statement            : 7 31 36 43 46 52
var_declaration      : 8 42
while_stmt           : 24


state 0

    (0) S' -> . program
    (1) program -> . _1_repeat
    (2) _1_repeat -> . _1_items
    (3) _1_repeat -> .
    (4) _1_items -> . _1_items _1_item
    (5) _1_items -> . _1_item
    (6) _1_item -> . declaration
    (7) declaration -> . statement
    (8) declaration -> . var_declaration
    (9) declaration -> . func_declaration
    (10) declaration -> . class_declaration
    (23) statement -> . block
    (24) statement -> . while_stmt
    (25) statement -> . return_stmt
    (26) statement -> . print_stmt
    (27) statement -> . if_stmt
    (28) statement -> . for_stmt
    (29) statement -> . expr_stmt
    (20) var_declaration -> . VAR IDENT _4_optional SEMI
    (19) func_declaration -> . FUN function
    (11) class_declaration -> . CLASS IDENT _2_optional LBRACE _3_repeat RBRACE
    (53) block -> . LBRACE _12_repeat RBRACE
    (52) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (49) return_stmt -> . RETURN _11_optional SEMI
    (48) print_stmt -> . PRINT expression SEMI
    (43) if_stmt -> . IF LPAREN _9_optional RPAREN statement _10_optional
    (31) for_stmt -> . FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
    (36) for_stmt -> . FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
    (30) expr_stmt -> . expression SEMI
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    $end            reduce using rule 3 (_1_repeat -> .)
    VAR             shift and go to state 17
    FUN             shift and go to state 19
    CLASS           shift and go to state 20
    LBRACE          shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    FOR             shift and go to state 28
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    program                        shift and go to state 1
    _1_repeat                      shift and go to state 2
    _1_items                       shift and go to state 3
    _1_item                        shift and go to state 4
    declaration                    shift and go to state 5
    statement                      shift and go to state 6
    var_declaration                shift and go to state 7
    func_declaration               shift and go to state 8
    class_declaration              shift and go to state 9
    block                          shift and go to state 10
    while_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    print_stmt                     shift and go to state 13
    if_stmt                        shift and go to state 14
    for_stmt                       shift and go to state 15
    expr_stmt                      shift and go to state 16
    expression                     shift and go to state 24
    factor                         shift and go to state 29

state 1

    (0) S' -> program .


state 2

    (1) program -> _1_repeat .
    $end            reduce using rule 1 (program -> _1_repeat .)


state 3

    (2) _1_repeat -> _1_items .
    (4) _1_items -> _1_items . _1_item
    (6) _1_item -> . declaration
    (7) declaration -> . statement
    (8) declaration -> . var_declaration
    (9) declaration -> . func_declaration
    (10) declaration -> . class_declaration
    (23) statement -> . block
    (24) statement -> . while_stmt
    (25) statement -> . return_stmt
    (26) statement -> . print_stmt
    (27) statement -> . if_stmt
    (28) statement -> . for_stmt
    (29) statement -> . expr_stmt
    (20) var_declaration -> . VAR IDENT _4_optional SEMI
    (19) func_declaration -> . FUN function
    (11) class_declaration -> . CLASS IDENT _2_optional LBRACE _3_repeat RBRACE
    (53) block -> . LBRACE _12_repeat RBRACE
    (52) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (49) return_stmt -> . RETURN _11_optional SEMI
    (48) print_stmt -> . PRINT expression SEMI
    (43) if_stmt -> . IF LPAREN _9_optional RPAREN statement _10_optional
    (31) for_stmt -> . FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
    (36) for_stmt -> . FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
    (30) expr_stmt -> . expression SEMI
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    $end            reduce using rule 2 (_1_repeat -> _1_items .)
    VAR             shift and go to state 17
    FUN             shift and go to state 19
    CLASS           shift and go to state 20
    LBRACE          shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    FOR             shift and go to state 28
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    _1_item                        shift and go to state 40
    declaration                    shift and go to state 5
    statement                      shift and go to state 6
    var_declaration                shift and go to state 7
    func_declaration               shift and go to state 8
    class_declaration              shift and go to state 9
    block                          shift and go to state 10
    while_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    print_stmt                     shift and go to state 13
    if_stmt                        shift and go to state 14
    for_stmt                       shift and go to state 15
    expr_stmt                      shift and go to state 16
    expression                     shift and go to state 24
    factor                         shift and go to state 29

state 4

    (5) _1_items -> _1_item .
    VAR             reduce using rule 5 (_1_items -> _1_item .)
    FUN             reduce using rule 5 (_1_items -> _1_item .)
    CLASS           reduce using rule 5 (_1_items -> _1_item .)
    LBRACE          reduce using rule 5 (_1_items -> _1_item .)
    WHILE           reduce using rule 5 (_1_items -> _1_item .)
    RETURN          reduce using rule 5 (_1_items -> _1_item .)
    PRINT           reduce using rule 5 (_1_items -> _1_item .)
    IF              reduce using rule 5 (_1_items -> _1_item .)
    FOR             reduce using rule 5 (_1_items -> _1_item .)
    NOT             reduce using rule 5 (_1_items -> _1_item .)
    MINUS           reduce using rule 5 (_1_items -> _1_item .)
    LPAREN          reduce using rule 5 (_1_items -> _1_item .)
    SUPER           reduce using rule 5 (_1_items -> _1_item .)
    IDENT           reduce using rule 5 (_1_items -> _1_item .)
    THIS            reduce using rule 5 (_1_items -> _1_item .)
    NIL             reduce using rule 5 (_1_items -> _1_item .)
    FALSE           reduce using rule 5 (_1_items -> _1_item .)
    TRUE            reduce using rule 5 (_1_items -> _1_item .)
    STRING          reduce using rule 5 (_1_items -> _1_item .)
    NUM             reduce using rule 5 (_1_items -> _1_item .)
    REAL            reduce using rule 5 (_1_items -> _1_item .)
    $end            reduce using rule 5 (_1_items -> _1_item .)


state 5

    (6) _1_item -> declaration .
    VAR             reduce using rule 6 (_1_item -> declaration .)
    FUN             reduce using rule 6 (_1_item -> declaration .)
    CLASS           reduce using rule 6 (_1_item -> declaration .)
    LBRACE          reduce using rule 6 (_1_item -> declaration .)
    WHILE           reduce using rule 6 (_1_item -> declaration .)
    RETURN          reduce using rule 6 (_1_item -> declaration .)
    PRINT           reduce using rule 6 (_1_item -> declaration .)
    IF              reduce using rule 6 (_1_item -> declaration .)
    FOR             reduce using rule 6 (_1_item -> declaration .)
    NOT             reduce using rule 6 (_1_item -> declaration .)
    MINUS           reduce using rule 6 (_1_item -> declaration .)
    LPAREN          reduce using rule 6 (_1_item -> declaration .)
    SUPER           reduce using rule 6 (_1_item -> declaration .)
    IDENT           reduce using rule 6 (_1_item -> declaration .)
    THIS            reduce using rule 6 (_1_item -> declaration .)
    NIL             reduce using rule 6 (_1_item -> declaration .)
    FALSE           reduce using rule 6 (_1_item -> declaration .)
    TRUE            reduce using rule 6 (_1_item -> declaration .)
    STRING          reduce using rule 6 (_1_item -> declaration .)
    NUM             reduce using rule 6 (_1_item -> declaration .)
    REAL            reduce using rule 6 (_1_item -> declaration .)
    $end            reduce using rule 6 (_1_item -> declaration .)


state 6

    (7) declaration -> statement .
    VAR             reduce using rule 7 (declaration -> statement .)
    FUN             reduce using rule 7 (declaration -> statement .)
    CLASS           reduce using rule 7 (declaration -> statement .)
    LBRACE          reduce using rule 7 (declaration -> statement .)
    WHILE           reduce using rule 7 (declaration -> statement .)
    RETURN          reduce using rule 7 (declaration -> statement .)
    PRINT           reduce using rule 7 (declaration -> statement .)
    IF              reduce using rule 7 (declaration -> statement .)
    FOR             reduce using rule 7 (declaration -> statement .)
    NOT             reduce using rule 7 (declaration -> statement .)
    MINUS           reduce using rule 7 (declaration -> statement .)
    LPAREN          reduce using rule 7 (declaration -> statement .)
    SUPER           reduce using rule 7 (declaration -> statement .)
    IDENT           reduce using rule 7 (declaration -> statement .)
    THIS            reduce using rule 7 (declaration -> statement .)
    NIL             reduce using rule 7 (declaration -> statement .)
    FALSE           reduce using rule 7 (declaration -> statement .)
    TRUE            reduce using rule 7 (declaration -> statement .)
    STRING          reduce using rule 7 (declaration -> statement .)
    NUM             reduce using rule 7 (declaration -> statement .)
    REAL            reduce using rule 7 (declaration -> statement .)
    $end            reduce using rule 7 (declaration -> statement .)
    RBRACE          reduce using rule 7 (declaration -> statement .)


state 7

    (8) declaration -> var_declaration .
    VAR             reduce using rule 8 (declaration -> var_declaration .)
    FUN             reduce using rule 8 (declaration -> var_declaration .)
    CLASS           reduce using rule 8 (declaration -> var_declaration .)
    LBRACE          reduce using rule 8 (declaration -> var_declaration .)
    WHILE           reduce using rule 8 (declaration -> var_declaration .)
    RETURN          reduce using rule 8 (declaration -> var_declaration .)
    PRINT           reduce using rule 8 (declaration -> var_declaration .)
    IF              reduce using rule 8 (declaration -> var_declaration .)
    FOR             reduce using rule 8 (declaration -> var_declaration .)
    NOT             reduce using rule 8 (declaration -> var_declaration .)
    MINUS           reduce using rule 8 (declaration -> var_declaration .)
    LPAREN          reduce using rule 8 (declaration -> var_declaration .)
    SUPER           reduce using rule 8 (declaration -> var_declaration .)
    IDENT           reduce using rule 8 (declaration -> var_declaration .)
    THIS            reduce using rule 8 (declaration -> var_declaration .)
    NIL             reduce using rule 8 (declaration -> var_declaration .)
    FALSE           reduce using rule 8 (declaration -> var_declaration .)
    TRUE            reduce using rule 8 (declaration -> var_declaration .)
    STRING          reduce using rule 8 (declaration -> var_declaration .)
    NUM             reduce using rule 8 (declaration -> var_declaration .)
    REAL            reduce using rule 8 (declaration -> var_declaration .)
    $end            reduce using rule 8 (declaration -> var_declaration .)
    RBRACE          reduce using rule 8 (declaration -> var_declaration .)


state 8

    (9) declaration -> func_declaration .
    VAR             reduce using rule 9 (declaration -> func_declaration .)
    FUN             reduce using rule 9 (declaration -> func_declaration .)
    CLASS           reduce using rule 9 (declaration -> func_declaration .)
    LBRACE          reduce using rule 9 (declaration -> func_declaration .)
    WHILE           reduce using rule 9 (declaration -> func_declaration .)
    RETURN          reduce using rule 9 (declaration -> func_declaration .)
    PRINT           reduce using rule 9 (declaration -> func_declaration .)
    IF              reduce using rule 9 (declaration -> func_declaration .)
    FOR             reduce using rule 9 (declaration -> func_declaration .)
    NOT             reduce using rule 9 (declaration -> func_declaration .)
    MINUS           reduce using rule 9 (declaration -> func_declaration .)
    LPAREN          reduce using rule 9 (declaration -> func_declaration .)
    SUPER           reduce using rule 9 (declaration -> func_declaration .)
    IDENT           reduce using rule 9 (declaration -> func_declaration .)
    THIS            reduce using rule 9 (declaration -> func_declaration .)
    NIL             reduce using rule 9 (declaration -> func_declaration .)
    FALSE           reduce using rule 9 (declaration -> func_declaration .)
    TRUE            reduce using rule 9 (declaration -> func_declaration .)
    STRING          reduce using rule 9 (declaration -> func_declaration .)
    NUM             reduce using rule 9 (declaration -> func_declaration .)
    REAL            reduce using rule 9 (declaration -> func_declaration .)
    $end            reduce using rule 9 (declaration -> func_declaration .)
    RBRACE          reduce using rule 9 (declaration -> func_declaration .)


state 9

    (10) declaration -> class_declaration .
    VAR             reduce using rule 10 (declaration -> class_declaration .)
    FUN             reduce using rule 10 (declaration -> class_declaration .)
    CLASS           reduce using rule 10 (declaration -> class_declaration .)
    LBRACE          reduce using rule 10 (declaration -> class_declaration .)
    WHILE           reduce using rule 10 (declaration -> class_declaration .)
    RETURN          reduce using rule 10 (declaration -> class_declaration .)
    PRINT           reduce using rule 10 (declaration -> class_declaration .)
    IF              reduce using rule 10 (declaration -> class_declaration .)
    FOR             reduce using rule 10 (declaration -> class_declaration .)
    NOT             reduce using rule 10 (declaration -> class_declaration .)
    MINUS           reduce using rule 10 (declaration -> class_declaration .)
    LPAREN          reduce using rule 10 (declaration -> class_declaration .)
    SUPER           reduce using rule 10 (declaration -> class_declaration .)
    IDENT           reduce using rule 10 (declaration -> class_declaration .)
    THIS            reduce using rule 10 (declaration -> class_declaration .)
    NIL             reduce using rule 10 (declaration -> class_declaration .)
    FALSE           reduce using rule 10 (declaration -> class_declaration .)
    TRUE            reduce using rule 10 (declaration -> class_declaration .)
    STRING          reduce using rule 10 (declaration -> class_declaration .)
    NUM             reduce using rule 10 (declaration -> class_declaration .)
    REAL            reduce using rule 10 (declaration -> class_declaration .)
    $end            reduce using rule 10 (declaration -> class_declaration .)
    RBRACE          reduce using rule 10 (declaration -> class_declaration .)


state 10

    (23) statement -> block .
    VAR             reduce using rule 23 (statement -> block .)
    FUN             reduce using rule 23 (statement -> block .)
    CLASS           reduce using rule 23 (statement -> block .)
    LBRACE          reduce using rule 23 (statement -> block .)
    WHILE           reduce using rule 23 (statement -> block .)
    RETURN          reduce using rule 23 (statement -> block .)
    PRINT           reduce using rule 23 (statement -> block .)
    IF              reduce using rule 23 (statement -> block .)
    FOR             reduce using rule 23 (statement -> block .)
    NOT             reduce using rule 23 (statement -> block .)
    MINUS           reduce using rule 23 (statement -> block .)
    LPAREN          reduce using rule 23 (statement -> block .)
    SUPER           reduce using rule 23 (statement -> block .)
    IDENT           reduce using rule 23 (statement -> block .)
    THIS            reduce using rule 23 (statement -> block .)
    NIL             reduce using rule 23 (statement -> block .)
    FALSE           reduce using rule 23 (statement -> block .)
    TRUE            reduce using rule 23 (statement -> block .)
    STRING          reduce using rule 23 (statement -> block .)
    NUM             reduce using rule 23 (statement -> block .)
    REAL            reduce using rule 23 (statement -> block .)
    $end            reduce using rule 23 (statement -> block .)
    RBRACE          reduce using rule 23 (statement -> block .)
    ELSE            reduce using rule 23 (statement -> block .)


state 11

    (24) statement -> while_stmt .
    VAR             reduce using rule 24 (statement -> while_stmt .)
    FUN             reduce using rule 24 (statement -> while_stmt .)
    CLASS           reduce using rule 24 (statement -> while_stmt .)
    LBRACE          reduce using rule 24 (statement -> while_stmt .)
    WHILE           reduce using rule 24 (statement -> while_stmt .)
    RETURN          reduce using rule 24 (statement -> while_stmt .)
    PRINT           reduce using rule 24 (statement -> while_stmt .)
    IF              reduce using rule 24 (statement -> while_stmt .)
    FOR             reduce using rule 24 (statement -> while_stmt .)
    NOT             reduce using rule 24 (statement -> while_stmt .)
    MINUS           reduce using rule 24 (statement -> while_stmt .)
    LPAREN          reduce using rule 24 (statement -> while_stmt .)
    SUPER           reduce using rule 24 (statement -> while_stmt .)
    IDENT           reduce using rule 24 (statement -> while_stmt .)
    THIS            reduce using rule 24 (statement -> while_stmt .)
    NIL             reduce using rule 24 (statement -> while_stmt .)
    FALSE           reduce using rule 24 (statement -> while_stmt .)
    TRUE            reduce using rule 24 (statement -> while_stmt .)
    STRING          reduce using rule 24 (statement -> while_stmt .)
    NUM             reduce using rule 24 (statement -> while_stmt .)
    REAL            reduce using rule 24 (statement -> while_stmt .)
    $end            reduce using rule 24 (statement -> while_stmt .)
    RBRACE          reduce using rule 24 (statement -> while_stmt .)
    ELSE            reduce using rule 24 (statement -> while_stmt .)


state 12

    (25) statement -> return_stmt .
    VAR             reduce using rule 25 (statement -> return_stmt .)
    FUN             reduce using rule 25 (statement -> return_stmt .)
    CLASS           reduce using rule 25 (statement -> return_stmt .)
    LBRACE          reduce using rule 25 (statement -> return_stmt .)
    WHILE           reduce using rule 25 (statement -> return_stmt .)
    RETURN          reduce using rule 25 (statement -> return_stmt .)
    PRINT           reduce using rule 25 (statement -> return_stmt .)
    IF              reduce using rule 25 (statement -> return_stmt .)
    FOR             reduce using rule 25 (statement -> return_stmt .)
    NOT             reduce using rule 25 (statement -> return_stmt .)
    MINUS           reduce using rule 25 (statement -> return_stmt .)
    LPAREN          reduce using rule 25 (statement -> return_stmt .)
    SUPER           reduce using rule 25 (statement -> return_stmt .)
    IDENT           reduce using rule 25 (statement -> return_stmt .)
    THIS            reduce using rule 25 (statement -> return_stmt .)
    NIL             reduce using rule 25 (statement -> return_stmt .)
    FALSE           reduce using rule 25 (statement -> return_stmt .)
    TRUE            reduce using rule 25 (statement -> return_stmt .)
    STRING          reduce using rule 25 (statement -> return_stmt .)
    NUM             reduce using rule 25 (statement -> return_stmt .)
    REAL            reduce using rule 25 (statement -> return_stmt .)
    $end            reduce using rule 25 (statement -> return_stmt .)
    RBRACE          reduce using rule 25 (statement -> return_stmt .)
    ELSE            reduce using rule 25 (statement -> return_stmt .)


state 13

    (26) statement -> print_stmt .
    VAR             reduce using rule 26 (statement -> print_stmt .)
    FUN             reduce using rule 26 (statement -> print_stmt .)
    CLASS           reduce using rule 26 (statement -> print_stmt .)
    LBRACE          reduce using rule 26 (statement -> print_stmt .)
    WHILE           reduce using rule 26 (statement -> print_stmt .)
    RETURN          reduce using rule 26 (statement -> print_stmt .)
    PRINT           reduce using rule 26 (statement -> print_stmt .)
    IF              reduce using rule 26 (statement -> print_stmt .)
    FOR             reduce using rule 26 (statement -> print_stmt .)
    NOT             reduce using rule 26 (statement -> print_stmt .)
    MINUS           reduce using rule 26 (statement -> print_stmt .)
    LPAREN          reduce using rule 26 (statement -> print_stmt .)
    SUPER           reduce using rule 26 (statement -> print_stmt .)
    IDENT           reduce using rule 26 (statement -> print_stmt .)
    THIS            reduce using rule 26 (statement -> print_stmt .)
    NIL             reduce using rule 26 (statement -> print_stmt .)
    FALSE           reduce using rule 26 (statement -> print_stmt .)
    TRUE            reduce using rule 26 (statement -> print_stmt .)
    STRING          reduce using rule 26 (statement -> print_stmt .)
    NUM             reduce using rule 26 (statement -> print_stmt .)
    REAL            reduce using rule 26 (statement -> print_stmt .)
    $end            reduce using rule 26 (statement -> print_stmt .)
    RBRACE          reduce using rule 26 (statement -> print_stmt .)
    ELSE            reduce using rule 26 (statement -> print_stmt .)


state 14

    (27) statement -> if_stmt .
    VAR             reduce using rule 27 (statement -> if_stmt .)
    FUN             reduce using rule 27 (statement -> if_stmt .)
    CLASS           reduce using rule 27 (statement -> if_stmt .)
    LBRACE          reduce using rule 27 (statement -> if_stmt .)
    WHILE           reduce using rule 27 (statement -> if_stmt .)
    RETURN          reduce using rule 27 (statement -> if_stmt .)
    PRINT           reduce using rule 27 (statement -> if_stmt .)
    IF              reduce using rule 27 (statement -> if_stmt .)
    FOR             reduce using rule 27 (statement -> if_stmt .)
    NOT             reduce using rule 27 (statement -> if_stmt .)
    MINUS           reduce using rule 27 (statement -> if_stmt .)
    LPAREN          reduce using rule 27 (statement -> if_stmt .)
    SUPER           reduce using rule 27 (statement -> if_stmt .)
    IDENT           reduce using rule 27 (statement -> if_stmt .)
    THIS            reduce using rule 27 (statement -> if_stmt .)
    NIL             reduce using rule 27 (statement -> if_stmt .)
    FALSE           reduce using rule 27 (statement -> if_stmt .)
    TRUE            reduce using rule 27 (statement -> if_stmt .)
    STRING          reduce using rule 27 (statement -> if_stmt .)
    NUM             reduce using rule 27 (statement -> if_stmt .)
    REAL            reduce using rule 27 (statement -> if_stmt .)
    $end            reduce using rule 27 (statement -> if_stmt .)
    RBRACE          reduce using rule 27 (statement -> if_stmt .)
    ELSE            reduce using rule 27 (statement -> if_stmt .)


state 15

    (28) statement -> for_stmt .
    VAR             reduce using rule 28 (statement -> for_stmt .)
    FUN             reduce using rule 28 (statement -> for_stmt .)
    CLASS           reduce using rule 28 (statement -> for_stmt .)
    LBRACE          reduce using rule 28 (statement -> for_stmt .)
    WHILE           reduce using rule 28 (statement -> for_stmt .)
    RETURN          reduce using rule 28 (statement -> for_stmt .)
    PRINT           reduce using rule 28 (statement -> for_stmt .)
    IF              reduce using rule 28 (statement -> for_stmt .)
    FOR             reduce using rule 28 (statement -> for_stmt .)
    NOT             reduce using rule 28 (statement -> for_stmt .)
    MINUS           reduce using rule 28 (statement -> for_stmt .)
    LPAREN          reduce using rule 28 (statement -> for_stmt .)
    SUPER           reduce using rule 28 (statement -> for_stmt .)
    IDENT           reduce using rule 28 (statement -> for_stmt .)
    THIS            reduce using rule 28 (statement -> for_stmt .)
    NIL             reduce using rule 28 (statement -> for_stmt .)
    FALSE           reduce using rule 28 (statement -> for_stmt .)
    TRUE            reduce using rule 28 (statement -> for_stmt .)
    STRING          reduce using rule 28 (statement -> for_stmt .)
    NUM             reduce using rule 28 (statement -> for_stmt .)
    REAL            reduce using rule 28 (statement -> for_stmt .)
    $end            reduce using rule 28 (statement -> for_stmt .)
    RBRACE          reduce using rule 28 (statement -> for_stmt .)
    ELSE            reduce using rule 28 (statement -> for_stmt .)


state 16

    (29) statement -> expr_stmt .
    VAR             reduce using rule 29 (statement -> expr_stmt .)
    FUN             reduce using rule 29 (statement -> expr_stmt .)
    CLASS           reduce using rule 29 (statement -> expr_stmt .)
    LBRACE          reduce using rule 29 (statement -> expr_stmt .)
    WHILE           reduce using rule 29 (statement -> expr_stmt .)
    RETURN          reduce using rule 29 (statement -> expr_stmt .)
    PRINT           reduce using rule 29 (statement -> expr_stmt .)
    IF              reduce using rule 29 (statement -> expr_stmt .)
    FOR             reduce using rule 29 (statement -> expr_stmt .)
    NOT             reduce using rule 29 (statement -> expr_stmt .)
    MINUS           reduce using rule 29 (statement -> expr_stmt .)
    LPAREN          reduce using rule 29 (statement -> expr_stmt .)
    SUPER           reduce using rule 29 (statement -> expr_stmt .)
    IDENT           reduce using rule 29 (statement -> expr_stmt .)
    THIS            reduce using rule 29 (statement -> expr_stmt .)
    NIL             reduce using rule 29 (statement -> expr_stmt .)
    FALSE           reduce using rule 29 (statement -> expr_stmt .)
    TRUE            reduce using rule 29 (statement -> expr_stmt .)
    STRING          reduce using rule 29 (statement -> expr_stmt .)
    NUM             reduce using rule 29 (statement -> expr_stmt .)
    REAL            reduce using rule 29 (statement -> expr_stmt .)
    $end            reduce using rule 29 (statement -> expr_stmt .)
    RBRACE          reduce using rule 29 (statement -> expr_stmt .)
    ELSE            reduce using rule 29 (statement -> expr_stmt .)


state 17

    (20) var_declaration -> VAR . IDENT _4_optional SEMI
    IDENT           shift and go to state 41


state 18

    (82) factor -> IDENT .
    LPAREN          reduce using rule 82 (factor -> IDENT .)
    POINT           reduce using rule 82 (factor -> IDENT .)
    SEMI            reduce using rule 82 (factor -> IDENT .)
    NE              reduce using rule 82 (factor -> IDENT .)
    EQ              reduce using rule 82 (factor -> IDENT .)
    GE              reduce using rule 82 (factor -> IDENT .)
    GT              reduce using rule 82 (factor -> IDENT .)
    LE              reduce using rule 82 (factor -> IDENT .)
    LT              reduce using rule 82 (factor -> IDENT .)
    MODULE          reduce using rule 82 (factor -> IDENT .)
    DIVIDE          reduce using rule 82 (factor -> IDENT .)
    TIMES           reduce using rule 82 (factor -> IDENT .)
    MINUS           reduce using rule 82 (factor -> IDENT .)
    PLUS            reduce using rule 82 (factor -> IDENT .)
    AND             reduce using rule 82 (factor -> IDENT .)
    OR              reduce using rule 82 (factor -> IDENT .)
    ASSIGN          reduce using rule 82 (factor -> IDENT .)
    RPAREN          reduce using rule 82 (factor -> IDENT .)
    COMMA           reduce using rule 82 (factor -> IDENT .)


state 19

    (19) func_declaration -> FUN . function
    (90) function -> . IDENT LPAREN _14_optional RPAREN block
    IDENT           shift and go to state 43

    function                       shift and go to state 42

state 20

    (11) class_declaration -> CLASS . IDENT _2_optional LBRACE _3_repeat RBRACE
    IDENT           shift and go to state 44


state 21

    (53) block -> LBRACE . _12_repeat RBRACE
    (54) _12_repeat -> . _12_items
    (55) _12_repeat -> .
    (56) _12_items -> . _12_items _12_item
    (57) _12_items -> . _12_item
    (58) _12_item -> . declaration
    (7) declaration -> . statement
    (8) declaration -> . var_declaration
    (9) declaration -> . func_declaration
    (10) declaration -> . class_declaration
    (23) statement -> . block
    (24) statement -> . while_stmt
    (25) statement -> . return_stmt
    (26) statement -> . print_stmt
    (27) statement -> . if_stmt
    (28) statement -> . for_stmt
    (29) statement -> . expr_stmt
    (20) var_declaration -> . VAR IDENT _4_optional SEMI
    (19) func_declaration -> . FUN function
    (11) class_declaration -> . CLASS IDENT _2_optional LBRACE _3_repeat RBRACE
    (53) block -> . LBRACE _12_repeat RBRACE
    (52) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (49) return_stmt -> . RETURN _11_optional SEMI
    (48) print_stmt -> . PRINT expression SEMI
    (43) if_stmt -> . IF LPAREN _9_optional RPAREN statement _10_optional
    (31) for_stmt -> . FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
    (36) for_stmt -> . FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
    (30) expr_stmt -> . expression SEMI
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    RBRACE          reduce using rule 55 (_12_repeat -> .)
    VAR             shift and go to state 17
    FUN             shift and go to state 19
    CLASS           shift and go to state 20
    LBRACE          shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    FOR             shift and go to state 28
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    _12_repeat                     shift and go to state 45
    _12_items                      shift and go to state 46
    _12_item                       shift and go to state 47
    declaration                    shift and go to state 48
    statement                      shift and go to state 6
    var_declaration                shift and go to state 7
    func_declaration               shift and go to state 8
    class_declaration              shift and go to state 9
    block                          shift and go to state 10
    while_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    print_stmt                     shift and go to state 13
    if_stmt                        shift and go to state 14
    for_stmt                       shift and go to state 15
    expr_stmt                      shift and go to state 16
    expression                     shift and go to state 24
    factor                         shift and go to state 29

state 22

    (52) while_stmt -> WHILE . LPAREN expression RPAREN statement
    LPAREN          shift and go to state 49


state 23

    (76) factor -> LPAREN . expression RPAREN
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 50
    factor                         shift and go to state 29

state 24

    (30) expr_stmt -> expression . SEMI
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . ASSIGN expression
    SEMI            shift and go to state 51
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    ASSIGN          shift and go to state 65


state 25

    (49) return_stmt -> RETURN . _11_optional SEMI
    (50) _11_optional -> . expression
    (51) _11_optional -> .
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    SEMI            reduce using rule 51 (_11_optional -> .)
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    _11_optional                   shift and go to state 66
    expression                     shift and go to state 67
    factor                         shift and go to state 29

state 26

    (48) print_stmt -> PRINT . expression SEMI
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 68
    factor                         shift and go to state 29

state 27

    (43) if_stmt -> IF . LPAREN _9_optional RPAREN statement _10_optional
    LPAREN          shift and go to state 69


state 28

    (31) for_stmt -> FOR . LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
    (36) for_stmt -> FOR . LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
    LPAREN          shift and go to state 70


state 29

    (59) expression -> factor .
    (77) factor -> factor . LPAREN _13_optional RPAREN
    (80) factor -> factor . POINT IDENT
    SEMI            reduce using rule 59 (expression -> factor .)
    NE              reduce using rule 59 (expression -> factor .)
    EQ              reduce using rule 59 (expression -> factor .)
    GE              reduce using rule 59 (expression -> factor .)
    GT              reduce using rule 59 (expression -> factor .)
    LE              reduce using rule 59 (expression -> factor .)
    LT              reduce using rule 59 (expression -> factor .)
    MODULE          reduce using rule 59 (expression -> factor .)
    DIVIDE          reduce using rule 59 (expression -> factor .)
    TIMES           reduce using rule 59 (expression -> factor .)
    MINUS           reduce using rule 59 (expression -> factor .)
    PLUS            reduce using rule 59 (expression -> factor .)
    AND             reduce using rule 59 (expression -> factor .)
    OR              reduce using rule 59 (expression -> factor .)
    ASSIGN          reduce using rule 59 (expression -> factor .)
    RPAREN          reduce using rule 59 (expression -> factor .)
    COMMA           reduce using rule 59 (expression -> factor .)
    LPAREN          shift and go to state 71
    POINT           shift and go to state 72


state 30

    (75) factor -> MINUS . factor
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    factor                         shift and go to state 73

state 31

    (74) factor -> NOT . factor
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    factor                         shift and go to state 74

state 32

    (81) factor -> SUPER . POINT IDENT
    POINT           shift and go to state 75


state 33

    (83) factor -> THIS .
    LPAREN          reduce using rule 83 (factor -> THIS .)
    POINT           reduce using rule 83 (factor -> THIS .)
    SEMI            reduce using rule 83 (factor -> THIS .)
    NE              reduce using rule 83 (factor -> THIS .)
    EQ              reduce using rule 83 (factor -> THIS .)
    GE              reduce using rule 83 (factor -> THIS .)
    GT              reduce using rule 83 (factor -> THIS .)
    LE              reduce using rule 83 (factor -> THIS .)
    LT              reduce using rule 83 (factor -> THIS .)
    MODULE          reduce using rule 83 (factor -> THIS .)
    DIVIDE          reduce using rule 83 (factor -> THIS .)
    TIMES           reduce using rule 83 (factor -> THIS .)
    MINUS           reduce using rule 83 (factor -> THIS .)
    PLUS            reduce using rule 83 (factor -> THIS .)
    AND             reduce using rule 83 (factor -> THIS .)
    OR              reduce using rule 83 (factor -> THIS .)
    ASSIGN          reduce using rule 83 (factor -> THIS .)
    RPAREN          reduce using rule 83 (factor -> THIS .)
    COMMA           reduce using rule 83 (factor -> THIS .)


state 34

    (84) factor -> NIL .
    LPAREN          reduce using rule 84 (factor -> NIL .)
    POINT           reduce using rule 84 (factor -> NIL .)
    SEMI            reduce using rule 84 (factor -> NIL .)
    NE              reduce using rule 84 (factor -> NIL .)
    EQ              reduce using rule 84 (factor -> NIL .)
    GE              reduce using rule 84 (factor -> NIL .)
    GT              reduce using rule 84 (factor -> NIL .)
    LE              reduce using rule 84 (factor -> NIL .)
    LT              reduce using rule 84 (factor -> NIL .)
    MODULE          reduce using rule 84 (factor -> NIL .)
    DIVIDE          reduce using rule 84 (factor -> NIL .)
    TIMES           reduce using rule 84 (factor -> NIL .)
    MINUS           reduce using rule 84 (factor -> NIL .)
    PLUS            reduce using rule 84 (factor -> NIL .)
    AND             reduce using rule 84 (factor -> NIL .)
    OR              reduce using rule 84 (factor -> NIL .)
    ASSIGN          reduce using rule 84 (factor -> NIL .)
    RPAREN          reduce using rule 84 (factor -> NIL .)
    COMMA           reduce using rule 84 (factor -> NIL .)


state 35

    (85) factor -> FALSE .
    LPAREN          reduce using rule 85 (factor -> FALSE .)
    POINT           reduce using rule 85 (factor -> FALSE .)
    SEMI            reduce using rule 85 (factor -> FALSE .)
    NE              reduce using rule 85 (factor -> FALSE .)
    EQ              reduce using rule 85 (factor -> FALSE .)
    GE              reduce using rule 85 (factor -> FALSE .)
    GT              reduce using rule 85 (factor -> FALSE .)
    LE              reduce using rule 85 (factor -> FALSE .)
    LT              reduce using rule 85 (factor -> FALSE .)
    MODULE          reduce using rule 85 (factor -> FALSE .)
    DIVIDE          reduce using rule 85 (factor -> FALSE .)
    TIMES           reduce using rule 85 (factor -> FALSE .)
    MINUS           reduce using rule 85 (factor -> FALSE .)
    PLUS            reduce using rule 85 (factor -> FALSE .)
    AND             reduce using rule 85 (factor -> FALSE .)
    OR              reduce using rule 85 (factor -> FALSE .)
    ASSIGN          reduce using rule 85 (factor -> FALSE .)
    RPAREN          reduce using rule 85 (factor -> FALSE .)
    COMMA           reduce using rule 85 (factor -> FALSE .)


state 36

    (86) factor -> TRUE .
    LPAREN          reduce using rule 86 (factor -> TRUE .)
    POINT           reduce using rule 86 (factor -> TRUE .)
    SEMI            reduce using rule 86 (factor -> TRUE .)
    NE              reduce using rule 86 (factor -> TRUE .)
    EQ              reduce using rule 86 (factor -> TRUE .)
    GE              reduce using rule 86 (factor -> TRUE .)
    GT              reduce using rule 86 (factor -> TRUE .)
    LE              reduce using rule 86 (factor -> TRUE .)
    LT              reduce using rule 86 (factor -> TRUE .)
    MODULE          reduce using rule 86 (factor -> TRUE .)
    DIVIDE          reduce using rule 86 (factor -> TRUE .)
    TIMES           reduce using rule 86 (factor -> TRUE .)
    MINUS           reduce using rule 86 (factor -> TRUE .)
    PLUS            reduce using rule 86 (factor -> TRUE .)
    AND             reduce using rule 86 (factor -> TRUE .)
    OR              reduce using rule 86 (factor -> TRUE .)
    ASSIGN          reduce using rule 86 (factor -> TRUE .)
    RPAREN          reduce using rule 86 (factor -> TRUE .)
    COMMA           reduce using rule 86 (factor -> TRUE .)


state 37

    (87) factor -> STRING .
    LPAREN          reduce using rule 87 (factor -> STRING .)
    POINT           reduce using rule 87 (factor -> STRING .)
    SEMI            reduce using rule 87 (factor -> STRING .)
    NE              reduce using rule 87 (factor -> STRING .)
    EQ              reduce using rule 87 (factor -> STRING .)
    GE              reduce using rule 87 (factor -> STRING .)
    GT              reduce using rule 87 (factor -> STRING .)
    LE              reduce using rule 87 (factor -> STRING .)
    LT              reduce using rule 87 (factor -> STRING .)
    MODULE          reduce using rule 87 (factor -> STRING .)
    DIVIDE          reduce using rule 87 (factor -> STRING .)
    TIMES           reduce using rule 87 (factor -> STRING .)
    MINUS           reduce using rule 87 (factor -> STRING .)
    PLUS            reduce using rule 87 (factor -> STRING .)
    AND             reduce using rule 87 (factor -> STRING .)
    OR              reduce using rule 87 (factor -> STRING .)
    ASSIGN          reduce using rule 87 (factor -> STRING .)
    RPAREN          reduce using rule 87 (factor -> STRING .)
    COMMA           reduce using rule 87 (factor -> STRING .)


state 38

    (88) factor -> NUM .
    LPAREN          reduce using rule 88 (factor -> NUM .)
    POINT           reduce using rule 88 (factor -> NUM .)
    SEMI            reduce using rule 88 (factor -> NUM .)
    NE              reduce using rule 88 (factor -> NUM .)
    EQ              reduce using rule 88 (factor -> NUM .)
    GE              reduce using rule 88 (factor -> NUM .)
    GT              reduce using rule 88 (factor -> NUM .)
    LE              reduce using rule 88 (factor -> NUM .)
    LT              reduce using rule 88 (factor -> NUM .)
    MODULE          reduce using rule 88 (factor -> NUM .)
    DIVIDE          reduce using rule 88 (factor -> NUM .)
    TIMES           reduce using rule 88 (factor -> NUM .)
    MINUS           reduce using rule 88 (factor -> NUM .)
    PLUS            reduce using rule 88 (factor -> NUM .)
    AND             reduce using rule 88 (factor -> NUM .)
    OR              reduce using rule 88 (factor -> NUM .)
    ASSIGN          reduce using rule 88 (factor -> NUM .)
    RPAREN          reduce using rule 88 (factor -> NUM .)
    COMMA           reduce using rule 88 (factor -> NUM .)


state 39

    (89) factor -> REAL .
    LPAREN          reduce using rule 89 (factor -> REAL .)
    POINT           reduce using rule 89 (factor -> REAL .)
    SEMI            reduce using rule 89 (factor -> REAL .)
    NE              reduce using rule 89 (factor -> REAL .)
    EQ              reduce using rule 89 (factor -> REAL .)
    GE              reduce using rule 89 (factor -> REAL .)
    GT              reduce using rule 89 (factor -> REAL .)
    LE              reduce using rule 89 (factor -> REAL .)
    LT              reduce using rule 89 (factor -> REAL .)
    MODULE          reduce using rule 89 (factor -> REAL .)
    DIVIDE          reduce using rule 89 (factor -> REAL .)
    TIMES           reduce using rule 89 (factor -> REAL .)
    MINUS           reduce using rule 89 (factor -> REAL .)
    PLUS            reduce using rule 89 (factor -> REAL .)
    AND             reduce using rule 89 (factor -> REAL .)
    OR              reduce using rule 89 (factor -> REAL .)
    ASSIGN          reduce using rule 89 (factor -> REAL .)
    RPAREN          reduce using rule 89 (factor -> REAL .)
    COMMA           reduce using rule 89 (factor -> REAL .)


state 40

    (4) _1_items -> _1_items _1_item .
    VAR             reduce using rule 4 (_1_items -> _1_items _1_item .)
    FUN             reduce using rule 4 (_1_items -> _1_items _1_item .)
    CLASS           reduce using rule 4 (_1_items -> _1_items _1_item .)
    LBRACE          reduce using rule 4 (_1_items -> _1_items _1_item .)
    WHILE           reduce using rule 4 (_1_items -> _1_items _1_item .)
    RETURN          reduce using rule 4 (_1_items -> _1_items _1_item .)
    PRINT           reduce using rule 4 (_1_items -> _1_items _1_item .)
    IF              reduce using rule 4 (_1_items -> _1_items _1_item .)
    FOR             reduce using rule 4 (_1_items -> _1_items _1_item .)
    NOT             reduce using rule 4 (_1_items -> _1_items _1_item .)
    MINUS           reduce using rule 4 (_1_items -> _1_items _1_item .)
    LPAREN          reduce using rule 4 (_1_items -> _1_items _1_item .)
    SUPER           reduce using rule 4 (_1_items -> _1_items _1_item .)
    IDENT           reduce using rule 4 (_1_items -> _1_items _1_item .)
    THIS            reduce using rule 4 (_1_items -> _1_items _1_item .)
    NIL             reduce using rule 4 (_1_items -> _1_items _1_item .)
    FALSE           reduce using rule 4 (_1_items -> _1_items _1_item .)
    TRUE            reduce using rule 4 (_1_items -> _1_items _1_item .)
    STRING          reduce using rule 4 (_1_items -> _1_items _1_item .)
    NUM             reduce using rule 4 (_1_items -> _1_items _1_item .)
    REAL            reduce using rule 4 (_1_items -> _1_items _1_item .)
    $end            reduce using rule 4 (_1_items -> _1_items _1_item .)


state 41

    (20) var_declaration -> VAR IDENT . _4_optional SEMI
    (21) _4_optional -> . ASSIGN expression
    (22) _4_optional -> .
    ASSIGN          shift and go to state 77
    SEMI            reduce using rule 22 (_4_optional -> .)

    _4_optional                    shift and go to state 76

state 42

    (19) func_declaration -> FUN function .
    VAR             reduce using rule 19 (func_declaration -> FUN function .)
    FUN             reduce using rule 19 (func_declaration -> FUN function .)
    CLASS           reduce using rule 19 (func_declaration -> FUN function .)
    LBRACE          reduce using rule 19 (func_declaration -> FUN function .)
    WHILE           reduce using rule 19 (func_declaration -> FUN function .)
    RETURN          reduce using rule 19 (func_declaration -> FUN function .)
    PRINT           reduce using rule 19 (func_declaration -> FUN function .)
    IF              reduce using rule 19 (func_declaration -> FUN function .)
    FOR             reduce using rule 19 (func_declaration -> FUN function .)
    NOT             reduce using rule 19 (func_declaration -> FUN function .)
    MINUS           reduce using rule 19 (func_declaration -> FUN function .)
    LPAREN          reduce using rule 19 (func_declaration -> FUN function .)
    SUPER           reduce using rule 19 (func_declaration -> FUN function .)
    IDENT           reduce using rule 19 (func_declaration -> FUN function .)
    THIS            reduce using rule 19 (func_declaration -> FUN function .)
    NIL             reduce using rule 19 (func_declaration -> FUN function .)
    FALSE           reduce using rule 19 (func_declaration -> FUN function .)
    TRUE            reduce using rule 19 (func_declaration -> FUN function .)
    STRING          reduce using rule 19 (func_declaration -> FUN function .)
    NUM             reduce using rule 19 (func_declaration -> FUN function .)
    REAL            reduce using rule 19 (func_declaration -> FUN function .)
    $end            reduce using rule 19 (func_declaration -> FUN function .)
    RBRACE          reduce using rule 19 (func_declaration -> FUN function .)


state 43

    (90) function -> IDENT . LPAREN _14_optional RPAREN block
    LPAREN          shift and go to state 78


state 44

    (11) class_declaration -> CLASS IDENT . _2_optional LBRACE _3_repeat RBRACE
    (12) _2_optional -> . LT IDENT
    (13) _2_optional -> .
    LT              shift and go to state 80
    LBRACE          reduce using rule 13 (_2_optional -> .)

    _2_optional                    shift and go to state 79

state 45

    (53) block -> LBRACE _12_repeat . RBRACE
    RBRACE          shift and go to state 81


state 46

    (54) _12_repeat -> _12_items .
    (56) _12_items -> _12_items . _12_item
    (58) _12_item -> . declaration
    (7) declaration -> . statement
    (8) declaration -> . var_declaration
    (9) declaration -> . func_declaration
    (10) declaration -> . class_declaration
    (23) statement -> . block
    (24) statement -> . while_stmt
    (25) statement -> . return_stmt
    (26) statement -> . print_stmt
    (27) statement -> . if_stmt
    (28) statement -> . for_stmt
    (29) statement -> . expr_stmt
    (20) var_declaration -> . VAR IDENT _4_optional SEMI
    (19) func_declaration -> . FUN function
    (11) class_declaration -> . CLASS IDENT _2_optional LBRACE _3_repeat RBRACE
    (53) block -> . LBRACE _12_repeat RBRACE
    (52) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (49) return_stmt -> . RETURN _11_optional SEMI
    (48) print_stmt -> . PRINT expression SEMI
    (43) if_stmt -> . IF LPAREN _9_optional RPAREN statement _10_optional
    (31) for_stmt -> . FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
    (36) for_stmt -> . FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
    (30) expr_stmt -> . expression SEMI
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    RBRACE          reduce using rule 54 (_12_repeat -> _12_items .)
    VAR             shift and go to state 17
    FUN             shift and go to state 19
    CLASS           shift and go to state 20
    LBRACE          shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    FOR             shift and go to state 28
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    _12_item                       shift and go to state 82
    declaration                    shift and go to state 48
    statement                      shift and go to state 6
    var_declaration                shift and go to state 7
    func_declaration               shift and go to state 8
    class_declaration              shift and go to state 9
    block                          shift and go to state 10
    while_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    print_stmt                     shift and go to state 13
    if_stmt                        shift and go to state 14
    for_stmt                       shift and go to state 15
    expr_stmt                      shift and go to state 16
    expression                     shift and go to state 24
    factor                         shift and go to state 29

state 47

    (57) _12_items -> _12_item .
    VAR             reduce using rule 57 (_12_items -> _12_item .)
    FUN             reduce using rule 57 (_12_items -> _12_item .)
    CLASS           reduce using rule 57 (_12_items -> _12_item .)
    LBRACE          reduce using rule 57 (_12_items -> _12_item .)
    WHILE           reduce using rule 57 (_12_items -> _12_item .)
    RETURN          reduce using rule 57 (_12_items -> _12_item .)
    PRINT           reduce using rule 57 (_12_items -> _12_item .)
    IF              reduce using rule 57 (_12_items -> _12_item .)
    FOR             reduce using rule 57 (_12_items -> _12_item .)
    NOT             reduce using rule 57 (_12_items -> _12_item .)
    MINUS           reduce using rule 57 (_12_items -> _12_item .)
    LPAREN          reduce using rule 57 (_12_items -> _12_item .)
    SUPER           reduce using rule 57 (_12_items -> _12_item .)
    IDENT           reduce using rule 57 (_12_items -> _12_item .)
    THIS            reduce using rule 57 (_12_items -> _12_item .)
    NIL             reduce using rule 57 (_12_items -> _12_item .)
    FALSE           reduce using rule 57 (_12_items -> _12_item .)
    TRUE            reduce using rule 57 (_12_items -> _12_item .)
    STRING          reduce using rule 57 (_12_items -> _12_item .)
    NUM             reduce using rule 57 (_12_items -> _12_item .)
    REAL            reduce using rule 57 (_12_items -> _12_item .)
    RBRACE          reduce using rule 57 (_12_items -> _12_item .)


state 48

    (58) _12_item -> declaration .
    VAR             reduce using rule 58 (_12_item -> declaration .)
    FUN             reduce using rule 58 (_12_item -> declaration .)
    CLASS           reduce using rule 58 (_12_item -> declaration .)
    LBRACE          reduce using rule 58 (_12_item -> declaration .)
    WHILE           reduce using rule 58 (_12_item -> declaration .)
    RETURN          reduce using rule 58 (_12_item -> declaration .)
    PRINT           reduce using rule 58 (_12_item -> declaration .)
    IF              reduce using rule 58 (_12_item -> declaration .)
    FOR             reduce using rule 58 (_12_item -> declaration .)
    NOT             reduce using rule 58 (_12_item -> declaration .)
    MINUS           reduce using rule 58 (_12_item -> declaration .)
    LPAREN          reduce using rule 58 (_12_item -> declaration .)
    SUPER           reduce using rule 58 (_12_item -> declaration .)
    IDENT           reduce using rule 58 (_12_item -> declaration .)
    THIS            reduce using rule 58 (_12_item -> declaration .)
    NIL             reduce using rule 58 (_12_item -> declaration .)
    FALSE           reduce using rule 58 (_12_item -> declaration .)
    TRUE            reduce using rule 58 (_12_item -> declaration .)
    STRING          reduce using rule 58 (_12_item -> declaration .)
    NUM             reduce using rule 58 (_12_item -> declaration .)
    REAL            reduce using rule 58 (_12_item -> declaration .)
    RBRACE          reduce using rule 58 (_12_item -> declaration .)


state 49

    (52) while_stmt -> WHILE LPAREN . expression RPAREN statement
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 83
    factor                         shift and go to state 29

state 50

    (76) factor -> LPAREN expression . RPAREN
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . ASSIGN expression
    RPAREN          shift and go to state 84
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    ASSIGN          shift and go to state 65


state 51

    (30) expr_stmt -> expression SEMI .
    VAR             reduce using rule 30 (expr_stmt -> expression SEMI .)
    FUN             reduce using rule 30 (expr_stmt -> expression SEMI .)
    CLASS           reduce using rule 30 (expr_stmt -> expression SEMI .)
    LBRACE          reduce using rule 30 (expr_stmt -> expression SEMI .)
    WHILE           reduce using rule 30 (expr_stmt -> expression SEMI .)
    RETURN          reduce using rule 30 (expr_stmt -> expression SEMI .)
    PRINT           reduce using rule 30 (expr_stmt -> expression SEMI .)
    IF              reduce using rule 30 (expr_stmt -> expression SEMI .)
    FOR             reduce using rule 30 (expr_stmt -> expression SEMI .)
    NOT             reduce using rule 30 (expr_stmt -> expression SEMI .)
    MINUS           reduce using rule 30 (expr_stmt -> expression SEMI .)
    LPAREN          reduce using rule 30 (expr_stmt -> expression SEMI .)
    SUPER           reduce using rule 30 (expr_stmt -> expression SEMI .)
    IDENT           reduce using rule 30 (expr_stmt -> expression SEMI .)
    THIS            reduce using rule 30 (expr_stmt -> expression SEMI .)
    NIL             reduce using rule 30 (expr_stmt -> expression SEMI .)
    FALSE           reduce using rule 30 (expr_stmt -> expression SEMI .)
    TRUE            reduce using rule 30 (expr_stmt -> expression SEMI .)
    STRING          reduce using rule 30 (expr_stmt -> expression SEMI .)
    NUM             reduce using rule 30 (expr_stmt -> expression SEMI .)
    REAL            reduce using rule 30 (expr_stmt -> expression SEMI .)
    $end            reduce using rule 30 (expr_stmt -> expression SEMI .)
    RBRACE          reduce using rule 30 (expr_stmt -> expression SEMI .)
    SEMI            reduce using rule 30 (expr_stmt -> expression SEMI .)
    ELSE            reduce using rule 30 (expr_stmt -> expression SEMI .)


state 52

    (60) expression -> expression NE . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 85
    factor                         shift and go to state 29

state 53

    (61) expression -> expression EQ . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 86
    factor                         shift and go to state 29

state 54

    (62) expression -> expression GE . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 87
    factor                         shift and go to state 29

state 55

    (63) expression -> expression GT . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 88
    factor                         shift and go to state 29

state 56

    (64) expression -> expression LE . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 89
    factor                         shift and go to state 29

state 57

    (65) expression -> expression LT . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 90
    factor                         shift and go to state 29

state 58

    (66) expression -> expression MODULE . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 91
    factor                         shift and go to state 29

state 59

    (67) expression -> expression DIVIDE . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 92
    factor                         shift and go to state 29

state 60

    (68) expression -> expression TIMES . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 93
    factor                         shift and go to state 29

state 61

    (69) expression -> expression MINUS . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 94
    factor                         shift and go to state 29

state 62

    (70) expression -> expression PLUS . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 95
    factor                         shift and go to state 29

state 63

    (71) expression -> expression AND . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 96
    factor                         shift and go to state 29

state 64

    (72) expression -> expression OR . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 97
    factor                         shift and go to state 29

state 65

    (73) expression -> expression ASSIGN . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 98
    factor                         shift and go to state 29

state 66

    (49) return_stmt -> RETURN _11_optional . SEMI
    SEMI            shift and go to state 99


state 67

    (50) _11_optional -> expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 50 (_11_optional -> expression .)
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    ASSIGN          shift and go to state 65


state 68

    (48) print_stmt -> PRINT expression . SEMI
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . ASSIGN expression
    SEMI            shift and go to state 100
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    ASSIGN          shift and go to state 65


state 69

    (43) if_stmt -> IF LPAREN . _9_optional RPAREN statement _10_optional
    (44) _9_optional -> . expression
    (45) _9_optional -> .
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    RPAREN          reduce using rule 45 (_9_optional -> .)
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    _9_optional                    shift and go to state 101
    expression                     shift and go to state 102
    factor                         shift and go to state 29

state 70

    (31) for_stmt -> FOR LPAREN . SEMI _5_optional SEMI _6_optional RPAREN statement
    (36) for_stmt -> FOR LPAREN . for_initialize _7_optional SEMI _8_optional RPAREN statement
    (41) for_initialize -> . expr_stmt
    (42) for_initialize -> . var_declaration
    (30) expr_stmt -> . expression SEMI
    (20) var_declaration -> . VAR IDENT _4_optional SEMI
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    SEMI            shift and go to state 103
    VAR             shift and go to state 17
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    for_initialize                 shift and go to state 104
    expr_stmt                      shift and go to state 105
    var_declaration                shift and go to state 106
    expression                     shift and go to state 24
    factor                         shift and go to state 29

state 71

    (77) factor -> factor LPAREN . _13_optional RPAREN
    (78) _13_optional -> . arguments
    (79) _13_optional -> .
    (99) arguments -> . expression _16_repeat
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    RPAREN          reduce using rule 79 (_13_optional -> .)
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    factor                         shift and go to state 29
    _13_optional                   shift and go to state 107
    arguments                      shift and go to state 108
    expression                     shift and go to state 109

state 72

    (80) factor -> factor POINT . IDENT
    IDENT           shift and go to state 110


state 73

    (75) factor -> MINUS factor .
    (77) factor -> factor . LPAREN _13_optional RPAREN
    (80) factor -> factor . POINT IDENT
    LPAREN          reduce using rule 75 (factor -> MINUS factor .)
    POINT           reduce using rule 75 (factor -> MINUS factor .)
    SEMI            reduce using rule 75 (factor -> MINUS factor .)
    NE              reduce using rule 75 (factor -> MINUS factor .)
    EQ              reduce using rule 75 (factor -> MINUS factor .)
    GE              reduce using rule 75 (factor -> MINUS factor .)
    GT              reduce using rule 75 (factor -> MINUS factor .)
    LE              reduce using rule 75 (factor -> MINUS factor .)
    LT              reduce using rule 75 (factor -> MINUS factor .)
    MODULE          reduce using rule 75 (factor -> MINUS factor .)
    DIVIDE          reduce using rule 75 (factor -> MINUS factor .)
    TIMES           reduce using rule 75 (factor -> MINUS factor .)
    MINUS           reduce using rule 75 (factor -> MINUS factor .)
    PLUS            reduce using rule 75 (factor -> MINUS factor .)
    AND             reduce using rule 75 (factor -> MINUS factor .)
    OR              reduce using rule 75 (factor -> MINUS factor .)
    ASSIGN          reduce using rule 75 (factor -> MINUS factor .)
    RPAREN          reduce using rule 75 (factor -> MINUS factor .)
    COMMA           reduce using rule 75 (factor -> MINUS factor .)


state 74

    (74) factor -> NOT factor .
    (77) factor -> factor . LPAREN _13_optional RPAREN
    (80) factor -> factor . POINT IDENT
    LPAREN          reduce using rule 74 (factor -> NOT factor .)
    POINT           reduce using rule 74 (factor -> NOT factor .)
    SEMI            reduce using rule 74 (factor -> NOT factor .)
    NE              reduce using rule 74 (factor -> NOT factor .)
    EQ              reduce using rule 74 (factor -> NOT factor .)
    GE              reduce using rule 74 (factor -> NOT factor .)
    GT              reduce using rule 74 (factor -> NOT factor .)
    LE              reduce using rule 74 (factor -> NOT factor .)
    LT              reduce using rule 74 (factor -> NOT factor .)
    MODULE          reduce using rule 74 (factor -> NOT factor .)
    DIVIDE          reduce using rule 74 (factor -> NOT factor .)
    TIMES           reduce using rule 74 (factor -> NOT factor .)
    MINUS           reduce using rule 74 (factor -> NOT factor .)
    PLUS            reduce using rule 74 (factor -> NOT factor .)
    AND             reduce using rule 74 (factor -> NOT factor .)
    OR              reduce using rule 74 (factor -> NOT factor .)
    ASSIGN          reduce using rule 74 (factor -> NOT factor .)
    RPAREN          reduce using rule 74 (factor -> NOT factor .)
    COMMA           reduce using rule 74 (factor -> NOT factor .)


state 75

    (81) factor -> SUPER POINT . IDENT
    IDENT           shift and go to state 111


state 76

    (20) var_declaration -> VAR IDENT _4_optional . SEMI
    SEMI            shift and go to state 112


state 77

    (21) _4_optional -> ASSIGN . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 113
    factor                         shift and go to state 29

state 78

    (90) function -> IDENT LPAREN . _14_optional RPAREN block
    (91) _14_optional -> . parameters
    (92) _14_optional -> .
    (93) parameters -> . IDENT _15_repeat
    RPAREN          reduce using rule 92 (_14_optional -> .)
    IDENT           shift and go to state 114

    _14_optional                   shift and go to state 115
    parameters                     shift and go to state 116

state 79

    (11) class_declaration -> CLASS IDENT _2_optional . LBRACE _3_repeat RBRACE
    LBRACE          shift and go to state 117


state 80

    (12) _2_optional -> LT . IDENT
    IDENT           shift and go to state 118


state 81

    (53) block -> LBRACE _12_repeat RBRACE .
    VAR             reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    FUN             reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    CLASS           reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    LBRACE          reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    WHILE           reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    RETURN          reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    PRINT           reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    IF              reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    FOR             reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    NOT             reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    MINUS           reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    LPAREN          reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    SUPER           reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    IDENT           reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    THIS            reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    NIL             reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    FALSE           reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    TRUE            reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    STRING          reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    NUM             reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    REAL            reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    $end            reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    RBRACE          reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    ELSE            reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)


state 82

    (56) _12_items -> _12_items _12_item .
    VAR             reduce using rule 56 (_12_items -> _12_items _12_item .)
    FUN             reduce using rule 56 (_12_items -> _12_items _12_item .)
    CLASS           reduce using rule 56 (_12_items -> _12_items _12_item .)
    LBRACE          reduce using rule 56 (_12_items -> _12_items _12_item .)
    WHILE           reduce using rule 56 (_12_items -> _12_items _12_item .)
    RETURN          reduce using rule 56 (_12_items -> _12_items _12_item .)
    PRINT           reduce using rule 56 (_12_items -> _12_items _12_item .)
    IF              reduce using rule 56 (_12_items -> _12_items _12_item .)
    FOR             reduce using rule 56 (_12_items -> _12_items _12_item .)
    NOT             reduce using rule 56 (_12_items -> _12_items _12_item .)
    MINUS           reduce using rule 56 (_12_items -> _12_items _12_item .)
    LPAREN          reduce using rule 56 (_12_items -> _12_items _12_item .)
    SUPER           reduce using rule 56 (_12_items -> _12_items _12_item .)
    IDENT           reduce using rule 56 (_12_items -> _12_items _12_item .)
    THIS            reduce using rule 56 (_12_items -> _12_items _12_item .)
    NIL             reduce using rule 56 (_12_items -> _12_items _12_item .)
    FALSE           reduce using rule 56 (_12_items -> _12_items _12_item .)
    TRUE            reduce using rule 56 (_12_items -> _12_items _12_item .)
    STRING          reduce using rule 56 (_12_items -> _12_items _12_item .)
    NUM             reduce using rule 56 (_12_items -> _12_items _12_item .)
    REAL            reduce using rule 56 (_12_items -> _12_items _12_item .)
    RBRACE          reduce using rule 56 (_12_items -> _12_items _12_item .)


state 83

    (52) while_stmt -> WHILE LPAREN expression . RPAREN statement
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . ASSIGN expression
    RPAREN          shift and go to state 119
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    ASSIGN          shift and go to state 65


state 84

    (76) factor -> LPAREN expression RPAREN .
    LPAREN          reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    POINT           reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    NE              reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    EQ              reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    GE              reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    LE              reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    MODULE          reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    ASSIGN          reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 76 (factor -> LPAREN expression RPAREN .)


state 85

    (60) expression -> expression NE expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 60 (expression -> expression NE expression .)
    NE              reduce using rule 60 (expression -> expression NE expression .)
    EQ              reduce using rule 60 (expression -> expression NE expression .)
    AND             reduce using rule 60 (expression -> expression NE expression .)
    OR              reduce using rule 60 (expression -> expression NE expression .)
    ASSIGN          reduce using rule 60 (expression -> expression NE expression .)
    RPAREN          reduce using rule 60 (expression -> expression NE expression .)
    COMMA           reduce using rule 60 (expression -> expression NE expression .)
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62


state 86

    (61) expression -> expression EQ expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 61 (expression -> expression EQ expression .)
    NE              reduce using rule 61 (expression -> expression EQ expression .)
    EQ              reduce using rule 61 (expression -> expression EQ expression .)
    AND             reduce using rule 61 (expression -> expression EQ expression .)
    OR              reduce using rule 61 (expression -> expression EQ expression .)
    ASSIGN          reduce using rule 61 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 61 (expression -> expression EQ expression .)
    COMMA           reduce using rule 61 (expression -> expression EQ expression .)
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62


state 87

    (62) expression -> expression GE expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 62 (expression -> expression GE expression .)
    NE              reduce using rule 62 (expression -> expression GE expression .)
    EQ              reduce using rule 62 (expression -> expression GE expression .)
    GE              reduce using rule 62 (expression -> expression GE expression .)
    GT              reduce using rule 62 (expression -> expression GE expression .)
    LE              reduce using rule 62 (expression -> expression GE expression .)
    LT              reduce using rule 62 (expression -> expression GE expression .)
    AND             reduce using rule 62 (expression -> expression GE expression .)
    OR              reduce using rule 62 (expression -> expression GE expression .)
    ASSIGN          reduce using rule 62 (expression -> expression GE expression .)
    RPAREN          reduce using rule 62 (expression -> expression GE expression .)
    COMMA           reduce using rule 62 (expression -> expression GE expression .)
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62


state 88

    (63) expression -> expression GT expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 63 (expression -> expression GT expression .)
    NE              reduce using rule 63 (expression -> expression GT expression .)
    EQ              reduce using rule 63 (expression -> expression GT expression .)
    GE              reduce using rule 63 (expression -> expression GT expression .)
    GT              reduce using rule 63 (expression -> expression GT expression .)
    LE              reduce using rule 63 (expression -> expression GT expression .)
    LT              reduce using rule 63 (expression -> expression GT expression .)
    AND             reduce using rule 63 (expression -> expression GT expression .)
    OR              reduce using rule 63 (expression -> expression GT expression .)
    ASSIGN          reduce using rule 63 (expression -> expression GT expression .)
    RPAREN          reduce using rule 63 (expression -> expression GT expression .)
    COMMA           reduce using rule 63 (expression -> expression GT expression .)
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62


state 89

    (64) expression -> expression LE expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 64 (expression -> expression LE expression .)
    NE              reduce using rule 64 (expression -> expression LE expression .)
    EQ              reduce using rule 64 (expression -> expression LE expression .)
    GE              reduce using rule 64 (expression -> expression LE expression .)
    GT              reduce using rule 64 (expression -> expression LE expression .)
    LE              reduce using rule 64 (expression -> expression LE expression .)
    LT              reduce using rule 64 (expression -> expression LE expression .)
    AND             reduce using rule 64 (expression -> expression LE expression .)
    OR              reduce using rule 64 (expression -> expression LE expression .)
    ASSIGN          reduce using rule 64 (expression -> expression LE expression .)
    RPAREN          reduce using rule 64 (expression -> expression LE expression .)
    COMMA           reduce using rule 64 (expression -> expression LE expression .)
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62


state 90

    (65) expression -> expression LT expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 65 (expression -> expression LT expression .)
    NE              reduce using rule 65 (expression -> expression LT expression .)
    EQ              reduce using rule 65 (expression -> expression LT expression .)
    GE              reduce using rule 65 (expression -> expression LT expression .)
    GT              reduce using rule 65 (expression -> expression LT expression .)
    LE              reduce using rule 65 (expression -> expression LT expression .)
    LT              reduce using rule 65 (expression -> expression LT expression .)
    AND             reduce using rule 65 (expression -> expression LT expression .)
    OR              reduce using rule 65 (expression -> expression LT expression .)
    ASSIGN          reduce using rule 65 (expression -> expression LT expression .)
    RPAREN          reduce using rule 65 (expression -> expression LT expression .)
    COMMA           reduce using rule 65 (expression -> expression LT expression .)
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62


state 91

    (66) expression -> expression MODULE expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 66 (expression -> expression MODULE expression .)
    NE              reduce using rule 66 (expression -> expression MODULE expression .)
    EQ              reduce using rule 66 (expression -> expression MODULE expression .)
    GE              reduce using rule 66 (expression -> expression MODULE expression .)
    GT              reduce using rule 66 (expression -> expression MODULE expression .)
    LE              reduce using rule 66 (expression -> expression MODULE expression .)
    LT              reduce using rule 66 (expression -> expression MODULE expression .)
    MODULE          reduce using rule 66 (expression -> expression MODULE expression .)
    DIVIDE          reduce using rule 66 (expression -> expression MODULE expression .)
    TIMES           reduce using rule 66 (expression -> expression MODULE expression .)
    MINUS           reduce using rule 66 (expression -> expression MODULE expression .)
    PLUS            reduce using rule 66 (expression -> expression MODULE expression .)
    AND             reduce using rule 66 (expression -> expression MODULE expression .)
    OR              reduce using rule 66 (expression -> expression MODULE expression .)
    ASSIGN          reduce using rule 66 (expression -> expression MODULE expression .)
    RPAREN          reduce using rule 66 (expression -> expression MODULE expression .)
    COMMA           reduce using rule 66 (expression -> expression MODULE expression .)


state 92

    (67) expression -> expression DIVIDE expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 67 (expression -> expression DIVIDE expression .)
    NE              reduce using rule 67 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 67 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 67 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 67 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 67 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 67 (expression -> expression DIVIDE expression .)
    MODULE          reduce using rule 67 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 67 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 67 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 67 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 67 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 67 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 67 (expression -> expression DIVIDE expression .)
    ASSIGN          reduce using rule 67 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 67 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 67 (expression -> expression DIVIDE expression .)


state 93

    (68) expression -> expression TIMES expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 68 (expression -> expression TIMES expression .)
    NE              reduce using rule 68 (expression -> expression TIMES expression .)
    EQ              reduce using rule 68 (expression -> expression TIMES expression .)
    GE              reduce using rule 68 (expression -> expression TIMES expression .)
    GT              reduce using rule 68 (expression -> expression TIMES expression .)
    LE              reduce using rule 68 (expression -> expression TIMES expression .)
    LT              reduce using rule 68 (expression -> expression TIMES expression .)
    MODULE          reduce using rule 68 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 68 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 68 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 68 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 68 (expression -> expression TIMES expression .)
    AND             reduce using rule 68 (expression -> expression TIMES expression .)
    OR              reduce using rule 68 (expression -> expression TIMES expression .)
    ASSIGN          reduce using rule 68 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 68 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 68 (expression -> expression TIMES expression .)


state 94

    (69) expression -> expression MINUS expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 69 (expression -> expression MINUS expression .)
    NE              reduce using rule 69 (expression -> expression MINUS expression .)
    EQ              reduce using rule 69 (expression -> expression MINUS expression .)
    GE              reduce using rule 69 (expression -> expression MINUS expression .)
    GT              reduce using rule 69 (expression -> expression MINUS expression .)
    LE              reduce using rule 69 (expression -> expression MINUS expression .)
    LT              reduce using rule 69 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 69 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 69 (expression -> expression MINUS expression .)
    AND             reduce using rule 69 (expression -> expression MINUS expression .)
    OR              reduce using rule 69 (expression -> expression MINUS expression .)
    ASSIGN          reduce using rule 69 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 69 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 69 (expression -> expression MINUS expression .)
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60


state 95

    (70) expression -> expression PLUS expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 70 (expression -> expression PLUS expression .)
    NE              reduce using rule 70 (expression -> expression PLUS expression .)
    EQ              reduce using rule 70 (expression -> expression PLUS expression .)
    GE              reduce using rule 70 (expression -> expression PLUS expression .)
    GT              reduce using rule 70 (expression -> expression PLUS expression .)
    LE              reduce using rule 70 (expression -> expression PLUS expression .)
    LT              reduce using rule 70 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 70 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 70 (expression -> expression PLUS expression .)
    AND             reduce using rule 70 (expression -> expression PLUS expression .)
    OR              reduce using rule 70 (expression -> expression PLUS expression .)
    ASSIGN          reduce using rule 70 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 70 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 70 (expression -> expression PLUS expression .)
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60


state 96

    (71) expression -> expression AND expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 71 (expression -> expression AND expression .)
    AND             reduce using rule 71 (expression -> expression AND expression .)
    OR              reduce using rule 71 (expression -> expression AND expression .)
    ASSIGN          reduce using rule 71 (expression -> expression AND expression .)
    RPAREN          reduce using rule 71 (expression -> expression AND expression .)
    COMMA           reduce using rule 71 (expression -> expression AND expression .)
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62


state 97

    (72) expression -> expression OR expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 72 (expression -> expression OR expression .)
    OR              reduce using rule 72 (expression -> expression OR expression .)
    ASSIGN          reduce using rule 72 (expression -> expression OR expression .)
    RPAREN          reduce using rule 72 (expression -> expression OR expression .)
    COMMA           reduce using rule 72 (expression -> expression OR expression .)
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63


state 98

    (73) expression -> expression ASSIGN expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 73 (expression -> expression ASSIGN expression .)
    RPAREN          reduce using rule 73 (expression -> expression ASSIGN expression .)
    COMMA           reduce using rule 73 (expression -> expression ASSIGN expression .)
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    ASSIGN          shift and go to state 65


state 99

    (49) return_stmt -> RETURN _11_optional SEMI .
    VAR             reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    FUN             reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    CLASS           reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    LBRACE          reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    WHILE           reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    RETURN          reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    PRINT           reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    IF              reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    FOR             reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    NOT             reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    MINUS           reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    LPAREN          reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    SUPER           reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    IDENT           reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    THIS            reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    NIL             reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    FALSE           reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    TRUE            reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    STRING          reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    NUM             reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    REAL            reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    $end            reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    RBRACE          reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    ELSE            reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)


state 100

    (48) print_stmt -> PRINT expression SEMI .
    VAR             reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    FUN             reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    CLASS           reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    LBRACE          reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    WHILE           reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    RETURN          reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    PRINT           reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    IF              reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    FOR             reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    NOT             reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    MINUS           reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    LPAREN          reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    SUPER           reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    IDENT           reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    THIS            reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    NIL             reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    FALSE           reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    TRUE            reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    STRING          reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    NUM             reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    REAL            reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    $end            reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    RBRACE          reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    ELSE            reduce using rule 48 (print_stmt -> PRINT expression SEMI .)


state 101

    (43) if_stmt -> IF LPAREN _9_optional . RPAREN statement _10_optional
    RPAREN          shift and go to state 120


state 102

    (44) _9_optional -> expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . ASSIGN expression
    RPAREN          reduce using rule 44 (_9_optional -> expression .)
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    ASSIGN          shift and go to state 65


state 103

    (31) for_stmt -> FOR LPAREN SEMI . _5_optional SEMI _6_optional RPAREN statement
    (32) _5_optional -> . expression
    (33) _5_optional -> .
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    SEMI            reduce using rule 33 (_5_optional -> .)
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    _5_optional                    shift and go to state 121
    expression                     shift and go to state 122
    factor                         shift and go to state 29

state 104

    (36) for_stmt -> FOR LPAREN for_initialize . _7_optional SEMI _8_optional RPAREN statement
    (37) _7_optional -> . expression
    (38) _7_optional -> .
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    SEMI            reduce using rule 38 (_7_optional -> .)
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    _7_optional                    shift and go to state 123
    expression                     shift and go to state 124
    factor                         shift and go to state 29

state 105

    (41) for_initialize -> expr_stmt .
    NOT             reduce using rule 41 (for_initialize -> expr_stmt .)
    MINUS           reduce using rule 41 (for_initialize -> expr_stmt .)
    LPAREN          reduce using rule 41 (for_initialize -> expr_stmt .)
    SUPER           reduce using rule 41 (for_initialize -> expr_stmt .)
    IDENT           reduce using rule 41 (for_initialize -> expr_stmt .)
    THIS            reduce using rule 41 (for_initialize -> expr_stmt .)
    NIL             reduce using rule 41 (for_initialize -> expr_stmt .)
    FALSE           reduce using rule 41 (for_initialize -> expr_stmt .)
    TRUE            reduce using rule 41 (for_initialize -> expr_stmt .)
    STRING          reduce using rule 41 (for_initialize -> expr_stmt .)
    NUM             reduce using rule 41 (for_initialize -> expr_stmt .)
    REAL            reduce using rule 41 (for_initialize -> expr_stmt .)
    SEMI            reduce using rule 41 (for_initialize -> expr_stmt .)


state 106

    (42) for_initialize -> var_declaration .
    NOT             reduce using rule 42 (for_initialize -> var_declaration .)
    MINUS           reduce using rule 42 (for_initialize -> var_declaration .)
    LPAREN          reduce using rule 42 (for_initialize -> var_declaration .)
    SUPER           reduce using rule 42 (for_initialize -> var_declaration .)
    IDENT           reduce using rule 42 (for_initialize -> var_declaration .)
    THIS            reduce using rule 42 (for_initialize -> var_declaration .)
    NIL             reduce using rule 42 (for_initialize -> var_declaration .)
    FALSE           reduce using rule 42 (for_initialize -> var_declaration .)
    TRUE            reduce using rule 42 (for_initialize -> var_declaration .)
    STRING          reduce using rule 42 (for_initialize -> var_declaration .)
    NUM             reduce using rule 42 (for_initialize -> var_declaration .)
    REAL            reduce using rule 42 (for_initialize -> var_declaration .)
    SEMI            reduce using rule 42 (for_initialize -> var_declaration .)


state 107

    (77) factor -> factor LPAREN _13_optional . RPAREN
    RPAREN          shift and go to state 125


state 108

    (78) _13_optional -> arguments .
    RPAREN          reduce using rule 78 (_13_optional -> arguments .)


state 109

    (99) arguments -> expression . _16_repeat
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . ASSIGN expression
    (100) _16_repeat -> . _16_items
    (101) _16_repeat -> .
    (102) _16_items -> . _16_items _16_item
    (103) _16_items -> . _16_item
    (104) _16_item -> . COMMA expression
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    ASSIGN          shift and go to state 65
    RPAREN          reduce using rule 101 (_16_repeat -> .)
    COMMA           shift and go to state 129

    _16_repeat                     shift and go to state 126
    _16_items                      shift and go to state 127
    _16_item                       shift and go to state 128

state 110

    (80) factor -> factor POINT IDENT .
    LPAREN          reduce using rule 80 (factor -> factor POINT IDENT .)
    POINT           reduce using rule 80 (factor -> factor POINT IDENT .)
    SEMI            reduce using rule 80 (factor -> factor POINT IDENT .)
    NE              reduce using rule 80 (factor -> factor POINT IDENT .)
    EQ              reduce using rule 80 (factor -> factor POINT IDENT .)
    GE              reduce using rule 80 (factor -> factor POINT IDENT .)
    GT              reduce using rule 80 (factor -> factor POINT IDENT .)
    LE              reduce using rule 80 (factor -> factor POINT IDENT .)
    LT              reduce using rule 80 (factor -> factor POINT IDENT .)
    MODULE          reduce using rule 80 (factor -> factor POINT IDENT .)
    DIVIDE          reduce using rule 80 (factor -> factor POINT IDENT .)
    TIMES           reduce using rule 80 (factor -> factor POINT IDENT .)
    MINUS           reduce using rule 80 (factor -> factor POINT IDENT .)
    PLUS            reduce using rule 80 (factor -> factor POINT IDENT .)
    AND             reduce using rule 80 (factor -> factor POINT IDENT .)
    OR              reduce using rule 80 (factor -> factor POINT IDENT .)
    ASSIGN          reduce using rule 80 (factor -> factor POINT IDENT .)
    RPAREN          reduce using rule 80 (factor -> factor POINT IDENT .)
    COMMA           reduce using rule 80 (factor -> factor POINT IDENT .)


state 111

    (81) factor -> SUPER POINT IDENT .
    LPAREN          reduce using rule 81 (factor -> SUPER POINT IDENT .)
    POINT           reduce using rule 81 (factor -> SUPER POINT IDENT .)
    SEMI            reduce using rule 81 (factor -> SUPER POINT IDENT .)
    NE              reduce using rule 81 (factor -> SUPER POINT IDENT .)
    EQ              reduce using rule 81 (factor -> SUPER POINT IDENT .)
    GE              reduce using rule 81 (factor -> SUPER POINT IDENT .)
    GT              reduce using rule 81 (factor -> SUPER POINT IDENT .)
    LE              reduce using rule 81 (factor -> SUPER POINT IDENT .)
    LT              reduce using rule 81 (factor -> SUPER POINT IDENT .)
    MODULE          reduce using rule 81 (factor -> SUPER POINT IDENT .)
    DIVIDE          reduce using rule 81 (factor -> SUPER POINT IDENT .)
    TIMES           reduce using rule 81 (factor -> SUPER POINT IDENT .)
    MINUS           reduce using rule 81 (factor -> SUPER POINT IDENT .)
    PLUS            reduce using rule 81 (factor -> SUPER POINT IDENT .)
    AND             reduce using rule 81 (factor -> SUPER POINT IDENT .)
    OR              reduce using rule 81 (factor -> SUPER POINT IDENT .)
    ASSIGN          reduce using rule 81 (factor -> SUPER POINT IDENT .)
    RPAREN          reduce using rule 81 (factor -> SUPER POINT IDENT .)
    COMMA           reduce using rule 81 (factor -> SUPER POINT IDENT .)


state 112

    (20) var_declaration -> VAR IDENT _4_optional SEMI .
    VAR             reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    FUN             reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    CLASS           reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    LBRACE          reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    WHILE           reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    RETURN          reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    PRINT           reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    IF              reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    FOR             reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    NOT             reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    MINUS           reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    LPAREN          reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    SUPER           reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    IDENT           reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    THIS            reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    NIL             reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    FALSE           reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    TRUE            reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    STRING          reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    NUM             reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    REAL            reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    $end            reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    RBRACE          reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    SEMI            reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)


state 113

    (21) _4_optional -> ASSIGN expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 21 (_4_optional -> ASSIGN expression .)
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    ASSIGN          shift and go to state 65


state 114

    (93) parameters -> IDENT . _15_repeat
    (94) _15_repeat -> . _15_items
    (95) _15_repeat -> .
    (96) _15_items -> . _15_items _15_item
    (97) _15_items -> . _15_item
    (98) _15_item -> . COMMA IDENT
    RPAREN          reduce using rule 95 (_15_repeat -> .)
    COMMA           shift and go to state 133

    _15_repeat                     shift and go to state 130
    _15_items                      shift and go to state 131
    _15_item                       shift and go to state 132

state 115

    (90) function -> IDENT LPAREN _14_optional . RPAREN block
    RPAREN          shift and go to state 134


state 116

    (91) _14_optional -> parameters .
    RPAREN          reduce using rule 91 (_14_optional -> parameters .)


state 117

    (11) class_declaration -> CLASS IDENT _2_optional LBRACE . _3_repeat RBRACE
    (14) _3_repeat -> . _3_items
    (15) _3_repeat -> .
    (16) _3_items -> . _3_items _3_item
    (17) _3_items -> . _3_item
    (18) _3_item -> . function
    (90) function -> . IDENT LPAREN _14_optional RPAREN block
    RBRACE          reduce using rule 15 (_3_repeat -> .)
    IDENT           shift and go to state 43

    _3_repeat                      shift and go to state 135
    _3_items                       shift and go to state 136
    _3_item                        shift and go to state 137
    function                       shift and go to state 138

state 118

    (12) _2_optional -> LT IDENT .
    LBRACE          reduce using rule 12 (_2_optional -> LT IDENT .)


state 119

    (52) while_stmt -> WHILE LPAREN expression RPAREN . statement
    (23) statement -> . block
    (24) statement -> . while_stmt
    (25) statement -> . return_stmt
    (26) statement -> . print_stmt
    (27) statement -> . if_stmt
    (28) statement -> . for_stmt
    (29) statement -> . expr_stmt
    (53) block -> . LBRACE _12_repeat RBRACE
    (52) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (49) return_stmt -> . RETURN _11_optional SEMI
    (48) print_stmt -> . PRINT expression SEMI
    (43) if_stmt -> . IF LPAREN _9_optional RPAREN statement _10_optional
    (31) for_stmt -> . FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
    (36) for_stmt -> . FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
    (30) expr_stmt -> . expression SEMI
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    LBRACE          shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    FOR             shift and go to state 28
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 24
    statement                      shift and go to state 139
    block                          shift and go to state 10
    while_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    print_stmt                     shift and go to state 13
    if_stmt                        shift and go to state 14
    for_stmt                       shift and go to state 15
    expr_stmt                      shift and go to state 16
    factor                         shift and go to state 29

state 120

    (43) if_stmt -> IF LPAREN _9_optional RPAREN . statement _10_optional
    (23) statement -> . block
    (24) statement -> . while_stmt
    (25) statement -> . return_stmt
    (26) statement -> . print_stmt
    (27) statement -> . if_stmt
    (28) statement -> . for_stmt
    (29) statement -> . expr_stmt
    (53) block -> . LBRACE _12_repeat RBRACE
    (52) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (49) return_stmt -> . RETURN _11_optional SEMI
    (48) print_stmt -> . PRINT expression SEMI
    (43) if_stmt -> . IF LPAREN _9_optional RPAREN statement _10_optional
    (31) for_stmt -> . FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
    (36) for_stmt -> . FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
    (30) expr_stmt -> . expression SEMI
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    LBRACE          shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    FOR             shift and go to state 28
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    statement                      shift and go to state 140
    block                          shift and go to state 10
    while_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    print_stmt                     shift and go to state 13
    if_stmt                        shift and go to state 14
    for_stmt                       shift and go to state 15
    expr_stmt                      shift and go to state 16
    expression                     shift and go to state 24
    factor                         shift and go to state 29

state 121

    (31) for_stmt -> FOR LPAREN SEMI _5_optional . SEMI _6_optional RPAREN statement
    SEMI            shift and go to state 141


state 122

    (32) _5_optional -> expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 32 (_5_optional -> expression .)
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    ASSIGN          shift and go to state 65


state 123

    (36) for_stmt -> FOR LPAREN for_initialize _7_optional . SEMI _8_optional RPAREN statement
    SEMI            shift and go to state 142


state 124

    (37) _7_optional -> expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 37 (_7_optional -> expression .)
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    ASSIGN          shift and go to state 65


state 125

    (77) factor -> factor LPAREN _13_optional RPAREN .
    LPAREN          reduce using rule 77 (factor -> factor LPAREN _13_optional RPAREN .)
    POINT           reduce using rule 77 (factor -> factor LPAREN _13_optional RPAREN .)
    SEMI            reduce using rule 77 (factor -> factor LPAREN _13_optional RPAREN .)
    NE              reduce using rule 77 (factor -> factor LPAREN _13_optional RPAREN .)
    EQ              reduce using rule 77 (factor -> factor LPAREN _13_optional RPAREN .)
    GE              reduce using rule 77 (factor -> factor LPAREN _13_optional RPAREN .)
    GT              reduce using rule 77 (factor -> factor LPAREN _13_optional RPAREN .)
    LE              reduce using rule 77 (factor -> factor LPAREN _13_optional RPAREN .)
    LT              reduce using rule 77 (factor -> factor LPAREN _13_optional RPAREN .)
    MODULE          reduce using rule 77 (factor -> factor LPAREN _13_optional RPAREN .)
    DIVIDE          reduce using rule 77 (factor -> factor LPAREN _13_optional RPAREN .)
    TIMES           reduce using rule 77 (factor -> factor LPAREN _13_optional RPAREN .)
    MINUS           reduce using rule 77 (factor -> factor LPAREN _13_optional RPAREN .)
    PLUS            reduce using rule 77 (factor -> factor LPAREN _13_optional RPAREN .)
    AND             reduce using rule 77 (factor -> factor LPAREN _13_optional RPAREN .)
    OR              reduce using rule 77 (factor -> factor LPAREN _13_optional RPAREN .)
    ASSIGN          reduce using rule 77 (factor -> factor LPAREN _13_optional RPAREN .)
    RPAREN          reduce using rule 77 (factor -> factor LPAREN _13_optional RPAREN .)
    COMMA           reduce using rule 77 (factor -> factor LPAREN _13_optional RPAREN .)


state 126

    (99) arguments -> expression _16_repeat .
    RPAREN          reduce using rule 99 (arguments -> expression _16_repeat .)


state 127

    (100) _16_repeat -> _16_items .
    (102) _16_items -> _16_items . _16_item
    (104) _16_item -> . COMMA expression
    RPAREN          reduce using rule 100 (_16_repeat -> _16_items .)
    COMMA           shift and go to state 129

    _16_item                       shift and go to state 143

state 128

    (103) _16_items -> _16_item .
    COMMA           reduce using rule 103 (_16_items -> _16_item .)
    RPAREN          reduce using rule 103 (_16_items -> _16_item .)


state 129

    (104) _16_item -> COMMA . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 144
    factor                         shift and go to state 29

state 130

    (93) parameters -> IDENT _15_repeat .
    RPAREN          reduce using rule 93 (parameters -> IDENT _15_repeat .)


state 131

    (94) _15_repeat -> _15_items .
    (96) _15_items -> _15_items . _15_item
    (98) _15_item -> . COMMA IDENT
    RPAREN          reduce using rule 94 (_15_repeat -> _15_items .)
    COMMA           shift and go to state 133

    _15_item                       shift and go to state 145

state 132

    (97) _15_items -> _15_item .
    COMMA           reduce using rule 97 (_15_items -> _15_item .)
    RPAREN          reduce using rule 97 (_15_items -> _15_item .)


state 133

    (98) _15_item -> COMMA . IDENT
    IDENT           shift and go to state 146


state 134

    (90) function -> IDENT LPAREN _14_optional RPAREN . block
    (53) block -> . LBRACE _12_repeat RBRACE
    LBRACE          shift and go to state 21

    block                          shift and go to state 147

state 135

    (11) class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat . RBRACE
    RBRACE          shift and go to state 148


state 136

    (14) _3_repeat -> _3_items .
    (16) _3_items -> _3_items . _3_item
    (18) _3_item -> . function
    (90) function -> . IDENT LPAREN _14_optional RPAREN block
    RBRACE          reduce using rule 14 (_3_repeat -> _3_items .)
    IDENT           shift and go to state 43

    _3_item                        shift and go to state 149
    function                       shift and go to state 138

state 137

    (17) _3_items -> _3_item .
    IDENT           reduce using rule 17 (_3_items -> _3_item .)
    RBRACE          reduce using rule 17 (_3_items -> _3_item .)


state 138

    (18) _3_item -> function .
    IDENT           reduce using rule 18 (_3_item -> function .)
    RBRACE          reduce using rule 18 (_3_item -> function .)


state 139

    (52) while_stmt -> WHILE LPAREN expression RPAREN statement .
    VAR             reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    FUN             reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    CLASS           reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    PRINT           reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    FOR             reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    NOT             reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    MINUS           reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    SUPER           reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    IDENT           reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    THIS            reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    NIL             reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    FALSE           reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    TRUE            reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    STRING          reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    NUM             reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    REAL            reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    $end            reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)


state 140

    (43) if_stmt -> IF LPAREN _9_optional RPAREN statement . _10_optional
    (46) _10_optional -> . ELSE statement
    (47) _10_optional -> .
  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 151
    VAR             reduce using rule 47 (_10_optional -> .)
    FUN             reduce using rule 47 (_10_optional -> .)
    CLASS           reduce using rule 47 (_10_optional -> .)
    LBRACE          reduce using rule 47 (_10_optional -> .)
    WHILE           reduce using rule 47 (_10_optional -> .)
    RETURN          reduce using rule 47 (_10_optional -> .)
    PRINT           reduce using rule 47 (_10_optional -> .)
    IF              reduce using rule 47 (_10_optional -> .)
    FOR             reduce using rule 47 (_10_optional -> .)
    NOT             reduce using rule 47 (_10_optional -> .)
    MINUS           reduce using rule 47 (_10_optional -> .)
    LPAREN          reduce using rule 47 (_10_optional -> .)
    SUPER           reduce using rule 47 (_10_optional -> .)
    IDENT           reduce using rule 47 (_10_optional -> .)
    THIS            reduce using rule 47 (_10_optional -> .)
    NIL             reduce using rule 47 (_10_optional -> .)
    FALSE           reduce using rule 47 (_10_optional -> .)
    TRUE            reduce using rule 47 (_10_optional -> .)
    STRING          reduce using rule 47 (_10_optional -> .)
    NUM             reduce using rule 47 (_10_optional -> .)
    REAL            reduce using rule 47 (_10_optional -> .)
    $end            reduce using rule 47 (_10_optional -> .)
    RBRACE          reduce using rule 47 (_10_optional -> .)

    _10_optional                   shift and go to state 150

state 141

    (31) for_stmt -> FOR LPAREN SEMI _5_optional SEMI . _6_optional RPAREN statement
    (34) _6_optional -> . expression
    (35) _6_optional -> .
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    RPAREN          reduce using rule 35 (_6_optional -> .)
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    _6_optional                    shift and go to state 152
    expression                     shift and go to state 153
    factor                         shift and go to state 29

state 142

    (36) for_stmt -> FOR LPAREN for_initialize _7_optional SEMI . _8_optional RPAREN statement
    (39) _8_optional -> . expression
    (40) _8_optional -> .
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    RPAREN          reduce using rule 40 (_8_optional -> .)
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    _8_optional                    shift and go to state 154
    expression                     shift and go to state 155
    factor                         shift and go to state 29

state 143

    (102) _16_items -> _16_items _16_item .
    COMMA           reduce using rule 102 (_16_items -> _16_items _16_item .)
    RPAREN          reduce using rule 102 (_16_items -> _16_items _16_item .)


state 144

    (104) _16_item -> COMMA expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . ASSIGN expression
    COMMA           reduce using rule 104 (_16_item -> COMMA expression .)
    RPAREN          reduce using rule 104 (_16_item -> COMMA expression .)
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    ASSIGN          shift and go to state 65


state 145

    (96) _15_items -> _15_items _15_item .
    COMMA           reduce using rule 96 (_15_items -> _15_items _15_item .)
    RPAREN          reduce using rule 96 (_15_items -> _15_items _15_item .)


state 146

    (98) _15_item -> COMMA IDENT .
    COMMA           reduce using rule 98 (_15_item -> COMMA IDENT .)
    RPAREN          reduce using rule 98 (_15_item -> COMMA IDENT .)


state 147

    (90) function -> IDENT LPAREN _14_optional RPAREN block .
    VAR             reduce using rule 90 (function -> IDENT LPAREN _14_optional RPAREN block .)
    FUN             reduce using rule 90 (function -> IDENT LPAREN _14_optional RPAREN block .)
    CLASS           reduce using rule 90 (function -> IDENT LPAREN _14_optional RPAREN block .)
    LBRACE          reduce using rule 90 (function -> IDENT LPAREN _14_optional RPAREN block .)
    WHILE           reduce using rule 90 (function -> IDENT LPAREN _14_optional RPAREN block .)
    RETURN          reduce using rule 90 (function -> IDENT LPAREN _14_optional RPAREN block .)
    PRINT           reduce using rule 90 (function -> IDENT LPAREN _14_optional RPAREN block .)
    IF              reduce using rule 90 (function -> IDENT LPAREN _14_optional RPAREN block .)
    FOR             reduce using rule 90 (function -> IDENT LPAREN _14_optional RPAREN block .)
    NOT             reduce using rule 90 (function -> IDENT LPAREN _14_optional RPAREN block .)
    MINUS           reduce using rule 90 (function -> IDENT LPAREN _14_optional RPAREN block .)
    LPAREN          reduce using rule 90 (function -> IDENT LPAREN _14_optional RPAREN block .)
    SUPER           reduce using rule 90 (function -> IDENT LPAREN _14_optional RPAREN block .)
    IDENT           reduce using rule 90 (function -> IDENT LPAREN _14_optional RPAREN block .)
    THIS            reduce using rule 90 (function -> IDENT LPAREN _14_optional RPAREN block .)
    NIL             reduce using rule 90 (function -> IDENT LPAREN _14_optional RPAREN block .)
    FALSE           reduce using rule 90 (function -> IDENT LPAREN _14_optional RPAREN block .)
    TRUE            reduce using rule 90 (function -> IDENT LPAREN _14_optional RPAREN block .)
    STRING          reduce using rule 90 (function -> IDENT LPAREN _14_optional RPAREN block .)
    NUM             reduce using rule 90 (function -> IDENT LPAREN _14_optional RPAREN block .)
    REAL            reduce using rule 90 (function -> IDENT LPAREN _14_optional RPAREN block .)
    $end            reduce using rule 90 (function -> IDENT LPAREN _14_optional RPAREN block .)
    RBRACE          reduce using rule 90 (function -> IDENT LPAREN _14_optional RPAREN block .)


state 148

    (11) class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .
    VAR             reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    FUN             reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    CLASS           reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    LBRACE          reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    WHILE           reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    RETURN          reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    PRINT           reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    IF              reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    FOR             reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    NOT             reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    MINUS           reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    LPAREN          reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    SUPER           reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    IDENT           reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    THIS            reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    NIL             reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    FALSE           reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    TRUE            reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    STRING          reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    NUM             reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    REAL            reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    $end            reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    RBRACE          reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)


state 149

    (16) _3_items -> _3_items _3_item .
    IDENT           reduce using rule 16 (_3_items -> _3_items _3_item .)
    RBRACE          reduce using rule 16 (_3_items -> _3_items _3_item .)


state 150

    (43) if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .
    VAR             reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    FUN             reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    CLASS           reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    LBRACE          reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    WHILE           reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    RETURN          reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    PRINT           reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    IF              reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    FOR             reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    NOT             reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    MINUS           reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    LPAREN          reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    SUPER           reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    IDENT           reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    THIS            reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    NIL             reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    FALSE           reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    TRUE            reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    STRING          reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    NUM             reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    REAL            reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    $end            reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    RBRACE          reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    ELSE            reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)


state 151

    (46) _10_optional -> ELSE . statement
    (23) statement -> . block
    (24) statement -> . while_stmt
    (25) statement -> . return_stmt
    (26) statement -> . print_stmt
    (27) statement -> . if_stmt
    (28) statement -> . for_stmt
    (29) statement -> . expr_stmt
    (53) block -> . LBRACE _12_repeat RBRACE
    (52) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (49) return_stmt -> . RETURN _11_optional SEMI
    (48) print_stmt -> . PRINT expression SEMI
    (43) if_stmt -> . IF LPAREN _9_optional RPAREN statement _10_optional
    (31) for_stmt -> . FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
    (36) for_stmt -> . FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
    (30) expr_stmt -> . expression SEMI
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    LBRACE          shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    FOR             shift and go to state 28
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    statement                      shift and go to state 156
    block                          shift and go to state 10
    while_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    print_stmt                     shift and go to state 13
    if_stmt                        shift and go to state 14
    for_stmt                       shift and go to state 15
    expr_stmt                      shift and go to state 16
    expression                     shift and go to state 24
    factor                         shift and go to state 29

state 152

    (31) for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional . RPAREN statement
    RPAREN          shift and go to state 157


state 153

    (34) _6_optional -> expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . ASSIGN expression
    RPAREN          reduce using rule 34 (_6_optional -> expression .)
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    ASSIGN          shift and go to state 65


state 154

    (36) for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional . RPAREN statement
    RPAREN          shift and go to state 158


state 155

    (39) _8_optional -> expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . ASSIGN expression
    RPAREN          reduce using rule 39 (_8_optional -> expression .)
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    ASSIGN          shift and go to state 65


state 156

    (46) _10_optional -> ELSE statement .
    VAR             reduce using rule 46 (_10_optional -> ELSE statement .)
    FUN             reduce using rule 46 (_10_optional -> ELSE statement .)
    CLASS           reduce using rule 46 (_10_optional -> ELSE statement .)
    LBRACE          reduce using rule 46 (_10_optional -> ELSE statement .)
    WHILE           reduce using rule 46 (_10_optional -> ELSE statement .)
    RETURN          reduce using rule 46 (_10_optional -> ELSE statement .)
    PRINT           reduce using rule 46 (_10_optional -> ELSE statement .)
    IF              reduce using rule 46 (_10_optional -> ELSE statement .)
    FOR             reduce using rule 46 (_10_optional -> ELSE statement .)
    NOT             reduce using rule 46 (_10_optional -> ELSE statement .)
    MINUS           reduce using rule 46 (_10_optional -> ELSE statement .)
    LPAREN          reduce using rule 46 (_10_optional -> ELSE statement .)
    SUPER           reduce using rule 46 (_10_optional -> ELSE statement .)
    IDENT           reduce using rule 46 (_10_optional -> ELSE statement .)
    THIS            reduce using rule 46 (_10_optional -> ELSE statement .)
    NIL             reduce using rule 46 (_10_optional -> ELSE statement .)
    FALSE           reduce using rule 46 (_10_optional -> ELSE statement .)
    TRUE            reduce using rule 46 (_10_optional -> ELSE statement .)
    STRING          reduce using rule 46 (_10_optional -> ELSE statement .)
    NUM             reduce using rule 46 (_10_optional -> ELSE statement .)
    REAL            reduce using rule 46 (_10_optional -> ELSE statement .)
    $end            reduce using rule 46 (_10_optional -> ELSE statement .)
    RBRACE          reduce using rule 46 (_10_optional -> ELSE statement .)
    ELSE            reduce using rule 46 (_10_optional -> ELSE statement .)


state 157

    (31) for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN . statement
    (23) statement -> . block
    (24) statement -> . while_stmt
    (25) statement -> . return_stmt
    (26) statement -> . print_stmt
    (27) statement -> . if_stmt
    (28) statement -> . for_stmt
    (29) statement -> . expr_stmt
    (53) block -> . LBRACE _12_repeat RBRACE
    (52) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (49) return_stmt -> . RETURN _11_optional SEMI
    (48) print_stmt -> . PRINT expression SEMI
    (43) if_stmt -> . IF LPAREN _9_optional RPAREN statement _10_optional
    (31) for_stmt -> . FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
    (36) for_stmt -> . FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
    (30) expr_stmt -> . expression SEMI
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    LBRACE          shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    FOR             shift and go to state 28
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    statement                      shift and go to state 159
    block                          shift and go to state 10
    while_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    print_stmt                     shift and go to state 13
    if_stmt                        shift and go to state 14
    for_stmt                       shift and go to state 15
    expr_stmt                      shift and go to state 16
    expression                     shift and go to state 24
    factor                         shift and go to state 29

state 158

    (36) for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN . statement
    (23) statement -> . block
    (24) statement -> . while_stmt
    (25) statement -> . return_stmt
    (26) statement -> . print_stmt
    (27) statement -> . if_stmt
    (28) statement -> . for_stmt
    (29) statement -> . expr_stmt
    (53) block -> . LBRACE _12_repeat RBRACE
    (52) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (49) return_stmt -> . RETURN _11_optional SEMI
    (48) print_stmt -> . PRINT expression SEMI
    (43) if_stmt -> . IF LPAREN _9_optional RPAREN statement _10_optional
    (31) for_stmt -> . FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
    (36) for_stmt -> . FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
    (30) expr_stmt -> . expression SEMI
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression ASSIGN expression
    (74) factor -> . NOT factor
    (75) factor -> . MINUS factor
    (76) factor -> . LPAREN expression RPAREN
    (77) factor -> . factor LPAREN _13_optional RPAREN
    (80) factor -> . factor POINT IDENT
    (81) factor -> . SUPER POINT IDENT
    (82) factor -> . IDENT
    (83) factor -> . THIS
    (84) factor -> . NIL
    (85) factor -> . FALSE
    (86) factor -> . TRUE
    (87) factor -> . STRING
    (88) factor -> . NUM
    (89) factor -> . REAL
    LBRACE          shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    FOR             shift and go to state 28
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    statement                      shift and go to state 160
    block                          shift and go to state 10
    while_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    print_stmt                     shift and go to state 13
    if_stmt                        shift and go to state 14
    for_stmt                       shift and go to state 15
    expr_stmt                      shift and go to state 16
    expression                     shift and go to state 24
    factor                         shift and go to state 29

state 159

    (31) for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .
    VAR             reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    FUN             reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    CLASS           reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    LBRACE          reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    WHILE           reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    RETURN          reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    PRINT           reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    IF              reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    FOR             reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    NOT             reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    MINUS           reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    LPAREN          reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    SUPER           reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    IDENT           reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    THIS            reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    NIL             reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    FALSE           reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    TRUE            reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    STRING          reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    NUM             reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    REAL            reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    $end            reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    RBRACE          reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    ELSE            reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)


state 160

    (36) for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .
    VAR             reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    FUN             reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    CLASS           reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    LBRACE          reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    WHILE           reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    RETURN          reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    PRINT           reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    IF              reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    FOR             reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    NOT             reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    MINUS           reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    LPAREN          reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    SUPER           reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    IDENT           reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    THIS            reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    NIL             reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    FALSE           reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    TRUE            reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    STRING          reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    NUM             reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    REAL            reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    $end            reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    RBRACE          reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    ELSE            reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)


Conflicts:

shift/reduce conflict for ELSE in state 140 resolved as shift