Grammar:

Rule 0     S' -> program
Rule 1     program -> _1_declaration_repeat
Rule 2     _1_declaration_repeat -> _1_declaration_items
Rule 3     _1_declaration_repeat -> <empty>
Rule 4     _1_declaration_items -> _1_declaration_items _1_declaration_item
Rule 5     _1_declaration_items -> _1_declaration_item
Rule 6     _1_declaration_item -> declaration
Rule 7     declaration -> statement
Rule 8     declaration -> var_declaration
Rule 9     declaration -> func_declaration
Rule 10    declaration -> class_declaration
Rule 11    class_declaration -> CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat RBRACE
Rule 12    _2_LPAREN_LT_IDENT_RPAREN_optional -> LPAREN LT IDENT RPAREN
Rule 13    _2_LPAREN_LT_IDENT_RPAREN_optional -> <empty>
Rule 14    _3_function_repeat -> _3_function_items
Rule 15    _3_function_repeat -> <empty>
Rule 16    _3_function_items -> _3_function_items _3_function_item
Rule 17    _3_function_items -> _3_function_item
Rule 18    _3_function_item -> function
Rule 19    func_declaration -> FUN function
Rule 20    var_declaration -> VAR IDENT _4_ASSIGN_expression_optional SEMI
Rule 21    _4_ASSIGN_expression_optional -> ASSIGN expression  [precedence=right, level=6]
Rule 22    _4_ASSIGN_expression_optional -> <empty>
Rule 23    statement -> block
Rule 24    statement -> while_stmt
Rule 25    statement -> return_stmt
Rule 26    statement -> print_stmt
Rule 27    statement -> if_stmt
Rule 28    statement -> for_stmt
Rule 29    statement -> expr_stmt
Rule 30    expr_stmt -> expression SEMI
Rule 31    for_stmt -> FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement
Rule 32    _5_expression_optional -> expression
Rule 33    _5_expression_optional -> <empty>
Rule 34    _6_expression_optional -> expression
Rule 35    _6_expression_optional -> <empty>
Rule 36    for_stmt -> FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement
Rule 37    _7_expression_optional -> expression
Rule 38    _7_expression_optional -> <empty>
Rule 39    _8_expression_optional -> expression
Rule 40    _8_expression_optional -> <empty>
Rule 41    for_initialize -> expr_stmt
Rule 42    for_initialize -> var_declaration
Rule 43    if_stmt -> IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF
Rule 44    _9_expression_optional -> expression
Rule 45    _9_expression_optional -> <empty>
Rule 46    _10_ELSE_statement_optional -> ELSE statement
Rule 47    _10_ELSE_statement_optional -> <empty>
Rule 48    print_stmt -> PRINT LPAREN expression RPAREN SEMI
Rule 49    return_stmt -> RETURN _11_expression_optional SEMI
Rule 50    _11_expression_optional -> expression
Rule 51    _11_expression_optional -> <empty>
Rule 52    while_stmt -> WHILE LPAREN expression RPAREN statement
Rule 53    block -> LBRACE _12_declaration_repeat RBRACE
Rule 54    _12_declaration_repeat -> _12_declaration_items
Rule 55    _12_declaration_repeat -> <empty>
Rule 56    _12_declaration_items -> _12_declaration_items _12_declaration_item
Rule 57    _12_declaration_items -> _12_declaration_item
Rule 58    _12_declaration_item -> declaration
Rule 59    expression -> factor
Rule 60    expression -> expression NE expression  [precedence=left, level=9]
Rule 61    expression -> expression EQ expression  [precedence=left, level=9]
Rule 62    expression -> expression GE expression  [precedence=left, level=10]
Rule 63    expression -> expression GT expression  [precedence=left, level=10]
Rule 64    expression -> expression LE expression  [precedence=left, level=10]
Rule 65    expression -> expression LT expression  [precedence=left, level=10]
Rule 66    expression -> expression MODULE expression  [precedence=left, level=12]
Rule 67    expression -> expression DIVIDE expression  [precedence=left, level=12]
Rule 68    expression -> expression TIMES expression  [precedence=left, level=12]
Rule 69    expression -> expression MINUS expression  [precedence=left, level=11]
Rule 70    expression -> expression PLUS expression  [precedence=left, level=11]
Rule 71    expression -> expression AND expression  [precedence=left, level=8]
Rule 72    expression -> expression OR expression  [precedence=left, level=7]
Rule 73    expression -> expression MODULEEQ expression  [precedence=right, level=5]
Rule 74    expression -> expression DIVIDEEQ expression  [precedence=right, level=4]
Rule 75    expression -> expression TIMESEQ expression  [precedence=right, level=3]
Rule 76    expression -> expression MINEQ expression  [precedence=right, level=2]
Rule 77    expression -> expression ADDEQ expression  [precedence=right, level=1]
Rule 78    expression -> expression ASSIGN expression  [precedence=right, level=6]
Rule 79    factor -> NOT factor  [precedence=right, level=13]
Rule 80    factor -> MINUS factor  [precedence=right, level=13]
Rule 81    factor -> LPAREN expression RPAREN
Rule 82    factor -> factor LPAREN _13_arguments_optional RPAREN
Rule 83    _13_arguments_optional -> arguments
Rule 84    _13_arguments_optional -> <empty>
Rule 85    factor -> factor POINT IDENT
Rule 86    factor -> SUPER POINT IDENT
Rule 87    factor -> IDENT
Rule 88    factor -> THIS
Rule 89    factor -> NIL
Rule 90    factor -> FALSE
Rule 91    factor -> TRUE
Rule 92    factor -> STRING
Rule 93    factor -> NUM
Rule 94    factor -> REAL
Rule 95    function -> IDENT LPAREN _14_parameters_optional RPAREN block
Rule 96    _14_parameters_optional -> parameters
Rule 97    _14_parameters_optional -> <empty>
Rule 98    parameters -> IDENT _15_COMMA_IDENT_repeat
Rule 99    _15_COMMA_IDENT_repeat -> _15_COMMA_IDENT_items
Rule 100   _15_COMMA_IDENT_repeat -> <empty>
Rule 101   _15_COMMA_IDENT_items -> _15_COMMA_IDENT_items _15_COMMA_IDENT_item
Rule 102   _15_COMMA_IDENT_items -> _15_COMMA_IDENT_item
Rule 103   _15_COMMA_IDENT_item -> COMMA IDENT
Rule 104   arguments -> expression _16_COMMA_expression_repeat
Rule 105   _16_COMMA_expression_repeat -> _16_COMMA_expression_items
Rule 106   _16_COMMA_expression_repeat -> <empty>
Rule 107   _16_COMMA_expression_items -> _16_COMMA_expression_items _16_COMMA_expression_item
Rule 108   _16_COMMA_expression_items -> _16_COMMA_expression_item
Rule 109   _16_COMMA_expression_item -> COMMA expression

Terminals, with rules where they appear:

ADDEQ                : 77
AND                  : 71
ASSIGN               : 21 78
CLASS                : 11
COMMA                : 103 109
DIVIDE               : 67
DIVIDEEQ             : 74
ELSE                 : 46
END_IF               : 43
EQ                   : 61
FALSE                : 90
FOR                  : 31 36
FUN                  : 19
GE                   : 62
GT                   : 63
IDENT                : 11 12 20 85 86 87 95 98 103
IF                   : 43
LBRACE               : 11 53
LE                   : 64
LPAREN               : 12 31 36 43 48 52 81 82 95
LT                   : 12 65
MINEQ                : 76
MINUS                : 69 80
MODULE               : 66
MODULEEQ             : 73
NE                   : 60
NIL                  : 89
NOT                  : 79
NUM                  : 93
OR                   : 72
PLUS                 : 70
POINT                : 85 86
PRINT                : 48
RBRACE               : 11 53
REAL                 : 94
RETURN               : 49
RPAREN               : 12 31 36 43 48 52 81 82 95
SEMI                 : 20 30 31 31 36 48 49
STRING               : 92
SUPER                : 86
THIS                 : 88
TIMES                : 68
TIMESEQ              : 75
TRUE                 : 91
VAR                  : 20
WHILE                : 52
error                : 

Nonterminals, with rules where they appear:

_10_ELSE_statement_optional : 43
_11_expression_optional : 49
_12_declaration_item : 56 57
_12_declaration_items : 54 56
_12_declaration_repeat : 53
_13_arguments_optional : 82
_14_parameters_optional : 95
_15_COMMA_IDENT_item : 101 102
_15_COMMA_IDENT_items : 99 101
_15_COMMA_IDENT_repeat : 98
_16_COMMA_expression_item : 107 108
_16_COMMA_expression_items : 105 107
_16_COMMA_expression_repeat : 104
_1_declaration_item  : 4 5
_1_declaration_items : 2 4
_1_declaration_repeat : 1
_2_LPAREN_LT_IDENT_RPAREN_optional : 11
_3_function_item     : 16 17
_3_function_items    : 14 16
_3_function_repeat   : 11
_4_ASSIGN_expression_optional : 20
_5_expression_optional : 31
_6_expression_optional : 31
_7_expression_optional : 36
_8_expression_optional : 36
_9_expression_optional : 43
arguments            : 83
block                : 23 95
class_declaration    : 10
declaration          : 6 58
expr_stmt            : 29 41
expression           : 21 30 32 34 37 39 44 48 50 52 60 60 61 61 62 62 63 63 64 64 65 65 66 66 67 67 68 68 69 69 70 70 71 71 72 72 73 73 74 74 75 75 76 76 77 77 78 78 81 104 109
factor               : 59 79 80 82 85
for_initialize       : 36
for_stmt             : 28
func_declaration     : 9
function             : 18 19
if_stmt              : 27
parameters           : 96
print_stmt           : 26
program              : 0
return_stmt          : 25
statement            : 7 31 36 43 46 52
var_declaration      : 8 42
while_stmt           : 24


state 0

    (0) S' -> . program
    (1) program -> . _1_declaration_repeat
    (2) _1_declaration_repeat -> . _1_declaration_items
    (3) _1_declaration_repeat -> .
    (4) _1_declaration_items -> . _1_declaration_items _1_declaration_item
    (5) _1_declaration_items -> . _1_declaration_item
    (6) _1_declaration_item -> . declaration
    (7) declaration -> . statement
    (8) declaration -> . var_declaration
    (9) declaration -> . func_declaration
    (10) declaration -> . class_declaration
    (23) statement -> . block
    (24) statement -> . while_stmt
    (25) statement -> . return_stmt
    (26) statement -> . print_stmt
    (27) statement -> . if_stmt
    (28) statement -> . for_stmt
    (29) statement -> . expr_stmt
    (20) var_declaration -> . VAR IDENT _4_ASSIGN_expression_optional SEMI
    (19) func_declaration -> . FUN function
    (11) class_declaration -> . CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat RBRACE
    (53) block -> . LBRACE _12_declaration_repeat RBRACE
    (52) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (49) return_stmt -> . RETURN _11_expression_optional SEMI
    (48) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (43) if_stmt -> . IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF
    (31) for_stmt -> . FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement
    (36) for_stmt -> . FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement
    (30) expr_stmt -> . expression SEMI
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    $end            reduce using rule 3 (_1_declaration_repeat -> .)
    VAR             shift and go to state 17
    FUN             shift and go to state 19
    CLASS           shift and go to state 20
    LBRACE          shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    FOR             shift and go to state 28
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    program                        shift and go to state 1
    _1_declaration_repeat          shift and go to state 2
    _1_declaration_items           shift and go to state 3
    _1_declaration_item            shift and go to state 4
    declaration                    shift and go to state 5
    statement                      shift and go to state 6
    var_declaration                shift and go to state 7
    func_declaration               shift and go to state 8
    class_declaration              shift and go to state 9
    block                          shift and go to state 10
    while_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    print_stmt                     shift and go to state 13
    if_stmt                        shift and go to state 14
    for_stmt                       shift and go to state 15
    expr_stmt                      shift and go to state 16
    expression                     shift and go to state 24
    factor                         shift and go to state 29

state 1

    (0) S' -> program .


state 2

    (1) program -> _1_declaration_repeat .
    $end            reduce using rule 1 (program -> _1_declaration_repeat .)


state 3

    (2) _1_declaration_repeat -> _1_declaration_items .
    (4) _1_declaration_items -> _1_declaration_items . _1_declaration_item
    (6) _1_declaration_item -> . declaration
    (7) declaration -> . statement
    (8) declaration -> . var_declaration
    (9) declaration -> . func_declaration
    (10) declaration -> . class_declaration
    (23) statement -> . block
    (24) statement -> . while_stmt
    (25) statement -> . return_stmt
    (26) statement -> . print_stmt
    (27) statement -> . if_stmt
    (28) statement -> . for_stmt
    (29) statement -> . expr_stmt
    (20) var_declaration -> . VAR IDENT _4_ASSIGN_expression_optional SEMI
    (19) func_declaration -> . FUN function
    (11) class_declaration -> . CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat RBRACE
    (53) block -> . LBRACE _12_declaration_repeat RBRACE
    (52) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (49) return_stmt -> . RETURN _11_expression_optional SEMI
    (48) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (43) if_stmt -> . IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF
    (31) for_stmt -> . FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement
    (36) for_stmt -> . FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement
    (30) expr_stmt -> . expression SEMI
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    $end            reduce using rule 2 (_1_declaration_repeat -> _1_declaration_items .)
    VAR             shift and go to state 17
    FUN             shift and go to state 19
    CLASS           shift and go to state 20
    LBRACE          shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    FOR             shift and go to state 28
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    _1_declaration_item            shift and go to state 40
    declaration                    shift and go to state 5
    statement                      shift and go to state 6
    var_declaration                shift and go to state 7
    func_declaration               shift and go to state 8
    class_declaration              shift and go to state 9
    block                          shift and go to state 10
    while_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    print_stmt                     shift and go to state 13
    if_stmt                        shift and go to state 14
    for_stmt                       shift and go to state 15
    expr_stmt                      shift and go to state 16
    expression                     shift and go to state 24
    factor                         shift and go to state 29

state 4

    (5) _1_declaration_items -> _1_declaration_item .
    VAR             reduce using rule 5 (_1_declaration_items -> _1_declaration_item .)
    FUN             reduce using rule 5 (_1_declaration_items -> _1_declaration_item .)
    CLASS           reduce using rule 5 (_1_declaration_items -> _1_declaration_item .)
    LBRACE          reduce using rule 5 (_1_declaration_items -> _1_declaration_item .)
    WHILE           reduce using rule 5 (_1_declaration_items -> _1_declaration_item .)
    RETURN          reduce using rule 5 (_1_declaration_items -> _1_declaration_item .)
    PRINT           reduce using rule 5 (_1_declaration_items -> _1_declaration_item .)
    IF              reduce using rule 5 (_1_declaration_items -> _1_declaration_item .)
    FOR             reduce using rule 5 (_1_declaration_items -> _1_declaration_item .)
    NOT             reduce using rule 5 (_1_declaration_items -> _1_declaration_item .)
    MINUS           reduce using rule 5 (_1_declaration_items -> _1_declaration_item .)
    LPAREN          reduce using rule 5 (_1_declaration_items -> _1_declaration_item .)
    SUPER           reduce using rule 5 (_1_declaration_items -> _1_declaration_item .)
    IDENT           reduce using rule 5 (_1_declaration_items -> _1_declaration_item .)
    THIS            reduce using rule 5 (_1_declaration_items -> _1_declaration_item .)
    NIL             reduce using rule 5 (_1_declaration_items -> _1_declaration_item .)
    FALSE           reduce using rule 5 (_1_declaration_items -> _1_declaration_item .)
    TRUE            reduce using rule 5 (_1_declaration_items -> _1_declaration_item .)
    STRING          reduce using rule 5 (_1_declaration_items -> _1_declaration_item .)
    NUM             reduce using rule 5 (_1_declaration_items -> _1_declaration_item .)
    REAL            reduce using rule 5 (_1_declaration_items -> _1_declaration_item .)
    $end            reduce using rule 5 (_1_declaration_items -> _1_declaration_item .)


state 5

    (6) _1_declaration_item -> declaration .
    VAR             reduce using rule 6 (_1_declaration_item -> declaration .)
    FUN             reduce using rule 6 (_1_declaration_item -> declaration .)
    CLASS           reduce using rule 6 (_1_declaration_item -> declaration .)
    LBRACE          reduce using rule 6 (_1_declaration_item -> declaration .)
    WHILE           reduce using rule 6 (_1_declaration_item -> declaration .)
    RETURN          reduce using rule 6 (_1_declaration_item -> declaration .)
    PRINT           reduce using rule 6 (_1_declaration_item -> declaration .)
    IF              reduce using rule 6 (_1_declaration_item -> declaration .)
    FOR             reduce using rule 6 (_1_declaration_item -> declaration .)
    NOT             reduce using rule 6 (_1_declaration_item -> declaration .)
    MINUS           reduce using rule 6 (_1_declaration_item -> declaration .)
    LPAREN          reduce using rule 6 (_1_declaration_item -> declaration .)
    SUPER           reduce using rule 6 (_1_declaration_item -> declaration .)
    IDENT           reduce using rule 6 (_1_declaration_item -> declaration .)
    THIS            reduce using rule 6 (_1_declaration_item -> declaration .)
    NIL             reduce using rule 6 (_1_declaration_item -> declaration .)
    FALSE           reduce using rule 6 (_1_declaration_item -> declaration .)
    TRUE            reduce using rule 6 (_1_declaration_item -> declaration .)
    STRING          reduce using rule 6 (_1_declaration_item -> declaration .)
    NUM             reduce using rule 6 (_1_declaration_item -> declaration .)
    REAL            reduce using rule 6 (_1_declaration_item -> declaration .)
    $end            reduce using rule 6 (_1_declaration_item -> declaration .)


state 6

    (7) declaration -> statement .
    VAR             reduce using rule 7 (declaration -> statement .)
    FUN             reduce using rule 7 (declaration -> statement .)
    CLASS           reduce using rule 7 (declaration -> statement .)
    LBRACE          reduce using rule 7 (declaration -> statement .)
    WHILE           reduce using rule 7 (declaration -> statement .)
    RETURN          reduce using rule 7 (declaration -> statement .)
    PRINT           reduce using rule 7 (declaration -> statement .)
    IF              reduce using rule 7 (declaration -> statement .)
    FOR             reduce using rule 7 (declaration -> statement .)
    NOT             reduce using rule 7 (declaration -> statement .)
    MINUS           reduce using rule 7 (declaration -> statement .)
    LPAREN          reduce using rule 7 (declaration -> statement .)
    SUPER           reduce using rule 7 (declaration -> statement .)
    IDENT           reduce using rule 7 (declaration -> statement .)
    THIS            reduce using rule 7 (declaration -> statement .)
    NIL             reduce using rule 7 (declaration -> statement .)
    FALSE           reduce using rule 7 (declaration -> statement .)
    TRUE            reduce using rule 7 (declaration -> statement .)
    STRING          reduce using rule 7 (declaration -> statement .)
    NUM             reduce using rule 7 (declaration -> statement .)
    REAL            reduce using rule 7 (declaration -> statement .)
    $end            reduce using rule 7 (declaration -> statement .)
    RBRACE          reduce using rule 7 (declaration -> statement .)


state 7

    (8) declaration -> var_declaration .
    VAR             reduce using rule 8 (declaration -> var_declaration .)
    FUN             reduce using rule 8 (declaration -> var_declaration .)
    CLASS           reduce using rule 8 (declaration -> var_declaration .)
    LBRACE          reduce using rule 8 (declaration -> var_declaration .)
    WHILE           reduce using rule 8 (declaration -> var_declaration .)
    RETURN          reduce using rule 8 (declaration -> var_declaration .)
    PRINT           reduce using rule 8 (declaration -> var_declaration .)
    IF              reduce using rule 8 (declaration -> var_declaration .)
    FOR             reduce using rule 8 (declaration -> var_declaration .)
    NOT             reduce using rule 8 (declaration -> var_declaration .)
    MINUS           reduce using rule 8 (declaration -> var_declaration .)
    LPAREN          reduce using rule 8 (declaration -> var_declaration .)
    SUPER           reduce using rule 8 (declaration -> var_declaration .)
    IDENT           reduce using rule 8 (declaration -> var_declaration .)
    THIS            reduce using rule 8 (declaration -> var_declaration .)
    NIL             reduce using rule 8 (declaration -> var_declaration .)
    FALSE           reduce using rule 8 (declaration -> var_declaration .)
    TRUE            reduce using rule 8 (declaration -> var_declaration .)
    STRING          reduce using rule 8 (declaration -> var_declaration .)
    NUM             reduce using rule 8 (declaration -> var_declaration .)
    REAL            reduce using rule 8 (declaration -> var_declaration .)
    $end            reduce using rule 8 (declaration -> var_declaration .)
    RBRACE          reduce using rule 8 (declaration -> var_declaration .)


state 8

    (9) declaration -> func_declaration .
    VAR             reduce using rule 9 (declaration -> func_declaration .)
    FUN             reduce using rule 9 (declaration -> func_declaration .)
    CLASS           reduce using rule 9 (declaration -> func_declaration .)
    LBRACE          reduce using rule 9 (declaration -> func_declaration .)
    WHILE           reduce using rule 9 (declaration -> func_declaration .)
    RETURN          reduce using rule 9 (declaration -> func_declaration .)
    PRINT           reduce using rule 9 (declaration -> func_declaration .)
    IF              reduce using rule 9 (declaration -> func_declaration .)
    FOR             reduce using rule 9 (declaration -> func_declaration .)
    NOT             reduce using rule 9 (declaration -> func_declaration .)
    MINUS           reduce using rule 9 (declaration -> func_declaration .)
    LPAREN          reduce using rule 9 (declaration -> func_declaration .)
    SUPER           reduce using rule 9 (declaration -> func_declaration .)
    IDENT           reduce using rule 9 (declaration -> func_declaration .)
    THIS            reduce using rule 9 (declaration -> func_declaration .)
    NIL             reduce using rule 9 (declaration -> func_declaration .)
    FALSE           reduce using rule 9 (declaration -> func_declaration .)
    TRUE            reduce using rule 9 (declaration -> func_declaration .)
    STRING          reduce using rule 9 (declaration -> func_declaration .)
    NUM             reduce using rule 9 (declaration -> func_declaration .)
    REAL            reduce using rule 9 (declaration -> func_declaration .)
    $end            reduce using rule 9 (declaration -> func_declaration .)
    RBRACE          reduce using rule 9 (declaration -> func_declaration .)


state 9

    (10) declaration -> class_declaration .
    VAR             reduce using rule 10 (declaration -> class_declaration .)
    FUN             reduce using rule 10 (declaration -> class_declaration .)
    CLASS           reduce using rule 10 (declaration -> class_declaration .)
    LBRACE          reduce using rule 10 (declaration -> class_declaration .)
    WHILE           reduce using rule 10 (declaration -> class_declaration .)
    RETURN          reduce using rule 10 (declaration -> class_declaration .)
    PRINT           reduce using rule 10 (declaration -> class_declaration .)
    IF              reduce using rule 10 (declaration -> class_declaration .)
    FOR             reduce using rule 10 (declaration -> class_declaration .)
    NOT             reduce using rule 10 (declaration -> class_declaration .)
    MINUS           reduce using rule 10 (declaration -> class_declaration .)
    LPAREN          reduce using rule 10 (declaration -> class_declaration .)
    SUPER           reduce using rule 10 (declaration -> class_declaration .)
    IDENT           reduce using rule 10 (declaration -> class_declaration .)
    THIS            reduce using rule 10 (declaration -> class_declaration .)
    NIL             reduce using rule 10 (declaration -> class_declaration .)
    FALSE           reduce using rule 10 (declaration -> class_declaration .)
    TRUE            reduce using rule 10 (declaration -> class_declaration .)
    STRING          reduce using rule 10 (declaration -> class_declaration .)
    NUM             reduce using rule 10 (declaration -> class_declaration .)
    REAL            reduce using rule 10 (declaration -> class_declaration .)
    $end            reduce using rule 10 (declaration -> class_declaration .)
    RBRACE          reduce using rule 10 (declaration -> class_declaration .)


state 10

    (23) statement -> block .
    VAR             reduce using rule 23 (statement -> block .)
    FUN             reduce using rule 23 (statement -> block .)
    CLASS           reduce using rule 23 (statement -> block .)
    LBRACE          reduce using rule 23 (statement -> block .)
    WHILE           reduce using rule 23 (statement -> block .)
    RETURN          reduce using rule 23 (statement -> block .)
    PRINT           reduce using rule 23 (statement -> block .)
    IF              reduce using rule 23 (statement -> block .)
    FOR             reduce using rule 23 (statement -> block .)
    NOT             reduce using rule 23 (statement -> block .)
    MINUS           reduce using rule 23 (statement -> block .)
    LPAREN          reduce using rule 23 (statement -> block .)
    SUPER           reduce using rule 23 (statement -> block .)
    IDENT           reduce using rule 23 (statement -> block .)
    THIS            reduce using rule 23 (statement -> block .)
    NIL             reduce using rule 23 (statement -> block .)
    FALSE           reduce using rule 23 (statement -> block .)
    TRUE            reduce using rule 23 (statement -> block .)
    STRING          reduce using rule 23 (statement -> block .)
    NUM             reduce using rule 23 (statement -> block .)
    REAL            reduce using rule 23 (statement -> block .)
    $end            reduce using rule 23 (statement -> block .)
    RBRACE          reduce using rule 23 (statement -> block .)
    ELSE            reduce using rule 23 (statement -> block .)
    END_IF          reduce using rule 23 (statement -> block .)


state 11

    (24) statement -> while_stmt .
    VAR             reduce using rule 24 (statement -> while_stmt .)
    FUN             reduce using rule 24 (statement -> while_stmt .)
    CLASS           reduce using rule 24 (statement -> while_stmt .)
    LBRACE          reduce using rule 24 (statement -> while_stmt .)
    WHILE           reduce using rule 24 (statement -> while_stmt .)
    RETURN          reduce using rule 24 (statement -> while_stmt .)
    PRINT           reduce using rule 24 (statement -> while_stmt .)
    IF              reduce using rule 24 (statement -> while_stmt .)
    FOR             reduce using rule 24 (statement -> while_stmt .)
    NOT             reduce using rule 24 (statement -> while_stmt .)
    MINUS           reduce using rule 24 (statement -> while_stmt .)
    LPAREN          reduce using rule 24 (statement -> while_stmt .)
    SUPER           reduce using rule 24 (statement -> while_stmt .)
    IDENT           reduce using rule 24 (statement -> while_stmt .)
    THIS            reduce using rule 24 (statement -> while_stmt .)
    NIL             reduce using rule 24 (statement -> while_stmt .)
    FALSE           reduce using rule 24 (statement -> while_stmt .)
    TRUE            reduce using rule 24 (statement -> while_stmt .)
    STRING          reduce using rule 24 (statement -> while_stmt .)
    NUM             reduce using rule 24 (statement -> while_stmt .)
    REAL            reduce using rule 24 (statement -> while_stmt .)
    $end            reduce using rule 24 (statement -> while_stmt .)
    RBRACE          reduce using rule 24 (statement -> while_stmt .)
    ELSE            reduce using rule 24 (statement -> while_stmt .)
    END_IF          reduce using rule 24 (statement -> while_stmt .)


state 12

    (25) statement -> return_stmt .
    VAR             reduce using rule 25 (statement -> return_stmt .)
    FUN             reduce using rule 25 (statement -> return_stmt .)
    CLASS           reduce using rule 25 (statement -> return_stmt .)
    LBRACE          reduce using rule 25 (statement -> return_stmt .)
    WHILE           reduce using rule 25 (statement -> return_stmt .)
    RETURN          reduce using rule 25 (statement -> return_stmt .)
    PRINT           reduce using rule 25 (statement -> return_stmt .)
    IF              reduce using rule 25 (statement -> return_stmt .)
    FOR             reduce using rule 25 (statement -> return_stmt .)
    NOT             reduce using rule 25 (statement -> return_stmt .)
    MINUS           reduce using rule 25 (statement -> return_stmt .)
    LPAREN          reduce using rule 25 (statement -> return_stmt .)
    SUPER           reduce using rule 25 (statement -> return_stmt .)
    IDENT           reduce using rule 25 (statement -> return_stmt .)
    THIS            reduce using rule 25 (statement -> return_stmt .)
    NIL             reduce using rule 25 (statement -> return_stmt .)
    FALSE           reduce using rule 25 (statement -> return_stmt .)
    TRUE            reduce using rule 25 (statement -> return_stmt .)
    STRING          reduce using rule 25 (statement -> return_stmt .)
    NUM             reduce using rule 25 (statement -> return_stmt .)
    REAL            reduce using rule 25 (statement -> return_stmt .)
    $end            reduce using rule 25 (statement -> return_stmt .)
    RBRACE          reduce using rule 25 (statement -> return_stmt .)
    ELSE            reduce using rule 25 (statement -> return_stmt .)
    END_IF          reduce using rule 25 (statement -> return_stmt .)


state 13

    (26) statement -> print_stmt .
    VAR             reduce using rule 26 (statement -> print_stmt .)
    FUN             reduce using rule 26 (statement -> print_stmt .)
    CLASS           reduce using rule 26 (statement -> print_stmt .)
    LBRACE          reduce using rule 26 (statement -> print_stmt .)
    WHILE           reduce using rule 26 (statement -> print_stmt .)
    RETURN          reduce using rule 26 (statement -> print_stmt .)
    PRINT           reduce using rule 26 (statement -> print_stmt .)
    IF              reduce using rule 26 (statement -> print_stmt .)
    FOR             reduce using rule 26 (statement -> print_stmt .)
    NOT             reduce using rule 26 (statement -> print_stmt .)
    MINUS           reduce using rule 26 (statement -> print_stmt .)
    LPAREN          reduce using rule 26 (statement -> print_stmt .)
    SUPER           reduce using rule 26 (statement -> print_stmt .)
    IDENT           reduce using rule 26 (statement -> print_stmt .)
    THIS            reduce using rule 26 (statement -> print_stmt .)
    NIL             reduce using rule 26 (statement -> print_stmt .)
    FALSE           reduce using rule 26 (statement -> print_stmt .)
    TRUE            reduce using rule 26 (statement -> print_stmt .)
    STRING          reduce using rule 26 (statement -> print_stmt .)
    NUM             reduce using rule 26 (statement -> print_stmt .)
    REAL            reduce using rule 26 (statement -> print_stmt .)
    $end            reduce using rule 26 (statement -> print_stmt .)
    RBRACE          reduce using rule 26 (statement -> print_stmt .)
    ELSE            reduce using rule 26 (statement -> print_stmt .)
    END_IF          reduce using rule 26 (statement -> print_stmt .)


state 14

    (27) statement -> if_stmt .
    VAR             reduce using rule 27 (statement -> if_stmt .)
    FUN             reduce using rule 27 (statement -> if_stmt .)
    CLASS           reduce using rule 27 (statement -> if_stmt .)
    LBRACE          reduce using rule 27 (statement -> if_stmt .)
    WHILE           reduce using rule 27 (statement -> if_stmt .)
    RETURN          reduce using rule 27 (statement -> if_stmt .)
    PRINT           reduce using rule 27 (statement -> if_stmt .)
    IF              reduce using rule 27 (statement -> if_stmt .)
    FOR             reduce using rule 27 (statement -> if_stmt .)
    NOT             reduce using rule 27 (statement -> if_stmt .)
    MINUS           reduce using rule 27 (statement -> if_stmt .)
    LPAREN          reduce using rule 27 (statement -> if_stmt .)
    SUPER           reduce using rule 27 (statement -> if_stmt .)
    IDENT           reduce using rule 27 (statement -> if_stmt .)
    THIS            reduce using rule 27 (statement -> if_stmt .)
    NIL             reduce using rule 27 (statement -> if_stmt .)
    FALSE           reduce using rule 27 (statement -> if_stmt .)
    TRUE            reduce using rule 27 (statement -> if_stmt .)
    STRING          reduce using rule 27 (statement -> if_stmt .)
    NUM             reduce using rule 27 (statement -> if_stmt .)
    REAL            reduce using rule 27 (statement -> if_stmt .)
    $end            reduce using rule 27 (statement -> if_stmt .)
    RBRACE          reduce using rule 27 (statement -> if_stmt .)
    ELSE            reduce using rule 27 (statement -> if_stmt .)
    END_IF          reduce using rule 27 (statement -> if_stmt .)


state 15

    (28) statement -> for_stmt .
    VAR             reduce using rule 28 (statement -> for_stmt .)
    FUN             reduce using rule 28 (statement -> for_stmt .)
    CLASS           reduce using rule 28 (statement -> for_stmt .)
    LBRACE          reduce using rule 28 (statement -> for_stmt .)
    WHILE           reduce using rule 28 (statement -> for_stmt .)
    RETURN          reduce using rule 28 (statement -> for_stmt .)
    PRINT           reduce using rule 28 (statement -> for_stmt .)
    IF              reduce using rule 28 (statement -> for_stmt .)
    FOR             reduce using rule 28 (statement -> for_stmt .)
    NOT             reduce using rule 28 (statement -> for_stmt .)
    MINUS           reduce using rule 28 (statement -> for_stmt .)
    LPAREN          reduce using rule 28 (statement -> for_stmt .)
    SUPER           reduce using rule 28 (statement -> for_stmt .)
    IDENT           reduce using rule 28 (statement -> for_stmt .)
    THIS            reduce using rule 28 (statement -> for_stmt .)
    NIL             reduce using rule 28 (statement -> for_stmt .)
    FALSE           reduce using rule 28 (statement -> for_stmt .)
    TRUE            reduce using rule 28 (statement -> for_stmt .)
    STRING          reduce using rule 28 (statement -> for_stmt .)
    NUM             reduce using rule 28 (statement -> for_stmt .)
    REAL            reduce using rule 28 (statement -> for_stmt .)
    $end            reduce using rule 28 (statement -> for_stmt .)
    RBRACE          reduce using rule 28 (statement -> for_stmt .)
    ELSE            reduce using rule 28 (statement -> for_stmt .)
    END_IF          reduce using rule 28 (statement -> for_stmt .)


state 16

    (29) statement -> expr_stmt .
    VAR             reduce using rule 29 (statement -> expr_stmt .)
    FUN             reduce using rule 29 (statement -> expr_stmt .)
    CLASS           reduce using rule 29 (statement -> expr_stmt .)
    LBRACE          reduce using rule 29 (statement -> expr_stmt .)
    WHILE           reduce using rule 29 (statement -> expr_stmt .)
    RETURN          reduce using rule 29 (statement -> expr_stmt .)
    PRINT           reduce using rule 29 (statement -> expr_stmt .)
    IF              reduce using rule 29 (statement -> expr_stmt .)
    FOR             reduce using rule 29 (statement -> expr_stmt .)
    NOT             reduce using rule 29 (statement -> expr_stmt .)
    MINUS           reduce using rule 29 (statement -> expr_stmt .)
    LPAREN          reduce using rule 29 (statement -> expr_stmt .)
    SUPER           reduce using rule 29 (statement -> expr_stmt .)
    IDENT           reduce using rule 29 (statement -> expr_stmt .)
    THIS            reduce using rule 29 (statement -> expr_stmt .)
    NIL             reduce using rule 29 (statement -> expr_stmt .)
    FALSE           reduce using rule 29 (statement -> expr_stmt .)
    TRUE            reduce using rule 29 (statement -> expr_stmt .)
    STRING          reduce using rule 29 (statement -> expr_stmt .)
    NUM             reduce using rule 29 (statement -> expr_stmt .)
    REAL            reduce using rule 29 (statement -> expr_stmt .)
    $end            reduce using rule 29 (statement -> expr_stmt .)
    RBRACE          reduce using rule 29 (statement -> expr_stmt .)
    ELSE            reduce using rule 29 (statement -> expr_stmt .)
    END_IF          reduce using rule 29 (statement -> expr_stmt .)


state 17

    (20) var_declaration -> VAR . IDENT _4_ASSIGN_expression_optional SEMI
    IDENT           shift and go to state 41


state 18

    (87) factor -> IDENT .
    LPAREN          reduce using rule 87 (factor -> IDENT .)
    POINT           reduce using rule 87 (factor -> IDENT .)
    SEMI            reduce using rule 87 (factor -> IDENT .)
    NE              reduce using rule 87 (factor -> IDENT .)
    EQ              reduce using rule 87 (factor -> IDENT .)
    GE              reduce using rule 87 (factor -> IDENT .)
    GT              reduce using rule 87 (factor -> IDENT .)
    LE              reduce using rule 87 (factor -> IDENT .)
    LT              reduce using rule 87 (factor -> IDENT .)
    MODULE          reduce using rule 87 (factor -> IDENT .)
    DIVIDE          reduce using rule 87 (factor -> IDENT .)
    TIMES           reduce using rule 87 (factor -> IDENT .)
    MINUS           reduce using rule 87 (factor -> IDENT .)
    PLUS            reduce using rule 87 (factor -> IDENT .)
    AND             reduce using rule 87 (factor -> IDENT .)
    OR              reduce using rule 87 (factor -> IDENT .)
    MODULEEQ        reduce using rule 87 (factor -> IDENT .)
    DIVIDEEQ        reduce using rule 87 (factor -> IDENT .)
    TIMESEQ         reduce using rule 87 (factor -> IDENT .)
    MINEQ           reduce using rule 87 (factor -> IDENT .)
    ADDEQ           reduce using rule 87 (factor -> IDENT .)
    ASSIGN          reduce using rule 87 (factor -> IDENT .)
    RPAREN          reduce using rule 87 (factor -> IDENT .)
    COMMA           reduce using rule 87 (factor -> IDENT .)


state 19

    (19) func_declaration -> FUN . function
    (95) function -> . IDENT LPAREN _14_parameters_optional RPAREN block
    IDENT           shift and go to state 43

    function                       shift and go to state 42

state 20

    (11) class_declaration -> CLASS . IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat RBRACE
    IDENT           shift and go to state 44


state 21

    (53) block -> LBRACE . _12_declaration_repeat RBRACE
    (54) _12_declaration_repeat -> . _12_declaration_items
    (55) _12_declaration_repeat -> .
    (56) _12_declaration_items -> . _12_declaration_items _12_declaration_item
    (57) _12_declaration_items -> . _12_declaration_item
    (58) _12_declaration_item -> . declaration
    (7) declaration -> . statement
    (8) declaration -> . var_declaration
    (9) declaration -> . func_declaration
    (10) declaration -> . class_declaration
    (23) statement -> . block
    (24) statement -> . while_stmt
    (25) statement -> . return_stmt
    (26) statement -> . print_stmt
    (27) statement -> . if_stmt
    (28) statement -> . for_stmt
    (29) statement -> . expr_stmt
    (20) var_declaration -> . VAR IDENT _4_ASSIGN_expression_optional SEMI
    (19) func_declaration -> . FUN function
    (11) class_declaration -> . CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat RBRACE
    (53) block -> . LBRACE _12_declaration_repeat RBRACE
    (52) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (49) return_stmt -> . RETURN _11_expression_optional SEMI
    (48) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (43) if_stmt -> . IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF
    (31) for_stmt -> . FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement
    (36) for_stmt -> . FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement
    (30) expr_stmt -> . expression SEMI
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    RBRACE          reduce using rule 55 (_12_declaration_repeat -> .)
    VAR             shift and go to state 17
    FUN             shift and go to state 19
    CLASS           shift and go to state 20
    LBRACE          shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    FOR             shift and go to state 28
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    _12_declaration_repeat         shift and go to state 45
    _12_declaration_items          shift and go to state 46
    _12_declaration_item           shift and go to state 47
    declaration                    shift and go to state 48
    statement                      shift and go to state 6
    var_declaration                shift and go to state 7
    func_declaration               shift and go to state 8
    class_declaration              shift and go to state 9
    block                          shift and go to state 10
    while_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    print_stmt                     shift and go to state 13
    if_stmt                        shift and go to state 14
    for_stmt                       shift and go to state 15
    expr_stmt                      shift and go to state 16
    expression                     shift and go to state 24
    factor                         shift and go to state 29

state 22

    (52) while_stmt -> WHILE . LPAREN expression RPAREN statement
    LPAREN          shift and go to state 49


state 23

    (81) factor -> LPAREN . expression RPAREN
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 50
    factor                         shift and go to state 29

state 24

    (30) expr_stmt -> expression . SEMI
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    SEMI            shift and go to state 51
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    MODULEEQ        shift and go to state 65
    DIVIDEEQ        shift and go to state 66
    TIMESEQ         shift and go to state 67
    MINEQ           shift and go to state 68
    ADDEQ           shift and go to state 69
    ASSIGN          shift and go to state 70


state 25

    (49) return_stmt -> RETURN . _11_expression_optional SEMI
    (50) _11_expression_optional -> . expression
    (51) _11_expression_optional -> .
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    SEMI            reduce using rule 51 (_11_expression_optional -> .)
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    _11_expression_optional        shift and go to state 71
    expression                     shift and go to state 72
    factor                         shift and go to state 29

state 26

    (48) print_stmt -> PRINT . LPAREN expression RPAREN SEMI
    LPAREN          shift and go to state 73


state 27

    (43) if_stmt -> IF . LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF
    LPAREN          shift and go to state 74


state 28

    (31) for_stmt -> FOR . LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement
    (36) for_stmt -> FOR . LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement
    LPAREN          shift and go to state 75


state 29

    (59) expression -> factor .
    (82) factor -> factor . LPAREN _13_arguments_optional RPAREN
    (85) factor -> factor . POINT IDENT
    SEMI            reduce using rule 59 (expression -> factor .)
    NE              reduce using rule 59 (expression -> factor .)
    EQ              reduce using rule 59 (expression -> factor .)
    GE              reduce using rule 59 (expression -> factor .)
    GT              reduce using rule 59 (expression -> factor .)
    LE              reduce using rule 59 (expression -> factor .)
    LT              reduce using rule 59 (expression -> factor .)
    MODULE          reduce using rule 59 (expression -> factor .)
    DIVIDE          reduce using rule 59 (expression -> factor .)
    TIMES           reduce using rule 59 (expression -> factor .)
    MINUS           reduce using rule 59 (expression -> factor .)
    PLUS            reduce using rule 59 (expression -> factor .)
    AND             reduce using rule 59 (expression -> factor .)
    OR              reduce using rule 59 (expression -> factor .)
    MODULEEQ        reduce using rule 59 (expression -> factor .)
    DIVIDEEQ        reduce using rule 59 (expression -> factor .)
    TIMESEQ         reduce using rule 59 (expression -> factor .)
    MINEQ           reduce using rule 59 (expression -> factor .)
    ADDEQ           reduce using rule 59 (expression -> factor .)
    ASSIGN          reduce using rule 59 (expression -> factor .)
    RPAREN          reduce using rule 59 (expression -> factor .)
    COMMA           reduce using rule 59 (expression -> factor .)
    LPAREN          shift and go to state 76
    POINT           shift and go to state 77


state 30

    (80) factor -> MINUS . factor
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    factor                         shift and go to state 78

state 31

    (79) factor -> NOT . factor
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    factor                         shift and go to state 79

state 32

    (86) factor -> SUPER . POINT IDENT
    POINT           shift and go to state 80


state 33

    (88) factor -> THIS .
    LPAREN          reduce using rule 88 (factor -> THIS .)
    POINT           reduce using rule 88 (factor -> THIS .)
    SEMI            reduce using rule 88 (factor -> THIS .)
    NE              reduce using rule 88 (factor -> THIS .)
    EQ              reduce using rule 88 (factor -> THIS .)
    GE              reduce using rule 88 (factor -> THIS .)
    GT              reduce using rule 88 (factor -> THIS .)
    LE              reduce using rule 88 (factor -> THIS .)
    LT              reduce using rule 88 (factor -> THIS .)
    MODULE          reduce using rule 88 (factor -> THIS .)
    DIVIDE          reduce using rule 88 (factor -> THIS .)
    TIMES           reduce using rule 88 (factor -> THIS .)
    MINUS           reduce using rule 88 (factor -> THIS .)
    PLUS            reduce using rule 88 (factor -> THIS .)
    AND             reduce using rule 88 (factor -> THIS .)
    OR              reduce using rule 88 (factor -> THIS .)
    MODULEEQ        reduce using rule 88 (factor -> THIS .)
    DIVIDEEQ        reduce using rule 88 (factor -> THIS .)
    TIMESEQ         reduce using rule 88 (factor -> THIS .)
    MINEQ           reduce using rule 88 (factor -> THIS .)
    ADDEQ           reduce using rule 88 (factor -> THIS .)
    ASSIGN          reduce using rule 88 (factor -> THIS .)
    RPAREN          reduce using rule 88 (factor -> THIS .)
    COMMA           reduce using rule 88 (factor -> THIS .)


state 34

    (89) factor -> NIL .
    LPAREN          reduce using rule 89 (factor -> NIL .)
    POINT           reduce using rule 89 (factor -> NIL .)
    SEMI            reduce using rule 89 (factor -> NIL .)
    NE              reduce using rule 89 (factor -> NIL .)
    EQ              reduce using rule 89 (factor -> NIL .)
    GE              reduce using rule 89 (factor -> NIL .)
    GT              reduce using rule 89 (factor -> NIL .)
    LE              reduce using rule 89 (factor -> NIL .)
    LT              reduce using rule 89 (factor -> NIL .)
    MODULE          reduce using rule 89 (factor -> NIL .)
    DIVIDE          reduce using rule 89 (factor -> NIL .)
    TIMES           reduce using rule 89 (factor -> NIL .)
    MINUS           reduce using rule 89 (factor -> NIL .)
    PLUS            reduce using rule 89 (factor -> NIL .)
    AND             reduce using rule 89 (factor -> NIL .)
    OR              reduce using rule 89 (factor -> NIL .)
    MODULEEQ        reduce using rule 89 (factor -> NIL .)
    DIVIDEEQ        reduce using rule 89 (factor -> NIL .)
    TIMESEQ         reduce using rule 89 (factor -> NIL .)
    MINEQ           reduce using rule 89 (factor -> NIL .)
    ADDEQ           reduce using rule 89 (factor -> NIL .)
    ASSIGN          reduce using rule 89 (factor -> NIL .)
    RPAREN          reduce using rule 89 (factor -> NIL .)
    COMMA           reduce using rule 89 (factor -> NIL .)


state 35

    (90) factor -> FALSE .
    LPAREN          reduce using rule 90 (factor -> FALSE .)
    POINT           reduce using rule 90 (factor -> FALSE .)
    SEMI            reduce using rule 90 (factor -> FALSE .)
    NE              reduce using rule 90 (factor -> FALSE .)
    EQ              reduce using rule 90 (factor -> FALSE .)
    GE              reduce using rule 90 (factor -> FALSE .)
    GT              reduce using rule 90 (factor -> FALSE .)
    LE              reduce using rule 90 (factor -> FALSE .)
    LT              reduce using rule 90 (factor -> FALSE .)
    MODULE          reduce using rule 90 (factor -> FALSE .)
    DIVIDE          reduce using rule 90 (factor -> FALSE .)
    TIMES           reduce using rule 90 (factor -> FALSE .)
    MINUS           reduce using rule 90 (factor -> FALSE .)
    PLUS            reduce using rule 90 (factor -> FALSE .)
    AND             reduce using rule 90 (factor -> FALSE .)
    OR              reduce using rule 90 (factor -> FALSE .)
    MODULEEQ        reduce using rule 90 (factor -> FALSE .)
    DIVIDEEQ        reduce using rule 90 (factor -> FALSE .)
    TIMESEQ         reduce using rule 90 (factor -> FALSE .)
    MINEQ           reduce using rule 90 (factor -> FALSE .)
    ADDEQ           reduce using rule 90 (factor -> FALSE .)
    ASSIGN          reduce using rule 90 (factor -> FALSE .)
    RPAREN          reduce using rule 90 (factor -> FALSE .)
    COMMA           reduce using rule 90 (factor -> FALSE .)


state 36

    (91) factor -> TRUE .
    LPAREN          reduce using rule 91 (factor -> TRUE .)
    POINT           reduce using rule 91 (factor -> TRUE .)
    SEMI            reduce using rule 91 (factor -> TRUE .)
    NE              reduce using rule 91 (factor -> TRUE .)
    EQ              reduce using rule 91 (factor -> TRUE .)
    GE              reduce using rule 91 (factor -> TRUE .)
    GT              reduce using rule 91 (factor -> TRUE .)
    LE              reduce using rule 91 (factor -> TRUE .)
    LT              reduce using rule 91 (factor -> TRUE .)
    MODULE          reduce using rule 91 (factor -> TRUE .)
    DIVIDE          reduce using rule 91 (factor -> TRUE .)
    TIMES           reduce using rule 91 (factor -> TRUE .)
    MINUS           reduce using rule 91 (factor -> TRUE .)
    PLUS            reduce using rule 91 (factor -> TRUE .)
    AND             reduce using rule 91 (factor -> TRUE .)
    OR              reduce using rule 91 (factor -> TRUE .)
    MODULEEQ        reduce using rule 91 (factor -> TRUE .)
    DIVIDEEQ        reduce using rule 91 (factor -> TRUE .)
    TIMESEQ         reduce using rule 91 (factor -> TRUE .)
    MINEQ           reduce using rule 91 (factor -> TRUE .)
    ADDEQ           reduce using rule 91 (factor -> TRUE .)
    ASSIGN          reduce using rule 91 (factor -> TRUE .)
    RPAREN          reduce using rule 91 (factor -> TRUE .)
    COMMA           reduce using rule 91 (factor -> TRUE .)


state 37

    (92) factor -> STRING .
    LPAREN          reduce using rule 92 (factor -> STRING .)
    POINT           reduce using rule 92 (factor -> STRING .)
    SEMI            reduce using rule 92 (factor -> STRING .)
    NE              reduce using rule 92 (factor -> STRING .)
    EQ              reduce using rule 92 (factor -> STRING .)
    GE              reduce using rule 92 (factor -> STRING .)
    GT              reduce using rule 92 (factor -> STRING .)
    LE              reduce using rule 92 (factor -> STRING .)
    LT              reduce using rule 92 (factor -> STRING .)
    MODULE          reduce using rule 92 (factor -> STRING .)
    DIVIDE          reduce using rule 92 (factor -> STRING .)
    TIMES           reduce using rule 92 (factor -> STRING .)
    MINUS           reduce using rule 92 (factor -> STRING .)
    PLUS            reduce using rule 92 (factor -> STRING .)
    AND             reduce using rule 92 (factor -> STRING .)
    OR              reduce using rule 92 (factor -> STRING .)
    MODULEEQ        reduce using rule 92 (factor -> STRING .)
    DIVIDEEQ        reduce using rule 92 (factor -> STRING .)
    TIMESEQ         reduce using rule 92 (factor -> STRING .)
    MINEQ           reduce using rule 92 (factor -> STRING .)
    ADDEQ           reduce using rule 92 (factor -> STRING .)
    ASSIGN          reduce using rule 92 (factor -> STRING .)
    RPAREN          reduce using rule 92 (factor -> STRING .)
    COMMA           reduce using rule 92 (factor -> STRING .)


state 38

    (93) factor -> NUM .
    LPAREN          reduce using rule 93 (factor -> NUM .)
    POINT           reduce using rule 93 (factor -> NUM .)
    SEMI            reduce using rule 93 (factor -> NUM .)
    NE              reduce using rule 93 (factor -> NUM .)
    EQ              reduce using rule 93 (factor -> NUM .)
    GE              reduce using rule 93 (factor -> NUM .)
    GT              reduce using rule 93 (factor -> NUM .)
    LE              reduce using rule 93 (factor -> NUM .)
    LT              reduce using rule 93 (factor -> NUM .)
    MODULE          reduce using rule 93 (factor -> NUM .)
    DIVIDE          reduce using rule 93 (factor -> NUM .)
    TIMES           reduce using rule 93 (factor -> NUM .)
    MINUS           reduce using rule 93 (factor -> NUM .)
    PLUS            reduce using rule 93 (factor -> NUM .)
    AND             reduce using rule 93 (factor -> NUM .)
    OR              reduce using rule 93 (factor -> NUM .)
    MODULEEQ        reduce using rule 93 (factor -> NUM .)
    DIVIDEEQ        reduce using rule 93 (factor -> NUM .)
    TIMESEQ         reduce using rule 93 (factor -> NUM .)
    MINEQ           reduce using rule 93 (factor -> NUM .)
    ADDEQ           reduce using rule 93 (factor -> NUM .)
    ASSIGN          reduce using rule 93 (factor -> NUM .)
    RPAREN          reduce using rule 93 (factor -> NUM .)
    COMMA           reduce using rule 93 (factor -> NUM .)


state 39

    (94) factor -> REAL .
    LPAREN          reduce using rule 94 (factor -> REAL .)
    POINT           reduce using rule 94 (factor -> REAL .)
    SEMI            reduce using rule 94 (factor -> REAL .)
    NE              reduce using rule 94 (factor -> REAL .)
    EQ              reduce using rule 94 (factor -> REAL .)
    GE              reduce using rule 94 (factor -> REAL .)
    GT              reduce using rule 94 (factor -> REAL .)
    LE              reduce using rule 94 (factor -> REAL .)
    LT              reduce using rule 94 (factor -> REAL .)
    MODULE          reduce using rule 94 (factor -> REAL .)
    DIVIDE          reduce using rule 94 (factor -> REAL .)
    TIMES           reduce using rule 94 (factor -> REAL .)
    MINUS           reduce using rule 94 (factor -> REAL .)
    PLUS            reduce using rule 94 (factor -> REAL .)
    AND             reduce using rule 94 (factor -> REAL .)
    OR              reduce using rule 94 (factor -> REAL .)
    MODULEEQ        reduce using rule 94 (factor -> REAL .)
    DIVIDEEQ        reduce using rule 94 (factor -> REAL .)
    TIMESEQ         reduce using rule 94 (factor -> REAL .)
    MINEQ           reduce using rule 94 (factor -> REAL .)
    ADDEQ           reduce using rule 94 (factor -> REAL .)
    ASSIGN          reduce using rule 94 (factor -> REAL .)
    RPAREN          reduce using rule 94 (factor -> REAL .)
    COMMA           reduce using rule 94 (factor -> REAL .)


state 40

    (4) _1_declaration_items -> _1_declaration_items _1_declaration_item .
    VAR             reduce using rule 4 (_1_declaration_items -> _1_declaration_items _1_declaration_item .)
    FUN             reduce using rule 4 (_1_declaration_items -> _1_declaration_items _1_declaration_item .)
    CLASS           reduce using rule 4 (_1_declaration_items -> _1_declaration_items _1_declaration_item .)
    LBRACE          reduce using rule 4 (_1_declaration_items -> _1_declaration_items _1_declaration_item .)
    WHILE           reduce using rule 4 (_1_declaration_items -> _1_declaration_items _1_declaration_item .)
    RETURN          reduce using rule 4 (_1_declaration_items -> _1_declaration_items _1_declaration_item .)
    PRINT           reduce using rule 4 (_1_declaration_items -> _1_declaration_items _1_declaration_item .)
    IF              reduce using rule 4 (_1_declaration_items -> _1_declaration_items _1_declaration_item .)
    FOR             reduce using rule 4 (_1_declaration_items -> _1_declaration_items _1_declaration_item .)
    NOT             reduce using rule 4 (_1_declaration_items -> _1_declaration_items _1_declaration_item .)
    MINUS           reduce using rule 4 (_1_declaration_items -> _1_declaration_items _1_declaration_item .)
    LPAREN          reduce using rule 4 (_1_declaration_items -> _1_declaration_items _1_declaration_item .)
    SUPER           reduce using rule 4 (_1_declaration_items -> _1_declaration_items _1_declaration_item .)
    IDENT           reduce using rule 4 (_1_declaration_items -> _1_declaration_items _1_declaration_item .)
    THIS            reduce using rule 4 (_1_declaration_items -> _1_declaration_items _1_declaration_item .)
    NIL             reduce using rule 4 (_1_declaration_items -> _1_declaration_items _1_declaration_item .)
    FALSE           reduce using rule 4 (_1_declaration_items -> _1_declaration_items _1_declaration_item .)
    TRUE            reduce using rule 4 (_1_declaration_items -> _1_declaration_items _1_declaration_item .)
    STRING          reduce using rule 4 (_1_declaration_items -> _1_declaration_items _1_declaration_item .)
    NUM             reduce using rule 4 (_1_declaration_items -> _1_declaration_items _1_declaration_item .)
    REAL            reduce using rule 4 (_1_declaration_items -> _1_declaration_items _1_declaration_item .)
    $end            reduce using rule 4 (_1_declaration_items -> _1_declaration_items _1_declaration_item .)


state 41

    (20) var_declaration -> VAR IDENT . _4_ASSIGN_expression_optional SEMI
    (21) _4_ASSIGN_expression_optional -> . ASSIGN expression
    (22) _4_ASSIGN_expression_optional -> .
    ASSIGN          shift and go to state 82
    SEMI            reduce using rule 22 (_4_ASSIGN_expression_optional -> .)

    _4_ASSIGN_expression_optional  shift and go to state 81

state 42

    (19) func_declaration -> FUN function .
    VAR             reduce using rule 19 (func_declaration -> FUN function .)
    FUN             reduce using rule 19 (func_declaration -> FUN function .)
    CLASS           reduce using rule 19 (func_declaration -> FUN function .)
    LBRACE          reduce using rule 19 (func_declaration -> FUN function .)
    WHILE           reduce using rule 19 (func_declaration -> FUN function .)
    RETURN          reduce using rule 19 (func_declaration -> FUN function .)
    PRINT           reduce using rule 19 (func_declaration -> FUN function .)
    IF              reduce using rule 19 (func_declaration -> FUN function .)
    FOR             reduce using rule 19 (func_declaration -> FUN function .)
    NOT             reduce using rule 19 (func_declaration -> FUN function .)
    MINUS           reduce using rule 19 (func_declaration -> FUN function .)
    LPAREN          reduce using rule 19 (func_declaration -> FUN function .)
    SUPER           reduce using rule 19 (func_declaration -> FUN function .)
    IDENT           reduce using rule 19 (func_declaration -> FUN function .)
    THIS            reduce using rule 19 (func_declaration -> FUN function .)
    NIL             reduce using rule 19 (func_declaration -> FUN function .)
    FALSE           reduce using rule 19 (func_declaration -> FUN function .)
    TRUE            reduce using rule 19 (func_declaration -> FUN function .)
    STRING          reduce using rule 19 (func_declaration -> FUN function .)
    NUM             reduce using rule 19 (func_declaration -> FUN function .)
    REAL            reduce using rule 19 (func_declaration -> FUN function .)
    $end            reduce using rule 19 (func_declaration -> FUN function .)
    RBRACE          reduce using rule 19 (func_declaration -> FUN function .)


state 43

    (95) function -> IDENT . LPAREN _14_parameters_optional RPAREN block
    LPAREN          shift and go to state 83


state 44

    (11) class_declaration -> CLASS IDENT . _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat RBRACE
    (12) _2_LPAREN_LT_IDENT_RPAREN_optional -> . LPAREN LT IDENT RPAREN
    (13) _2_LPAREN_LT_IDENT_RPAREN_optional -> .
    LPAREN          shift and go to state 85
    LBRACE          reduce using rule 13 (_2_LPAREN_LT_IDENT_RPAREN_optional -> .)

    _2_LPAREN_LT_IDENT_RPAREN_optional shift and go to state 84

state 45

    (53) block -> LBRACE _12_declaration_repeat . RBRACE
    RBRACE          shift and go to state 86


state 46

    (54) _12_declaration_repeat -> _12_declaration_items .
    (56) _12_declaration_items -> _12_declaration_items . _12_declaration_item
    (58) _12_declaration_item -> . declaration
    (7) declaration -> . statement
    (8) declaration -> . var_declaration
    (9) declaration -> . func_declaration
    (10) declaration -> . class_declaration
    (23) statement -> . block
    (24) statement -> . while_stmt
    (25) statement -> . return_stmt
    (26) statement -> . print_stmt
    (27) statement -> . if_stmt
    (28) statement -> . for_stmt
    (29) statement -> . expr_stmt
    (20) var_declaration -> . VAR IDENT _4_ASSIGN_expression_optional SEMI
    (19) func_declaration -> . FUN function
    (11) class_declaration -> . CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat RBRACE
    (53) block -> . LBRACE _12_declaration_repeat RBRACE
    (52) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (49) return_stmt -> . RETURN _11_expression_optional SEMI
    (48) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (43) if_stmt -> . IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF
    (31) for_stmt -> . FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement
    (36) for_stmt -> . FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement
    (30) expr_stmt -> . expression SEMI
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    RBRACE          reduce using rule 54 (_12_declaration_repeat -> _12_declaration_items .)
    VAR             shift and go to state 17
    FUN             shift and go to state 19
    CLASS           shift and go to state 20
    LBRACE          shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    FOR             shift and go to state 28
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    _12_declaration_item           shift and go to state 87
    declaration                    shift and go to state 48
    statement                      shift and go to state 6
    var_declaration                shift and go to state 7
    func_declaration               shift and go to state 8
    class_declaration              shift and go to state 9
    block                          shift and go to state 10
    while_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    print_stmt                     shift and go to state 13
    if_stmt                        shift and go to state 14
    for_stmt                       shift and go to state 15
    expr_stmt                      shift and go to state 16
    expression                     shift and go to state 24
    factor                         shift and go to state 29

state 47

    (57) _12_declaration_items -> _12_declaration_item .
    VAR             reduce using rule 57 (_12_declaration_items -> _12_declaration_item .)
    FUN             reduce using rule 57 (_12_declaration_items -> _12_declaration_item .)
    CLASS           reduce using rule 57 (_12_declaration_items -> _12_declaration_item .)
    LBRACE          reduce using rule 57 (_12_declaration_items -> _12_declaration_item .)
    WHILE           reduce using rule 57 (_12_declaration_items -> _12_declaration_item .)
    RETURN          reduce using rule 57 (_12_declaration_items -> _12_declaration_item .)
    PRINT           reduce using rule 57 (_12_declaration_items -> _12_declaration_item .)
    IF              reduce using rule 57 (_12_declaration_items -> _12_declaration_item .)
    FOR             reduce using rule 57 (_12_declaration_items -> _12_declaration_item .)
    NOT             reduce using rule 57 (_12_declaration_items -> _12_declaration_item .)
    MINUS           reduce using rule 57 (_12_declaration_items -> _12_declaration_item .)
    LPAREN          reduce using rule 57 (_12_declaration_items -> _12_declaration_item .)
    SUPER           reduce using rule 57 (_12_declaration_items -> _12_declaration_item .)
    IDENT           reduce using rule 57 (_12_declaration_items -> _12_declaration_item .)
    THIS            reduce using rule 57 (_12_declaration_items -> _12_declaration_item .)
    NIL             reduce using rule 57 (_12_declaration_items -> _12_declaration_item .)
    FALSE           reduce using rule 57 (_12_declaration_items -> _12_declaration_item .)
    TRUE            reduce using rule 57 (_12_declaration_items -> _12_declaration_item .)
    STRING          reduce using rule 57 (_12_declaration_items -> _12_declaration_item .)
    NUM             reduce using rule 57 (_12_declaration_items -> _12_declaration_item .)
    REAL            reduce using rule 57 (_12_declaration_items -> _12_declaration_item .)
    RBRACE          reduce using rule 57 (_12_declaration_items -> _12_declaration_item .)


state 48

    (58) _12_declaration_item -> declaration .
    VAR             reduce using rule 58 (_12_declaration_item -> declaration .)
    FUN             reduce using rule 58 (_12_declaration_item -> declaration .)
    CLASS           reduce using rule 58 (_12_declaration_item -> declaration .)
    LBRACE          reduce using rule 58 (_12_declaration_item -> declaration .)
    WHILE           reduce using rule 58 (_12_declaration_item -> declaration .)
    RETURN          reduce using rule 58 (_12_declaration_item -> declaration .)
    PRINT           reduce using rule 58 (_12_declaration_item -> declaration .)
    IF              reduce using rule 58 (_12_declaration_item -> declaration .)
    FOR             reduce using rule 58 (_12_declaration_item -> declaration .)
    NOT             reduce using rule 58 (_12_declaration_item -> declaration .)
    MINUS           reduce using rule 58 (_12_declaration_item -> declaration .)
    LPAREN          reduce using rule 58 (_12_declaration_item -> declaration .)
    SUPER           reduce using rule 58 (_12_declaration_item -> declaration .)
    IDENT           reduce using rule 58 (_12_declaration_item -> declaration .)
    THIS            reduce using rule 58 (_12_declaration_item -> declaration .)
    NIL             reduce using rule 58 (_12_declaration_item -> declaration .)
    FALSE           reduce using rule 58 (_12_declaration_item -> declaration .)
    TRUE            reduce using rule 58 (_12_declaration_item -> declaration .)
    STRING          reduce using rule 58 (_12_declaration_item -> declaration .)
    NUM             reduce using rule 58 (_12_declaration_item -> declaration .)
    REAL            reduce using rule 58 (_12_declaration_item -> declaration .)
    RBRACE          reduce using rule 58 (_12_declaration_item -> declaration .)


state 49

    (52) while_stmt -> WHILE LPAREN . expression RPAREN statement
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 88
    factor                         shift and go to state 29

state 50

    (81) factor -> LPAREN expression . RPAREN
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    RPAREN          shift and go to state 89
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    MODULEEQ        shift and go to state 65
    DIVIDEEQ        shift and go to state 66
    TIMESEQ         shift and go to state 67
    MINEQ           shift and go to state 68
    ADDEQ           shift and go to state 69
    ASSIGN          shift and go to state 70


state 51

    (30) expr_stmt -> expression SEMI .
    VAR             reduce using rule 30 (expr_stmt -> expression SEMI .)
    FUN             reduce using rule 30 (expr_stmt -> expression SEMI .)
    CLASS           reduce using rule 30 (expr_stmt -> expression SEMI .)
    LBRACE          reduce using rule 30 (expr_stmt -> expression SEMI .)
    WHILE           reduce using rule 30 (expr_stmt -> expression SEMI .)
    RETURN          reduce using rule 30 (expr_stmt -> expression SEMI .)
    PRINT           reduce using rule 30 (expr_stmt -> expression SEMI .)
    IF              reduce using rule 30 (expr_stmt -> expression SEMI .)
    FOR             reduce using rule 30 (expr_stmt -> expression SEMI .)
    NOT             reduce using rule 30 (expr_stmt -> expression SEMI .)
    MINUS           reduce using rule 30 (expr_stmt -> expression SEMI .)
    LPAREN          reduce using rule 30 (expr_stmt -> expression SEMI .)
    SUPER           reduce using rule 30 (expr_stmt -> expression SEMI .)
    IDENT           reduce using rule 30 (expr_stmt -> expression SEMI .)
    THIS            reduce using rule 30 (expr_stmt -> expression SEMI .)
    NIL             reduce using rule 30 (expr_stmt -> expression SEMI .)
    FALSE           reduce using rule 30 (expr_stmt -> expression SEMI .)
    TRUE            reduce using rule 30 (expr_stmt -> expression SEMI .)
    STRING          reduce using rule 30 (expr_stmt -> expression SEMI .)
    NUM             reduce using rule 30 (expr_stmt -> expression SEMI .)
    REAL            reduce using rule 30 (expr_stmt -> expression SEMI .)
    $end            reduce using rule 30 (expr_stmt -> expression SEMI .)
    RBRACE          reduce using rule 30 (expr_stmt -> expression SEMI .)
    SEMI            reduce using rule 30 (expr_stmt -> expression SEMI .)
    ELSE            reduce using rule 30 (expr_stmt -> expression SEMI .)
    END_IF          reduce using rule 30 (expr_stmt -> expression SEMI .)


state 52

    (60) expression -> expression NE . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 90
    factor                         shift and go to state 29

state 53

    (61) expression -> expression EQ . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 91
    factor                         shift and go to state 29

state 54

    (62) expression -> expression GE . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 92
    factor                         shift and go to state 29

state 55

    (63) expression -> expression GT . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 93
    factor                         shift and go to state 29

state 56

    (64) expression -> expression LE . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 94
    factor                         shift and go to state 29

state 57

    (65) expression -> expression LT . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 95
    factor                         shift and go to state 29

state 58

    (66) expression -> expression MODULE . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 96
    factor                         shift and go to state 29

state 59

    (67) expression -> expression DIVIDE . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 97
    factor                         shift and go to state 29

state 60

    (68) expression -> expression TIMES . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 98
    factor                         shift and go to state 29

state 61

    (69) expression -> expression MINUS . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 99
    factor                         shift and go to state 29

state 62

    (70) expression -> expression PLUS . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 100
    factor                         shift and go to state 29

state 63

    (71) expression -> expression AND . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 101
    factor                         shift and go to state 29

state 64

    (72) expression -> expression OR . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 102
    factor                         shift and go to state 29

state 65

    (73) expression -> expression MODULEEQ . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 103
    factor                         shift and go to state 29

state 66

    (74) expression -> expression DIVIDEEQ . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 104
    factor                         shift and go to state 29

state 67

    (75) expression -> expression TIMESEQ . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 105
    factor                         shift and go to state 29

state 68

    (76) expression -> expression MINEQ . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 106
    factor                         shift and go to state 29

state 69

    (77) expression -> expression ADDEQ . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 107
    factor                         shift and go to state 29

state 70

    (78) expression -> expression ASSIGN . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 108
    factor                         shift and go to state 29

state 71

    (49) return_stmt -> RETURN _11_expression_optional . SEMI
    SEMI            shift and go to state 109


state 72

    (50) _11_expression_optional -> expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 50 (_11_expression_optional -> expression .)
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    MODULEEQ        shift and go to state 65
    DIVIDEEQ        shift and go to state 66
    TIMESEQ         shift and go to state 67
    MINEQ           shift and go to state 68
    ADDEQ           shift and go to state 69
    ASSIGN          shift and go to state 70


state 73

    (48) print_stmt -> PRINT LPAREN . expression RPAREN SEMI
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 110
    factor                         shift and go to state 29

state 74

    (43) if_stmt -> IF LPAREN . _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF
    (44) _9_expression_optional -> . expression
    (45) _9_expression_optional -> .
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    RPAREN          reduce using rule 45 (_9_expression_optional -> .)
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    _9_expression_optional         shift and go to state 111
    expression                     shift and go to state 112
    factor                         shift and go to state 29

state 75

    (31) for_stmt -> FOR LPAREN . SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement
    (36) for_stmt -> FOR LPAREN . for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement
    (41) for_initialize -> . expr_stmt
    (42) for_initialize -> . var_declaration
    (30) expr_stmt -> . expression SEMI
    (20) var_declaration -> . VAR IDENT _4_ASSIGN_expression_optional SEMI
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    SEMI            shift and go to state 113
    VAR             shift and go to state 17
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    for_initialize                 shift and go to state 114
    expr_stmt                      shift and go to state 115
    var_declaration                shift and go to state 116
    expression                     shift and go to state 24
    factor                         shift and go to state 29

state 76

    (82) factor -> factor LPAREN . _13_arguments_optional RPAREN
    (83) _13_arguments_optional -> . arguments
    (84) _13_arguments_optional -> .
    (104) arguments -> . expression _16_COMMA_expression_repeat
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    RPAREN          reduce using rule 84 (_13_arguments_optional -> .)
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    factor                         shift and go to state 29
    _13_arguments_optional         shift and go to state 117
    arguments                      shift and go to state 118
    expression                     shift and go to state 119

state 77

    (85) factor -> factor POINT . IDENT
    IDENT           shift and go to state 120


state 78

    (80) factor -> MINUS factor .
    (82) factor -> factor . LPAREN _13_arguments_optional RPAREN
    (85) factor -> factor . POINT IDENT
    LPAREN          reduce using rule 80 (factor -> MINUS factor .)
    POINT           reduce using rule 80 (factor -> MINUS factor .)
    SEMI            reduce using rule 80 (factor -> MINUS factor .)
    NE              reduce using rule 80 (factor -> MINUS factor .)
    EQ              reduce using rule 80 (factor -> MINUS factor .)
    GE              reduce using rule 80 (factor -> MINUS factor .)
    GT              reduce using rule 80 (factor -> MINUS factor .)
    LE              reduce using rule 80 (factor -> MINUS factor .)
    LT              reduce using rule 80 (factor -> MINUS factor .)
    MODULE          reduce using rule 80 (factor -> MINUS factor .)
    DIVIDE          reduce using rule 80 (factor -> MINUS factor .)
    TIMES           reduce using rule 80 (factor -> MINUS factor .)
    MINUS           reduce using rule 80 (factor -> MINUS factor .)
    PLUS            reduce using rule 80 (factor -> MINUS factor .)
    AND             reduce using rule 80 (factor -> MINUS factor .)
    OR              reduce using rule 80 (factor -> MINUS factor .)
    MODULEEQ        reduce using rule 80 (factor -> MINUS factor .)
    DIVIDEEQ        reduce using rule 80 (factor -> MINUS factor .)
    TIMESEQ         reduce using rule 80 (factor -> MINUS factor .)
    MINEQ           reduce using rule 80 (factor -> MINUS factor .)
    ADDEQ           reduce using rule 80 (factor -> MINUS factor .)
    ASSIGN          reduce using rule 80 (factor -> MINUS factor .)
    RPAREN          reduce using rule 80 (factor -> MINUS factor .)
    COMMA           reduce using rule 80 (factor -> MINUS factor .)


state 79

    (79) factor -> NOT factor .
    (82) factor -> factor . LPAREN _13_arguments_optional RPAREN
    (85) factor -> factor . POINT IDENT
    LPAREN          reduce using rule 79 (factor -> NOT factor .)
    POINT           reduce using rule 79 (factor -> NOT factor .)
    SEMI            reduce using rule 79 (factor -> NOT factor .)
    NE              reduce using rule 79 (factor -> NOT factor .)
    EQ              reduce using rule 79 (factor -> NOT factor .)
    GE              reduce using rule 79 (factor -> NOT factor .)
    GT              reduce using rule 79 (factor -> NOT factor .)
    LE              reduce using rule 79 (factor -> NOT factor .)
    LT              reduce using rule 79 (factor -> NOT factor .)
    MODULE          reduce using rule 79 (factor -> NOT factor .)
    DIVIDE          reduce using rule 79 (factor -> NOT factor .)
    TIMES           reduce using rule 79 (factor -> NOT factor .)
    MINUS           reduce using rule 79 (factor -> NOT factor .)
    PLUS            reduce using rule 79 (factor -> NOT factor .)
    AND             reduce using rule 79 (factor -> NOT factor .)
    OR              reduce using rule 79 (factor -> NOT factor .)
    MODULEEQ        reduce using rule 79 (factor -> NOT factor .)
    DIVIDEEQ        reduce using rule 79 (factor -> NOT factor .)
    TIMESEQ         reduce using rule 79 (factor -> NOT factor .)
    MINEQ           reduce using rule 79 (factor -> NOT factor .)
    ADDEQ           reduce using rule 79 (factor -> NOT factor .)
    ASSIGN          reduce using rule 79 (factor -> NOT factor .)
    RPAREN          reduce using rule 79 (factor -> NOT factor .)
    COMMA           reduce using rule 79 (factor -> NOT factor .)


state 80

    (86) factor -> SUPER POINT . IDENT
    IDENT           shift and go to state 121


state 81

    (20) var_declaration -> VAR IDENT _4_ASSIGN_expression_optional . SEMI
    SEMI            shift and go to state 122


state 82

    (21) _4_ASSIGN_expression_optional -> ASSIGN . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 123
    factor                         shift and go to state 29

state 83

    (95) function -> IDENT LPAREN . _14_parameters_optional RPAREN block
    (96) _14_parameters_optional -> . parameters
    (97) _14_parameters_optional -> .
    (98) parameters -> . IDENT _15_COMMA_IDENT_repeat
    RPAREN          reduce using rule 97 (_14_parameters_optional -> .)
    IDENT           shift and go to state 124

    _14_parameters_optional        shift and go to state 125
    parameters                     shift and go to state 126

state 84

    (11) class_declaration -> CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional . LBRACE _3_function_repeat RBRACE
    LBRACE          shift and go to state 127


state 85

    (12) _2_LPAREN_LT_IDENT_RPAREN_optional -> LPAREN . LT IDENT RPAREN
    LT              shift and go to state 128


state 86

    (53) block -> LBRACE _12_declaration_repeat RBRACE .
    VAR             reduce using rule 53 (block -> LBRACE _12_declaration_repeat RBRACE .)
    FUN             reduce using rule 53 (block -> LBRACE _12_declaration_repeat RBRACE .)
    CLASS           reduce using rule 53 (block -> LBRACE _12_declaration_repeat RBRACE .)
    LBRACE          reduce using rule 53 (block -> LBRACE _12_declaration_repeat RBRACE .)
    WHILE           reduce using rule 53 (block -> LBRACE _12_declaration_repeat RBRACE .)
    RETURN          reduce using rule 53 (block -> LBRACE _12_declaration_repeat RBRACE .)
    PRINT           reduce using rule 53 (block -> LBRACE _12_declaration_repeat RBRACE .)
    IF              reduce using rule 53 (block -> LBRACE _12_declaration_repeat RBRACE .)
    FOR             reduce using rule 53 (block -> LBRACE _12_declaration_repeat RBRACE .)
    NOT             reduce using rule 53 (block -> LBRACE _12_declaration_repeat RBRACE .)
    MINUS           reduce using rule 53 (block -> LBRACE _12_declaration_repeat RBRACE .)
    LPAREN          reduce using rule 53 (block -> LBRACE _12_declaration_repeat RBRACE .)
    SUPER           reduce using rule 53 (block -> LBRACE _12_declaration_repeat RBRACE .)
    IDENT           reduce using rule 53 (block -> LBRACE _12_declaration_repeat RBRACE .)
    THIS            reduce using rule 53 (block -> LBRACE _12_declaration_repeat RBRACE .)
    NIL             reduce using rule 53 (block -> LBRACE _12_declaration_repeat RBRACE .)
    FALSE           reduce using rule 53 (block -> LBRACE _12_declaration_repeat RBRACE .)
    TRUE            reduce using rule 53 (block -> LBRACE _12_declaration_repeat RBRACE .)
    STRING          reduce using rule 53 (block -> LBRACE _12_declaration_repeat RBRACE .)
    NUM             reduce using rule 53 (block -> LBRACE _12_declaration_repeat RBRACE .)
    REAL            reduce using rule 53 (block -> LBRACE _12_declaration_repeat RBRACE .)
    $end            reduce using rule 53 (block -> LBRACE _12_declaration_repeat RBRACE .)
    RBRACE          reduce using rule 53 (block -> LBRACE _12_declaration_repeat RBRACE .)
    ELSE            reduce using rule 53 (block -> LBRACE _12_declaration_repeat RBRACE .)
    END_IF          reduce using rule 53 (block -> LBRACE _12_declaration_repeat RBRACE .)


state 87

    (56) _12_declaration_items -> _12_declaration_items _12_declaration_item .
    VAR             reduce using rule 56 (_12_declaration_items -> _12_declaration_items _12_declaration_item .)
    FUN             reduce using rule 56 (_12_declaration_items -> _12_declaration_items _12_declaration_item .)
    CLASS           reduce using rule 56 (_12_declaration_items -> _12_declaration_items _12_declaration_item .)
    LBRACE          reduce using rule 56 (_12_declaration_items -> _12_declaration_items _12_declaration_item .)
    WHILE           reduce using rule 56 (_12_declaration_items -> _12_declaration_items _12_declaration_item .)
    RETURN          reduce using rule 56 (_12_declaration_items -> _12_declaration_items _12_declaration_item .)
    PRINT           reduce using rule 56 (_12_declaration_items -> _12_declaration_items _12_declaration_item .)
    IF              reduce using rule 56 (_12_declaration_items -> _12_declaration_items _12_declaration_item .)
    FOR             reduce using rule 56 (_12_declaration_items -> _12_declaration_items _12_declaration_item .)
    NOT             reduce using rule 56 (_12_declaration_items -> _12_declaration_items _12_declaration_item .)
    MINUS           reduce using rule 56 (_12_declaration_items -> _12_declaration_items _12_declaration_item .)
    LPAREN          reduce using rule 56 (_12_declaration_items -> _12_declaration_items _12_declaration_item .)
    SUPER           reduce using rule 56 (_12_declaration_items -> _12_declaration_items _12_declaration_item .)
    IDENT           reduce using rule 56 (_12_declaration_items -> _12_declaration_items _12_declaration_item .)
    THIS            reduce using rule 56 (_12_declaration_items -> _12_declaration_items _12_declaration_item .)
    NIL             reduce using rule 56 (_12_declaration_items -> _12_declaration_items _12_declaration_item .)
    FALSE           reduce using rule 56 (_12_declaration_items -> _12_declaration_items _12_declaration_item .)
    TRUE            reduce using rule 56 (_12_declaration_items -> _12_declaration_items _12_declaration_item .)
    STRING          reduce using rule 56 (_12_declaration_items -> _12_declaration_items _12_declaration_item .)
    NUM             reduce using rule 56 (_12_declaration_items -> _12_declaration_items _12_declaration_item .)
    REAL            reduce using rule 56 (_12_declaration_items -> _12_declaration_items _12_declaration_item .)
    RBRACE          reduce using rule 56 (_12_declaration_items -> _12_declaration_items _12_declaration_item .)


state 88

    (52) while_stmt -> WHILE LPAREN expression . RPAREN statement
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    RPAREN          shift and go to state 129
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    MODULEEQ        shift and go to state 65
    DIVIDEEQ        shift and go to state 66
    TIMESEQ         shift and go to state 67
    MINEQ           shift and go to state 68
    ADDEQ           shift and go to state 69
    ASSIGN          shift and go to state 70


state 89

    (81) factor -> LPAREN expression RPAREN .
    LPAREN          reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    POINT           reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    NE              reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    EQ              reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    GE              reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    LE              reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    MODULE          reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    MODULEEQ        reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    DIVIDEEQ        reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    TIMESEQ         reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    MINEQ           reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    ADDEQ           reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    ASSIGN          reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 81 (factor -> LPAREN expression RPAREN .)


state 90

    (60) expression -> expression NE expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 60 (expression -> expression NE expression .)
    NE              reduce using rule 60 (expression -> expression NE expression .)
    EQ              reduce using rule 60 (expression -> expression NE expression .)
    AND             reduce using rule 60 (expression -> expression NE expression .)
    OR              reduce using rule 60 (expression -> expression NE expression .)
    MODULEEQ        reduce using rule 60 (expression -> expression NE expression .)
    DIVIDEEQ        reduce using rule 60 (expression -> expression NE expression .)
    TIMESEQ         reduce using rule 60 (expression -> expression NE expression .)
    MINEQ           reduce using rule 60 (expression -> expression NE expression .)
    ADDEQ           reduce using rule 60 (expression -> expression NE expression .)
    ASSIGN          reduce using rule 60 (expression -> expression NE expression .)
    RPAREN          reduce using rule 60 (expression -> expression NE expression .)
    COMMA           reduce using rule 60 (expression -> expression NE expression .)
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62


state 91

    (61) expression -> expression EQ expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 61 (expression -> expression EQ expression .)
    NE              reduce using rule 61 (expression -> expression EQ expression .)
    EQ              reduce using rule 61 (expression -> expression EQ expression .)
    AND             reduce using rule 61 (expression -> expression EQ expression .)
    OR              reduce using rule 61 (expression -> expression EQ expression .)
    MODULEEQ        reduce using rule 61 (expression -> expression EQ expression .)
    DIVIDEEQ        reduce using rule 61 (expression -> expression EQ expression .)
    TIMESEQ         reduce using rule 61 (expression -> expression EQ expression .)
    MINEQ           reduce using rule 61 (expression -> expression EQ expression .)
    ADDEQ           reduce using rule 61 (expression -> expression EQ expression .)
    ASSIGN          reduce using rule 61 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 61 (expression -> expression EQ expression .)
    COMMA           reduce using rule 61 (expression -> expression EQ expression .)
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62


state 92

    (62) expression -> expression GE expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 62 (expression -> expression GE expression .)
    NE              reduce using rule 62 (expression -> expression GE expression .)
    EQ              reduce using rule 62 (expression -> expression GE expression .)
    GE              reduce using rule 62 (expression -> expression GE expression .)
    GT              reduce using rule 62 (expression -> expression GE expression .)
    LE              reduce using rule 62 (expression -> expression GE expression .)
    LT              reduce using rule 62 (expression -> expression GE expression .)
    AND             reduce using rule 62 (expression -> expression GE expression .)
    OR              reduce using rule 62 (expression -> expression GE expression .)
    MODULEEQ        reduce using rule 62 (expression -> expression GE expression .)
    DIVIDEEQ        reduce using rule 62 (expression -> expression GE expression .)
    TIMESEQ         reduce using rule 62 (expression -> expression GE expression .)
    MINEQ           reduce using rule 62 (expression -> expression GE expression .)
    ADDEQ           reduce using rule 62 (expression -> expression GE expression .)
    ASSIGN          reduce using rule 62 (expression -> expression GE expression .)
    RPAREN          reduce using rule 62 (expression -> expression GE expression .)
    COMMA           reduce using rule 62 (expression -> expression GE expression .)
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62


state 93

    (63) expression -> expression GT expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 63 (expression -> expression GT expression .)
    NE              reduce using rule 63 (expression -> expression GT expression .)
    EQ              reduce using rule 63 (expression -> expression GT expression .)
    GE              reduce using rule 63 (expression -> expression GT expression .)
    GT              reduce using rule 63 (expression -> expression GT expression .)
    LE              reduce using rule 63 (expression -> expression GT expression .)
    LT              reduce using rule 63 (expression -> expression GT expression .)
    AND             reduce using rule 63 (expression -> expression GT expression .)
    OR              reduce using rule 63 (expression -> expression GT expression .)
    MODULEEQ        reduce using rule 63 (expression -> expression GT expression .)
    DIVIDEEQ        reduce using rule 63 (expression -> expression GT expression .)
    TIMESEQ         reduce using rule 63 (expression -> expression GT expression .)
    MINEQ           reduce using rule 63 (expression -> expression GT expression .)
    ADDEQ           reduce using rule 63 (expression -> expression GT expression .)
    ASSIGN          reduce using rule 63 (expression -> expression GT expression .)
    RPAREN          reduce using rule 63 (expression -> expression GT expression .)
    COMMA           reduce using rule 63 (expression -> expression GT expression .)
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62


state 94

    (64) expression -> expression LE expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 64 (expression -> expression LE expression .)
    NE              reduce using rule 64 (expression -> expression LE expression .)
    EQ              reduce using rule 64 (expression -> expression LE expression .)
    GE              reduce using rule 64 (expression -> expression LE expression .)
    GT              reduce using rule 64 (expression -> expression LE expression .)
    LE              reduce using rule 64 (expression -> expression LE expression .)
    LT              reduce using rule 64 (expression -> expression LE expression .)
    AND             reduce using rule 64 (expression -> expression LE expression .)
    OR              reduce using rule 64 (expression -> expression LE expression .)
    MODULEEQ        reduce using rule 64 (expression -> expression LE expression .)
    DIVIDEEQ        reduce using rule 64 (expression -> expression LE expression .)
    TIMESEQ         reduce using rule 64 (expression -> expression LE expression .)
    MINEQ           reduce using rule 64 (expression -> expression LE expression .)
    ADDEQ           reduce using rule 64 (expression -> expression LE expression .)
    ASSIGN          reduce using rule 64 (expression -> expression LE expression .)
    RPAREN          reduce using rule 64 (expression -> expression LE expression .)
    COMMA           reduce using rule 64 (expression -> expression LE expression .)
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62


state 95

    (65) expression -> expression LT expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 65 (expression -> expression LT expression .)
    NE              reduce using rule 65 (expression -> expression LT expression .)
    EQ              reduce using rule 65 (expression -> expression LT expression .)
    GE              reduce using rule 65 (expression -> expression LT expression .)
    GT              reduce using rule 65 (expression -> expression LT expression .)
    LE              reduce using rule 65 (expression -> expression LT expression .)
    LT              reduce using rule 65 (expression -> expression LT expression .)
    AND             reduce using rule 65 (expression -> expression LT expression .)
    OR              reduce using rule 65 (expression -> expression LT expression .)
    MODULEEQ        reduce using rule 65 (expression -> expression LT expression .)
    DIVIDEEQ        reduce using rule 65 (expression -> expression LT expression .)
    TIMESEQ         reduce using rule 65 (expression -> expression LT expression .)
    MINEQ           reduce using rule 65 (expression -> expression LT expression .)
    ADDEQ           reduce using rule 65 (expression -> expression LT expression .)
    ASSIGN          reduce using rule 65 (expression -> expression LT expression .)
    RPAREN          reduce using rule 65 (expression -> expression LT expression .)
    COMMA           reduce using rule 65 (expression -> expression LT expression .)
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62


state 96

    (66) expression -> expression MODULE expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 66 (expression -> expression MODULE expression .)
    NE              reduce using rule 66 (expression -> expression MODULE expression .)
    EQ              reduce using rule 66 (expression -> expression MODULE expression .)
    GE              reduce using rule 66 (expression -> expression MODULE expression .)
    GT              reduce using rule 66 (expression -> expression MODULE expression .)
    LE              reduce using rule 66 (expression -> expression MODULE expression .)
    LT              reduce using rule 66 (expression -> expression MODULE expression .)
    MODULE          reduce using rule 66 (expression -> expression MODULE expression .)
    DIVIDE          reduce using rule 66 (expression -> expression MODULE expression .)
    TIMES           reduce using rule 66 (expression -> expression MODULE expression .)
    MINUS           reduce using rule 66 (expression -> expression MODULE expression .)
    PLUS            reduce using rule 66 (expression -> expression MODULE expression .)
    AND             reduce using rule 66 (expression -> expression MODULE expression .)
    OR              reduce using rule 66 (expression -> expression MODULE expression .)
    MODULEEQ        reduce using rule 66 (expression -> expression MODULE expression .)
    DIVIDEEQ        reduce using rule 66 (expression -> expression MODULE expression .)
    TIMESEQ         reduce using rule 66 (expression -> expression MODULE expression .)
    MINEQ           reduce using rule 66 (expression -> expression MODULE expression .)
    ADDEQ           reduce using rule 66 (expression -> expression MODULE expression .)
    ASSIGN          reduce using rule 66 (expression -> expression MODULE expression .)
    RPAREN          reduce using rule 66 (expression -> expression MODULE expression .)
    COMMA           reduce using rule 66 (expression -> expression MODULE expression .)


state 97

    (67) expression -> expression DIVIDE expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 67 (expression -> expression DIVIDE expression .)
    NE              reduce using rule 67 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 67 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 67 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 67 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 67 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 67 (expression -> expression DIVIDE expression .)
    MODULE          reduce using rule 67 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 67 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 67 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 67 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 67 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 67 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 67 (expression -> expression DIVIDE expression .)
    MODULEEQ        reduce using rule 67 (expression -> expression DIVIDE expression .)
    DIVIDEEQ        reduce using rule 67 (expression -> expression DIVIDE expression .)
    TIMESEQ         reduce using rule 67 (expression -> expression DIVIDE expression .)
    MINEQ           reduce using rule 67 (expression -> expression DIVIDE expression .)
    ADDEQ           reduce using rule 67 (expression -> expression DIVIDE expression .)
    ASSIGN          reduce using rule 67 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 67 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 67 (expression -> expression DIVIDE expression .)


state 98

    (68) expression -> expression TIMES expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 68 (expression -> expression TIMES expression .)
    NE              reduce using rule 68 (expression -> expression TIMES expression .)
    EQ              reduce using rule 68 (expression -> expression TIMES expression .)
    GE              reduce using rule 68 (expression -> expression TIMES expression .)
    GT              reduce using rule 68 (expression -> expression TIMES expression .)
    LE              reduce using rule 68 (expression -> expression TIMES expression .)
    LT              reduce using rule 68 (expression -> expression TIMES expression .)
    MODULE          reduce using rule 68 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 68 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 68 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 68 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 68 (expression -> expression TIMES expression .)
    AND             reduce using rule 68 (expression -> expression TIMES expression .)
    OR              reduce using rule 68 (expression -> expression TIMES expression .)
    MODULEEQ        reduce using rule 68 (expression -> expression TIMES expression .)
    DIVIDEEQ        reduce using rule 68 (expression -> expression TIMES expression .)
    TIMESEQ         reduce using rule 68 (expression -> expression TIMES expression .)
    MINEQ           reduce using rule 68 (expression -> expression TIMES expression .)
    ADDEQ           reduce using rule 68 (expression -> expression TIMES expression .)
    ASSIGN          reduce using rule 68 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 68 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 68 (expression -> expression TIMES expression .)


state 99

    (69) expression -> expression MINUS expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 69 (expression -> expression MINUS expression .)
    NE              reduce using rule 69 (expression -> expression MINUS expression .)
    EQ              reduce using rule 69 (expression -> expression MINUS expression .)
    GE              reduce using rule 69 (expression -> expression MINUS expression .)
    GT              reduce using rule 69 (expression -> expression MINUS expression .)
    LE              reduce using rule 69 (expression -> expression MINUS expression .)
    LT              reduce using rule 69 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 69 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 69 (expression -> expression MINUS expression .)
    AND             reduce using rule 69 (expression -> expression MINUS expression .)
    OR              reduce using rule 69 (expression -> expression MINUS expression .)
    MODULEEQ        reduce using rule 69 (expression -> expression MINUS expression .)
    DIVIDEEQ        reduce using rule 69 (expression -> expression MINUS expression .)
    TIMESEQ         reduce using rule 69 (expression -> expression MINUS expression .)
    MINEQ           reduce using rule 69 (expression -> expression MINUS expression .)
    ADDEQ           reduce using rule 69 (expression -> expression MINUS expression .)
    ASSIGN          reduce using rule 69 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 69 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 69 (expression -> expression MINUS expression .)
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60


state 100

    (70) expression -> expression PLUS expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 70 (expression -> expression PLUS expression .)
    NE              reduce using rule 70 (expression -> expression PLUS expression .)
    EQ              reduce using rule 70 (expression -> expression PLUS expression .)
    GE              reduce using rule 70 (expression -> expression PLUS expression .)
    GT              reduce using rule 70 (expression -> expression PLUS expression .)
    LE              reduce using rule 70 (expression -> expression PLUS expression .)
    LT              reduce using rule 70 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 70 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 70 (expression -> expression PLUS expression .)
    AND             reduce using rule 70 (expression -> expression PLUS expression .)
    OR              reduce using rule 70 (expression -> expression PLUS expression .)
    MODULEEQ        reduce using rule 70 (expression -> expression PLUS expression .)
    DIVIDEEQ        reduce using rule 70 (expression -> expression PLUS expression .)
    TIMESEQ         reduce using rule 70 (expression -> expression PLUS expression .)
    MINEQ           reduce using rule 70 (expression -> expression PLUS expression .)
    ADDEQ           reduce using rule 70 (expression -> expression PLUS expression .)
    ASSIGN          reduce using rule 70 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 70 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 70 (expression -> expression PLUS expression .)
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60


state 101

    (71) expression -> expression AND expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 71 (expression -> expression AND expression .)
    AND             reduce using rule 71 (expression -> expression AND expression .)
    OR              reduce using rule 71 (expression -> expression AND expression .)
    MODULEEQ        reduce using rule 71 (expression -> expression AND expression .)
    DIVIDEEQ        reduce using rule 71 (expression -> expression AND expression .)
    TIMESEQ         reduce using rule 71 (expression -> expression AND expression .)
    MINEQ           reduce using rule 71 (expression -> expression AND expression .)
    ADDEQ           reduce using rule 71 (expression -> expression AND expression .)
    ASSIGN          reduce using rule 71 (expression -> expression AND expression .)
    RPAREN          reduce using rule 71 (expression -> expression AND expression .)
    COMMA           reduce using rule 71 (expression -> expression AND expression .)
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62


state 102

    (72) expression -> expression OR expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 72 (expression -> expression OR expression .)
    OR              reduce using rule 72 (expression -> expression OR expression .)
    MODULEEQ        reduce using rule 72 (expression -> expression OR expression .)
    DIVIDEEQ        reduce using rule 72 (expression -> expression OR expression .)
    TIMESEQ         reduce using rule 72 (expression -> expression OR expression .)
    MINEQ           reduce using rule 72 (expression -> expression OR expression .)
    ADDEQ           reduce using rule 72 (expression -> expression OR expression .)
    ASSIGN          reduce using rule 72 (expression -> expression OR expression .)
    RPAREN          reduce using rule 72 (expression -> expression OR expression .)
    COMMA           reduce using rule 72 (expression -> expression OR expression .)
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63


state 103

    (73) expression -> expression MODULEEQ expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 73 (expression -> expression MODULEEQ expression .)
    DIVIDEEQ        reduce using rule 73 (expression -> expression MODULEEQ expression .)
    TIMESEQ         reduce using rule 73 (expression -> expression MODULEEQ expression .)
    MINEQ           reduce using rule 73 (expression -> expression MODULEEQ expression .)
    ADDEQ           reduce using rule 73 (expression -> expression MODULEEQ expression .)
    RPAREN          reduce using rule 73 (expression -> expression MODULEEQ expression .)
    COMMA           reduce using rule 73 (expression -> expression MODULEEQ expression .)
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    MODULEEQ        shift and go to state 65
    ASSIGN          shift and go to state 70


state 104

    (74) expression -> expression DIVIDEEQ expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 74 (expression -> expression DIVIDEEQ expression .)
    TIMESEQ         reduce using rule 74 (expression -> expression DIVIDEEQ expression .)
    MINEQ           reduce using rule 74 (expression -> expression DIVIDEEQ expression .)
    ADDEQ           reduce using rule 74 (expression -> expression DIVIDEEQ expression .)
    RPAREN          reduce using rule 74 (expression -> expression DIVIDEEQ expression .)
    COMMA           reduce using rule 74 (expression -> expression DIVIDEEQ expression .)
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    MODULEEQ        shift and go to state 65
    DIVIDEEQ        shift and go to state 66
    ASSIGN          shift and go to state 70


state 105

    (75) expression -> expression TIMESEQ expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 75 (expression -> expression TIMESEQ expression .)
    MINEQ           reduce using rule 75 (expression -> expression TIMESEQ expression .)
    ADDEQ           reduce using rule 75 (expression -> expression TIMESEQ expression .)
    RPAREN          reduce using rule 75 (expression -> expression TIMESEQ expression .)
    COMMA           reduce using rule 75 (expression -> expression TIMESEQ expression .)
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    MODULEEQ        shift and go to state 65
    DIVIDEEQ        shift and go to state 66
    TIMESEQ         shift and go to state 67
    ASSIGN          shift and go to state 70


state 106

    (76) expression -> expression MINEQ expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 76 (expression -> expression MINEQ expression .)
    ADDEQ           reduce using rule 76 (expression -> expression MINEQ expression .)
    RPAREN          reduce using rule 76 (expression -> expression MINEQ expression .)
    COMMA           reduce using rule 76 (expression -> expression MINEQ expression .)
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    MODULEEQ        shift and go to state 65
    DIVIDEEQ        shift and go to state 66
    TIMESEQ         shift and go to state 67
    MINEQ           shift and go to state 68
    ASSIGN          shift and go to state 70


state 107

    (77) expression -> expression ADDEQ expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 77 (expression -> expression ADDEQ expression .)
    RPAREN          reduce using rule 77 (expression -> expression ADDEQ expression .)
    COMMA           reduce using rule 77 (expression -> expression ADDEQ expression .)
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    MODULEEQ        shift and go to state 65
    DIVIDEEQ        shift and go to state 66
    TIMESEQ         shift and go to state 67
    MINEQ           shift and go to state 68
    ADDEQ           shift and go to state 69
    ASSIGN          shift and go to state 70


state 108

    (78) expression -> expression ASSIGN expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 78 (expression -> expression ASSIGN expression .)
    MODULEEQ        reduce using rule 78 (expression -> expression ASSIGN expression .)
    DIVIDEEQ        reduce using rule 78 (expression -> expression ASSIGN expression .)
    TIMESEQ         reduce using rule 78 (expression -> expression ASSIGN expression .)
    MINEQ           reduce using rule 78 (expression -> expression ASSIGN expression .)
    ADDEQ           reduce using rule 78 (expression -> expression ASSIGN expression .)
    RPAREN          reduce using rule 78 (expression -> expression ASSIGN expression .)
    COMMA           reduce using rule 78 (expression -> expression ASSIGN expression .)
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    ASSIGN          shift and go to state 70


state 109

    (49) return_stmt -> RETURN _11_expression_optional SEMI .
    VAR             reduce using rule 49 (return_stmt -> RETURN _11_expression_optional SEMI .)
    FUN             reduce using rule 49 (return_stmt -> RETURN _11_expression_optional SEMI .)
    CLASS           reduce using rule 49 (return_stmt -> RETURN _11_expression_optional SEMI .)
    LBRACE          reduce using rule 49 (return_stmt -> RETURN _11_expression_optional SEMI .)
    WHILE           reduce using rule 49 (return_stmt -> RETURN _11_expression_optional SEMI .)
    RETURN          reduce using rule 49 (return_stmt -> RETURN _11_expression_optional SEMI .)
    PRINT           reduce using rule 49 (return_stmt -> RETURN _11_expression_optional SEMI .)
    IF              reduce using rule 49 (return_stmt -> RETURN _11_expression_optional SEMI .)
    FOR             reduce using rule 49 (return_stmt -> RETURN _11_expression_optional SEMI .)
    NOT             reduce using rule 49 (return_stmt -> RETURN _11_expression_optional SEMI .)
    MINUS           reduce using rule 49 (return_stmt -> RETURN _11_expression_optional SEMI .)
    LPAREN          reduce using rule 49 (return_stmt -> RETURN _11_expression_optional SEMI .)
    SUPER           reduce using rule 49 (return_stmt -> RETURN _11_expression_optional SEMI .)
    IDENT           reduce using rule 49 (return_stmt -> RETURN _11_expression_optional SEMI .)
    THIS            reduce using rule 49 (return_stmt -> RETURN _11_expression_optional SEMI .)
    NIL             reduce using rule 49 (return_stmt -> RETURN _11_expression_optional SEMI .)
    FALSE           reduce using rule 49 (return_stmt -> RETURN _11_expression_optional SEMI .)
    TRUE            reduce using rule 49 (return_stmt -> RETURN _11_expression_optional SEMI .)
    STRING          reduce using rule 49 (return_stmt -> RETURN _11_expression_optional SEMI .)
    NUM             reduce using rule 49 (return_stmt -> RETURN _11_expression_optional SEMI .)
    REAL            reduce using rule 49 (return_stmt -> RETURN _11_expression_optional SEMI .)
    $end            reduce using rule 49 (return_stmt -> RETURN _11_expression_optional SEMI .)
    RBRACE          reduce using rule 49 (return_stmt -> RETURN _11_expression_optional SEMI .)
    ELSE            reduce using rule 49 (return_stmt -> RETURN _11_expression_optional SEMI .)
    END_IF          reduce using rule 49 (return_stmt -> RETURN _11_expression_optional SEMI .)


state 110

    (48) print_stmt -> PRINT LPAREN expression . RPAREN SEMI
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    RPAREN          shift and go to state 130
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    MODULEEQ        shift and go to state 65
    DIVIDEEQ        shift and go to state 66
    TIMESEQ         shift and go to state 67
    MINEQ           shift and go to state 68
    ADDEQ           shift and go to state 69
    ASSIGN          shift and go to state 70


state 111

    (43) if_stmt -> IF LPAREN _9_expression_optional . RPAREN statement _10_ELSE_statement_optional END_IF
    RPAREN          shift and go to state 131


state 112

    (44) _9_expression_optional -> expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    RPAREN          reduce using rule 44 (_9_expression_optional -> expression .)
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    MODULEEQ        shift and go to state 65
    DIVIDEEQ        shift and go to state 66
    TIMESEQ         shift and go to state 67
    MINEQ           shift and go to state 68
    ADDEQ           shift and go to state 69
    ASSIGN          shift and go to state 70


state 113

    (31) for_stmt -> FOR LPAREN SEMI . _5_expression_optional SEMI _6_expression_optional RPAREN statement
    (32) _5_expression_optional -> . expression
    (33) _5_expression_optional -> .
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    SEMI            reduce using rule 33 (_5_expression_optional -> .)
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    _5_expression_optional         shift and go to state 132
    expression                     shift and go to state 133
    factor                         shift and go to state 29

state 114

    (36) for_stmt -> FOR LPAREN for_initialize . _7_expression_optional SEMI _8_expression_optional RPAREN statement
    (37) _7_expression_optional -> . expression
    (38) _7_expression_optional -> .
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    SEMI            reduce using rule 38 (_7_expression_optional -> .)
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    _7_expression_optional         shift and go to state 134
    expression                     shift and go to state 135
    factor                         shift and go to state 29

state 115

    (41) for_initialize -> expr_stmt .
    NOT             reduce using rule 41 (for_initialize -> expr_stmt .)
    MINUS           reduce using rule 41 (for_initialize -> expr_stmt .)
    LPAREN          reduce using rule 41 (for_initialize -> expr_stmt .)
    SUPER           reduce using rule 41 (for_initialize -> expr_stmt .)
    IDENT           reduce using rule 41 (for_initialize -> expr_stmt .)
    THIS            reduce using rule 41 (for_initialize -> expr_stmt .)
    NIL             reduce using rule 41 (for_initialize -> expr_stmt .)
    FALSE           reduce using rule 41 (for_initialize -> expr_stmt .)
    TRUE            reduce using rule 41 (for_initialize -> expr_stmt .)
    STRING          reduce using rule 41 (for_initialize -> expr_stmt .)
    NUM             reduce using rule 41 (for_initialize -> expr_stmt .)
    REAL            reduce using rule 41 (for_initialize -> expr_stmt .)
    SEMI            reduce using rule 41 (for_initialize -> expr_stmt .)


state 116

    (42) for_initialize -> var_declaration .
    NOT             reduce using rule 42 (for_initialize -> var_declaration .)
    MINUS           reduce using rule 42 (for_initialize -> var_declaration .)
    LPAREN          reduce using rule 42 (for_initialize -> var_declaration .)
    SUPER           reduce using rule 42 (for_initialize -> var_declaration .)
    IDENT           reduce using rule 42 (for_initialize -> var_declaration .)
    THIS            reduce using rule 42 (for_initialize -> var_declaration .)
    NIL             reduce using rule 42 (for_initialize -> var_declaration .)
    FALSE           reduce using rule 42 (for_initialize -> var_declaration .)
    TRUE            reduce using rule 42 (for_initialize -> var_declaration .)
    STRING          reduce using rule 42 (for_initialize -> var_declaration .)
    NUM             reduce using rule 42 (for_initialize -> var_declaration .)
    REAL            reduce using rule 42 (for_initialize -> var_declaration .)
    SEMI            reduce using rule 42 (for_initialize -> var_declaration .)


state 117

    (82) factor -> factor LPAREN _13_arguments_optional . RPAREN
    RPAREN          shift and go to state 136


state 118

    (83) _13_arguments_optional -> arguments .
    RPAREN          reduce using rule 83 (_13_arguments_optional -> arguments .)


state 119

    (104) arguments -> expression . _16_COMMA_expression_repeat
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    (105) _16_COMMA_expression_repeat -> . _16_COMMA_expression_items
    (106) _16_COMMA_expression_repeat -> .
    (107) _16_COMMA_expression_items -> . _16_COMMA_expression_items _16_COMMA_expression_item
    (108) _16_COMMA_expression_items -> . _16_COMMA_expression_item
    (109) _16_COMMA_expression_item -> . COMMA expression
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    MODULEEQ        shift and go to state 65
    DIVIDEEQ        shift and go to state 66
    TIMESEQ         shift and go to state 67
    MINEQ           shift and go to state 68
    ADDEQ           shift and go to state 69
    ASSIGN          shift and go to state 70
    RPAREN          reduce using rule 106 (_16_COMMA_expression_repeat -> .)
    COMMA           shift and go to state 140

    _16_COMMA_expression_repeat    shift and go to state 137
    _16_COMMA_expression_items     shift and go to state 138
    _16_COMMA_expression_item      shift and go to state 139

state 120

    (85) factor -> factor POINT IDENT .
    LPAREN          reduce using rule 85 (factor -> factor POINT IDENT .)
    POINT           reduce using rule 85 (factor -> factor POINT IDENT .)
    SEMI            reduce using rule 85 (factor -> factor POINT IDENT .)
    NE              reduce using rule 85 (factor -> factor POINT IDENT .)
    EQ              reduce using rule 85 (factor -> factor POINT IDENT .)
    GE              reduce using rule 85 (factor -> factor POINT IDENT .)
    GT              reduce using rule 85 (factor -> factor POINT IDENT .)
    LE              reduce using rule 85 (factor -> factor POINT IDENT .)
    LT              reduce using rule 85 (factor -> factor POINT IDENT .)
    MODULE          reduce using rule 85 (factor -> factor POINT IDENT .)
    DIVIDE          reduce using rule 85 (factor -> factor POINT IDENT .)
    TIMES           reduce using rule 85 (factor -> factor POINT IDENT .)
    MINUS           reduce using rule 85 (factor -> factor POINT IDENT .)
    PLUS            reduce using rule 85 (factor -> factor POINT IDENT .)
    AND             reduce using rule 85 (factor -> factor POINT IDENT .)
    OR              reduce using rule 85 (factor -> factor POINT IDENT .)
    MODULEEQ        reduce using rule 85 (factor -> factor POINT IDENT .)
    DIVIDEEQ        reduce using rule 85 (factor -> factor POINT IDENT .)
    TIMESEQ         reduce using rule 85 (factor -> factor POINT IDENT .)
    MINEQ           reduce using rule 85 (factor -> factor POINT IDENT .)
    ADDEQ           reduce using rule 85 (factor -> factor POINT IDENT .)
    ASSIGN          reduce using rule 85 (factor -> factor POINT IDENT .)
    RPAREN          reduce using rule 85 (factor -> factor POINT IDENT .)
    COMMA           reduce using rule 85 (factor -> factor POINT IDENT .)


state 121

    (86) factor -> SUPER POINT IDENT .
    LPAREN          reduce using rule 86 (factor -> SUPER POINT IDENT .)
    POINT           reduce using rule 86 (factor -> SUPER POINT IDENT .)
    SEMI            reduce using rule 86 (factor -> SUPER POINT IDENT .)
    NE              reduce using rule 86 (factor -> SUPER POINT IDENT .)
    EQ              reduce using rule 86 (factor -> SUPER POINT IDENT .)
    GE              reduce using rule 86 (factor -> SUPER POINT IDENT .)
    GT              reduce using rule 86 (factor -> SUPER POINT IDENT .)
    LE              reduce using rule 86 (factor -> SUPER POINT IDENT .)
    LT              reduce using rule 86 (factor -> SUPER POINT IDENT .)
    MODULE          reduce using rule 86 (factor -> SUPER POINT IDENT .)
    DIVIDE          reduce using rule 86 (factor -> SUPER POINT IDENT .)
    TIMES           reduce using rule 86 (factor -> SUPER POINT IDENT .)
    MINUS           reduce using rule 86 (factor -> SUPER POINT IDENT .)
    PLUS            reduce using rule 86 (factor -> SUPER POINT IDENT .)
    AND             reduce using rule 86 (factor -> SUPER POINT IDENT .)
    OR              reduce using rule 86 (factor -> SUPER POINT IDENT .)
    MODULEEQ        reduce using rule 86 (factor -> SUPER POINT IDENT .)
    DIVIDEEQ        reduce using rule 86 (factor -> SUPER POINT IDENT .)
    TIMESEQ         reduce using rule 86 (factor -> SUPER POINT IDENT .)
    MINEQ           reduce using rule 86 (factor -> SUPER POINT IDENT .)
    ADDEQ           reduce using rule 86 (factor -> SUPER POINT IDENT .)
    ASSIGN          reduce using rule 86 (factor -> SUPER POINT IDENT .)
    RPAREN          reduce using rule 86 (factor -> SUPER POINT IDENT .)
    COMMA           reduce using rule 86 (factor -> SUPER POINT IDENT .)


state 122

    (20) var_declaration -> VAR IDENT _4_ASSIGN_expression_optional SEMI .
    VAR             reduce using rule 20 (var_declaration -> VAR IDENT _4_ASSIGN_expression_optional SEMI .)
    FUN             reduce using rule 20 (var_declaration -> VAR IDENT _4_ASSIGN_expression_optional SEMI .)
    CLASS           reduce using rule 20 (var_declaration -> VAR IDENT _4_ASSIGN_expression_optional SEMI .)
    LBRACE          reduce using rule 20 (var_declaration -> VAR IDENT _4_ASSIGN_expression_optional SEMI .)
    WHILE           reduce using rule 20 (var_declaration -> VAR IDENT _4_ASSIGN_expression_optional SEMI .)
    RETURN          reduce using rule 20 (var_declaration -> VAR IDENT _4_ASSIGN_expression_optional SEMI .)
    PRINT           reduce using rule 20 (var_declaration -> VAR IDENT _4_ASSIGN_expression_optional SEMI .)
    IF              reduce using rule 20 (var_declaration -> VAR IDENT _4_ASSIGN_expression_optional SEMI .)
    FOR             reduce using rule 20 (var_declaration -> VAR IDENT _4_ASSIGN_expression_optional SEMI .)
    NOT             reduce using rule 20 (var_declaration -> VAR IDENT _4_ASSIGN_expression_optional SEMI .)
    MINUS           reduce using rule 20 (var_declaration -> VAR IDENT _4_ASSIGN_expression_optional SEMI .)
    LPAREN          reduce using rule 20 (var_declaration -> VAR IDENT _4_ASSIGN_expression_optional SEMI .)
    SUPER           reduce using rule 20 (var_declaration -> VAR IDENT _4_ASSIGN_expression_optional SEMI .)
    IDENT           reduce using rule 20 (var_declaration -> VAR IDENT _4_ASSIGN_expression_optional SEMI .)
    THIS            reduce using rule 20 (var_declaration -> VAR IDENT _4_ASSIGN_expression_optional SEMI .)
    NIL             reduce using rule 20 (var_declaration -> VAR IDENT _4_ASSIGN_expression_optional SEMI .)
    FALSE           reduce using rule 20 (var_declaration -> VAR IDENT _4_ASSIGN_expression_optional SEMI .)
    TRUE            reduce using rule 20 (var_declaration -> VAR IDENT _4_ASSIGN_expression_optional SEMI .)
    STRING          reduce using rule 20 (var_declaration -> VAR IDENT _4_ASSIGN_expression_optional SEMI .)
    NUM             reduce using rule 20 (var_declaration -> VAR IDENT _4_ASSIGN_expression_optional SEMI .)
    REAL            reduce using rule 20 (var_declaration -> VAR IDENT _4_ASSIGN_expression_optional SEMI .)
    $end            reduce using rule 20 (var_declaration -> VAR IDENT _4_ASSIGN_expression_optional SEMI .)
    RBRACE          reduce using rule 20 (var_declaration -> VAR IDENT _4_ASSIGN_expression_optional SEMI .)
    SEMI            reduce using rule 20 (var_declaration -> VAR IDENT _4_ASSIGN_expression_optional SEMI .)


state 123

    (21) _4_ASSIGN_expression_optional -> ASSIGN expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 21 (_4_ASSIGN_expression_optional -> ASSIGN expression .)
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    MODULEEQ        shift and go to state 65
    DIVIDEEQ        shift and go to state 66
    TIMESEQ         shift and go to state 67
    MINEQ           shift and go to state 68
    ADDEQ           shift and go to state 69
    ASSIGN          shift and go to state 70


state 124

    (98) parameters -> IDENT . _15_COMMA_IDENT_repeat
    (99) _15_COMMA_IDENT_repeat -> . _15_COMMA_IDENT_items
    (100) _15_COMMA_IDENT_repeat -> .
    (101) _15_COMMA_IDENT_items -> . _15_COMMA_IDENT_items _15_COMMA_IDENT_item
    (102) _15_COMMA_IDENT_items -> . _15_COMMA_IDENT_item
    (103) _15_COMMA_IDENT_item -> . COMMA IDENT
    RPAREN          reduce using rule 100 (_15_COMMA_IDENT_repeat -> .)
    COMMA           shift and go to state 144

    _15_COMMA_IDENT_repeat         shift and go to state 141
    _15_COMMA_IDENT_items          shift and go to state 142
    _15_COMMA_IDENT_item           shift and go to state 143

state 125

    (95) function -> IDENT LPAREN _14_parameters_optional . RPAREN block
    RPAREN          shift and go to state 145


state 126

    (96) _14_parameters_optional -> parameters .
    RPAREN          reduce using rule 96 (_14_parameters_optional -> parameters .)


state 127

    (11) class_declaration -> CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE . _3_function_repeat RBRACE
    (14) _3_function_repeat -> . _3_function_items
    (15) _3_function_repeat -> .
    (16) _3_function_items -> . _3_function_items _3_function_item
    (17) _3_function_items -> . _3_function_item
    (18) _3_function_item -> . function
    (95) function -> . IDENT LPAREN _14_parameters_optional RPAREN block
    RBRACE          reduce using rule 15 (_3_function_repeat -> .)
    IDENT           shift and go to state 43

    _3_function_repeat             shift and go to state 146
    _3_function_items              shift and go to state 147
    _3_function_item               shift and go to state 148
    function                       shift and go to state 149

state 128

    (12) _2_LPAREN_LT_IDENT_RPAREN_optional -> LPAREN LT . IDENT RPAREN
    IDENT           shift and go to state 150


state 129

    (52) while_stmt -> WHILE LPAREN expression RPAREN . statement
    (23) statement -> . block
    (24) statement -> . while_stmt
    (25) statement -> . return_stmt
    (26) statement -> . print_stmt
    (27) statement -> . if_stmt
    (28) statement -> . for_stmt
    (29) statement -> . expr_stmt
    (53) block -> . LBRACE _12_declaration_repeat RBRACE
    (52) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (49) return_stmt -> . RETURN _11_expression_optional SEMI
    (48) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (43) if_stmt -> . IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF
    (31) for_stmt -> . FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement
    (36) for_stmt -> . FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement
    (30) expr_stmt -> . expression SEMI
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    LBRACE          shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    FOR             shift and go to state 28
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 24
    statement                      shift and go to state 151
    block                          shift and go to state 10
    while_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    print_stmt                     shift and go to state 13
    if_stmt                        shift and go to state 14
    for_stmt                       shift and go to state 15
    expr_stmt                      shift and go to state 16
    factor                         shift and go to state 29

state 130

    (48) print_stmt -> PRINT LPAREN expression RPAREN . SEMI
    SEMI            shift and go to state 152


state 131

    (43) if_stmt -> IF LPAREN _9_expression_optional RPAREN . statement _10_ELSE_statement_optional END_IF
    (23) statement -> . block
    (24) statement -> . while_stmt
    (25) statement -> . return_stmt
    (26) statement -> . print_stmt
    (27) statement -> . if_stmt
    (28) statement -> . for_stmt
    (29) statement -> . expr_stmt
    (53) block -> . LBRACE _12_declaration_repeat RBRACE
    (52) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (49) return_stmt -> . RETURN _11_expression_optional SEMI
    (48) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (43) if_stmt -> . IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF
    (31) for_stmt -> . FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement
    (36) for_stmt -> . FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement
    (30) expr_stmt -> . expression SEMI
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    LBRACE          shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    FOR             shift and go to state 28
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    statement                      shift and go to state 153
    block                          shift and go to state 10
    while_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    print_stmt                     shift and go to state 13
    if_stmt                        shift and go to state 14
    for_stmt                       shift and go to state 15
    expr_stmt                      shift and go to state 16
    expression                     shift and go to state 24
    factor                         shift and go to state 29

state 132

    (31) for_stmt -> FOR LPAREN SEMI _5_expression_optional . SEMI _6_expression_optional RPAREN statement
    SEMI            shift and go to state 154


state 133

    (32) _5_expression_optional -> expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 32 (_5_expression_optional -> expression .)
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    MODULEEQ        shift and go to state 65
    DIVIDEEQ        shift and go to state 66
    TIMESEQ         shift and go to state 67
    MINEQ           shift and go to state 68
    ADDEQ           shift and go to state 69
    ASSIGN          shift and go to state 70


state 134

    (36) for_stmt -> FOR LPAREN for_initialize _7_expression_optional . SEMI _8_expression_optional RPAREN statement
    SEMI            shift and go to state 155


state 135

    (37) _7_expression_optional -> expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    SEMI            reduce using rule 37 (_7_expression_optional -> expression .)
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    MODULEEQ        shift and go to state 65
    DIVIDEEQ        shift and go to state 66
    TIMESEQ         shift and go to state 67
    MINEQ           shift and go to state 68
    ADDEQ           shift and go to state 69
    ASSIGN          shift and go to state 70


state 136

    (82) factor -> factor LPAREN _13_arguments_optional RPAREN .
    LPAREN          reduce using rule 82 (factor -> factor LPAREN _13_arguments_optional RPAREN .)
    POINT           reduce using rule 82 (factor -> factor LPAREN _13_arguments_optional RPAREN .)
    SEMI            reduce using rule 82 (factor -> factor LPAREN _13_arguments_optional RPAREN .)
    NE              reduce using rule 82 (factor -> factor LPAREN _13_arguments_optional RPAREN .)
    EQ              reduce using rule 82 (factor -> factor LPAREN _13_arguments_optional RPAREN .)
    GE              reduce using rule 82 (factor -> factor LPAREN _13_arguments_optional RPAREN .)
    GT              reduce using rule 82 (factor -> factor LPAREN _13_arguments_optional RPAREN .)
    LE              reduce using rule 82 (factor -> factor LPAREN _13_arguments_optional RPAREN .)
    LT              reduce using rule 82 (factor -> factor LPAREN _13_arguments_optional RPAREN .)
    MODULE          reduce using rule 82 (factor -> factor LPAREN _13_arguments_optional RPAREN .)
    DIVIDE          reduce using rule 82 (factor -> factor LPAREN _13_arguments_optional RPAREN .)
    TIMES           reduce using rule 82 (factor -> factor LPAREN _13_arguments_optional RPAREN .)
    MINUS           reduce using rule 82 (factor -> factor LPAREN _13_arguments_optional RPAREN .)
    PLUS            reduce using rule 82 (factor -> factor LPAREN _13_arguments_optional RPAREN .)
    AND             reduce using rule 82 (factor -> factor LPAREN _13_arguments_optional RPAREN .)
    OR              reduce using rule 82 (factor -> factor LPAREN _13_arguments_optional RPAREN .)
    MODULEEQ        reduce using rule 82 (factor -> factor LPAREN _13_arguments_optional RPAREN .)
    DIVIDEEQ        reduce using rule 82 (factor -> factor LPAREN _13_arguments_optional RPAREN .)
    TIMESEQ         reduce using rule 82 (factor -> factor LPAREN _13_arguments_optional RPAREN .)
    MINEQ           reduce using rule 82 (factor -> factor LPAREN _13_arguments_optional RPAREN .)
    ADDEQ           reduce using rule 82 (factor -> factor LPAREN _13_arguments_optional RPAREN .)
    ASSIGN          reduce using rule 82 (factor -> factor LPAREN _13_arguments_optional RPAREN .)
    RPAREN          reduce using rule 82 (factor -> factor LPAREN _13_arguments_optional RPAREN .)
    COMMA           reduce using rule 82 (factor -> factor LPAREN _13_arguments_optional RPAREN .)


state 137

    (104) arguments -> expression _16_COMMA_expression_repeat .
    RPAREN          reduce using rule 104 (arguments -> expression _16_COMMA_expression_repeat .)


state 138

    (105) _16_COMMA_expression_repeat -> _16_COMMA_expression_items .
    (107) _16_COMMA_expression_items -> _16_COMMA_expression_items . _16_COMMA_expression_item
    (109) _16_COMMA_expression_item -> . COMMA expression
    RPAREN          reduce using rule 105 (_16_COMMA_expression_repeat -> _16_COMMA_expression_items .)
    COMMA           shift and go to state 140

    _16_COMMA_expression_item      shift and go to state 156

state 139

    (108) _16_COMMA_expression_items -> _16_COMMA_expression_item .
    COMMA           reduce using rule 108 (_16_COMMA_expression_items -> _16_COMMA_expression_item .)
    RPAREN          reduce using rule 108 (_16_COMMA_expression_items -> _16_COMMA_expression_item .)


state 140

    (109) _16_COMMA_expression_item -> COMMA . expression
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    expression                     shift and go to state 157
    factor                         shift and go to state 29

state 141

    (98) parameters -> IDENT _15_COMMA_IDENT_repeat .
    RPAREN          reduce using rule 98 (parameters -> IDENT _15_COMMA_IDENT_repeat .)


state 142

    (99) _15_COMMA_IDENT_repeat -> _15_COMMA_IDENT_items .
    (101) _15_COMMA_IDENT_items -> _15_COMMA_IDENT_items . _15_COMMA_IDENT_item
    (103) _15_COMMA_IDENT_item -> . COMMA IDENT
    RPAREN          reduce using rule 99 (_15_COMMA_IDENT_repeat -> _15_COMMA_IDENT_items .)
    COMMA           shift and go to state 144

    _15_COMMA_IDENT_item           shift and go to state 158

state 143

    (102) _15_COMMA_IDENT_items -> _15_COMMA_IDENT_item .
    COMMA           reduce using rule 102 (_15_COMMA_IDENT_items -> _15_COMMA_IDENT_item .)
    RPAREN          reduce using rule 102 (_15_COMMA_IDENT_items -> _15_COMMA_IDENT_item .)


state 144

    (103) _15_COMMA_IDENT_item -> COMMA . IDENT
    IDENT           shift and go to state 159


state 145

    (95) function -> IDENT LPAREN _14_parameters_optional RPAREN . block
    (53) block -> . LBRACE _12_declaration_repeat RBRACE
    LBRACE          shift and go to state 21

    block                          shift and go to state 160

state 146

    (11) class_declaration -> CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat . RBRACE
    RBRACE          shift and go to state 161


state 147

    (14) _3_function_repeat -> _3_function_items .
    (16) _3_function_items -> _3_function_items . _3_function_item
    (18) _3_function_item -> . function
    (95) function -> . IDENT LPAREN _14_parameters_optional RPAREN block
    RBRACE          reduce using rule 14 (_3_function_repeat -> _3_function_items .)
    IDENT           shift and go to state 43

    _3_function_item               shift and go to state 162
    function                       shift and go to state 149

state 148

    (17) _3_function_items -> _3_function_item .
    IDENT           reduce using rule 17 (_3_function_items -> _3_function_item .)
    RBRACE          reduce using rule 17 (_3_function_items -> _3_function_item .)


state 149

    (18) _3_function_item -> function .
    IDENT           reduce using rule 18 (_3_function_item -> function .)
    RBRACE          reduce using rule 18 (_3_function_item -> function .)


state 150

    (12) _2_LPAREN_LT_IDENT_RPAREN_optional -> LPAREN LT IDENT . RPAREN
    RPAREN          shift and go to state 163


state 151

    (52) while_stmt -> WHILE LPAREN expression RPAREN statement .
    VAR             reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    FUN             reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    CLASS           reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    PRINT           reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    FOR             reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    NOT             reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    MINUS           reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    SUPER           reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    IDENT           reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    THIS            reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    NIL             reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    FALSE           reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    TRUE            reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    STRING          reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    NUM             reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    REAL            reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    $end            reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    END_IF          reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)


state 152

    (48) print_stmt -> PRINT LPAREN expression RPAREN SEMI .
    VAR             reduce using rule 48 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    FUN             reduce using rule 48 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    CLASS           reduce using rule 48 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    LBRACE          reduce using rule 48 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 48 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    RETURN          reduce using rule 48 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 48 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 48 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 48 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    NOT             reduce using rule 48 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    MINUS           reduce using rule 48 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 48 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    SUPER           reduce using rule 48 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    IDENT           reduce using rule 48 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    THIS            reduce using rule 48 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    NIL             reduce using rule 48 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    FALSE           reduce using rule 48 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    TRUE            reduce using rule 48 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    STRING          reduce using rule 48 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    NUM             reduce using rule 48 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    REAL            reduce using rule 48 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    $end            reduce using rule 48 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 48 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    ELSE            reduce using rule 48 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    END_IF          reduce using rule 48 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)


state 153

    (43) if_stmt -> IF LPAREN _9_expression_optional RPAREN statement . _10_ELSE_statement_optional END_IF
    (46) _10_ELSE_statement_optional -> . ELSE statement
    (47) _10_ELSE_statement_optional -> .
    ELSE            shift and go to state 165
    END_IF          reduce using rule 47 (_10_ELSE_statement_optional -> .)

    _10_ELSE_statement_optional    shift and go to state 164

state 154

    (31) for_stmt -> FOR LPAREN SEMI _5_expression_optional SEMI . _6_expression_optional RPAREN statement
    (34) _6_expression_optional -> . expression
    (35) _6_expression_optional -> .
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    RPAREN          reduce using rule 35 (_6_expression_optional -> .)
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    _6_expression_optional         shift and go to state 166
    expression                     shift and go to state 167
    factor                         shift and go to state 29

state 155

    (36) for_stmt -> FOR LPAREN for_initialize _7_expression_optional SEMI . _8_expression_optional RPAREN statement
    (39) _8_expression_optional -> . expression
    (40) _8_expression_optional -> .
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    RPAREN          reduce using rule 40 (_8_expression_optional -> .)
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    _8_expression_optional         shift and go to state 168
    expression                     shift and go to state 169
    factor                         shift and go to state 29

state 156

    (107) _16_COMMA_expression_items -> _16_COMMA_expression_items _16_COMMA_expression_item .
    COMMA           reduce using rule 107 (_16_COMMA_expression_items -> _16_COMMA_expression_items _16_COMMA_expression_item .)
    RPAREN          reduce using rule 107 (_16_COMMA_expression_items -> _16_COMMA_expression_items _16_COMMA_expression_item .)


state 157

    (109) _16_COMMA_expression_item -> COMMA expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    COMMA           reduce using rule 109 (_16_COMMA_expression_item -> COMMA expression .)
    RPAREN          reduce using rule 109 (_16_COMMA_expression_item -> COMMA expression .)
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    MODULEEQ        shift and go to state 65
    DIVIDEEQ        shift and go to state 66
    TIMESEQ         shift and go to state 67
    MINEQ           shift and go to state 68
    ADDEQ           shift and go to state 69
    ASSIGN          shift and go to state 70


state 158

    (101) _15_COMMA_IDENT_items -> _15_COMMA_IDENT_items _15_COMMA_IDENT_item .
    COMMA           reduce using rule 101 (_15_COMMA_IDENT_items -> _15_COMMA_IDENT_items _15_COMMA_IDENT_item .)
    RPAREN          reduce using rule 101 (_15_COMMA_IDENT_items -> _15_COMMA_IDENT_items _15_COMMA_IDENT_item .)


state 159

    (103) _15_COMMA_IDENT_item -> COMMA IDENT .
    COMMA           reduce using rule 103 (_15_COMMA_IDENT_item -> COMMA IDENT .)
    RPAREN          reduce using rule 103 (_15_COMMA_IDENT_item -> COMMA IDENT .)


state 160

    (95) function -> IDENT LPAREN _14_parameters_optional RPAREN block .
    VAR             reduce using rule 95 (function -> IDENT LPAREN _14_parameters_optional RPAREN block .)
    FUN             reduce using rule 95 (function -> IDENT LPAREN _14_parameters_optional RPAREN block .)
    CLASS           reduce using rule 95 (function -> IDENT LPAREN _14_parameters_optional RPAREN block .)
    LBRACE          reduce using rule 95 (function -> IDENT LPAREN _14_parameters_optional RPAREN block .)
    WHILE           reduce using rule 95 (function -> IDENT LPAREN _14_parameters_optional RPAREN block .)
    RETURN          reduce using rule 95 (function -> IDENT LPAREN _14_parameters_optional RPAREN block .)
    PRINT           reduce using rule 95 (function -> IDENT LPAREN _14_parameters_optional RPAREN block .)
    IF              reduce using rule 95 (function -> IDENT LPAREN _14_parameters_optional RPAREN block .)
    FOR             reduce using rule 95 (function -> IDENT LPAREN _14_parameters_optional RPAREN block .)
    NOT             reduce using rule 95 (function -> IDENT LPAREN _14_parameters_optional RPAREN block .)
    MINUS           reduce using rule 95 (function -> IDENT LPAREN _14_parameters_optional RPAREN block .)
    LPAREN          reduce using rule 95 (function -> IDENT LPAREN _14_parameters_optional RPAREN block .)
    SUPER           reduce using rule 95 (function -> IDENT LPAREN _14_parameters_optional RPAREN block .)
    IDENT           reduce using rule 95 (function -> IDENT LPAREN _14_parameters_optional RPAREN block .)
    THIS            reduce using rule 95 (function -> IDENT LPAREN _14_parameters_optional RPAREN block .)
    NIL             reduce using rule 95 (function -> IDENT LPAREN _14_parameters_optional RPAREN block .)
    FALSE           reduce using rule 95 (function -> IDENT LPAREN _14_parameters_optional RPAREN block .)
    TRUE            reduce using rule 95 (function -> IDENT LPAREN _14_parameters_optional RPAREN block .)
    STRING          reduce using rule 95 (function -> IDENT LPAREN _14_parameters_optional RPAREN block .)
    NUM             reduce using rule 95 (function -> IDENT LPAREN _14_parameters_optional RPAREN block .)
    REAL            reduce using rule 95 (function -> IDENT LPAREN _14_parameters_optional RPAREN block .)
    $end            reduce using rule 95 (function -> IDENT LPAREN _14_parameters_optional RPAREN block .)
    RBRACE          reduce using rule 95 (function -> IDENT LPAREN _14_parameters_optional RPAREN block .)


state 161

    (11) class_declaration -> CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat RBRACE .
    VAR             reduce using rule 11 (class_declaration -> CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat RBRACE .)
    FUN             reduce using rule 11 (class_declaration -> CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat RBRACE .)
    CLASS           reduce using rule 11 (class_declaration -> CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat RBRACE .)
    LBRACE          reduce using rule 11 (class_declaration -> CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat RBRACE .)
    WHILE           reduce using rule 11 (class_declaration -> CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat RBRACE .)
    RETURN          reduce using rule 11 (class_declaration -> CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat RBRACE .)
    PRINT           reduce using rule 11 (class_declaration -> CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat RBRACE .)
    IF              reduce using rule 11 (class_declaration -> CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat RBRACE .)
    FOR             reduce using rule 11 (class_declaration -> CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat RBRACE .)
    NOT             reduce using rule 11 (class_declaration -> CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat RBRACE .)
    MINUS           reduce using rule 11 (class_declaration -> CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat RBRACE .)
    LPAREN          reduce using rule 11 (class_declaration -> CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat RBRACE .)
    SUPER           reduce using rule 11 (class_declaration -> CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat RBRACE .)
    IDENT           reduce using rule 11 (class_declaration -> CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat RBRACE .)
    THIS            reduce using rule 11 (class_declaration -> CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat RBRACE .)
    NIL             reduce using rule 11 (class_declaration -> CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat RBRACE .)
    FALSE           reduce using rule 11 (class_declaration -> CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat RBRACE .)
    TRUE            reduce using rule 11 (class_declaration -> CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat RBRACE .)
    STRING          reduce using rule 11 (class_declaration -> CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat RBRACE .)
    NUM             reduce using rule 11 (class_declaration -> CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat RBRACE .)
    REAL            reduce using rule 11 (class_declaration -> CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat RBRACE .)
    $end            reduce using rule 11 (class_declaration -> CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat RBRACE .)
    RBRACE          reduce using rule 11 (class_declaration -> CLASS IDENT _2_LPAREN_LT_IDENT_RPAREN_optional LBRACE _3_function_repeat RBRACE .)


state 162

    (16) _3_function_items -> _3_function_items _3_function_item .
    IDENT           reduce using rule 16 (_3_function_items -> _3_function_items _3_function_item .)
    RBRACE          reduce using rule 16 (_3_function_items -> _3_function_items _3_function_item .)


state 163

    (12) _2_LPAREN_LT_IDENT_RPAREN_optional -> LPAREN LT IDENT RPAREN .
    LBRACE          reduce using rule 12 (_2_LPAREN_LT_IDENT_RPAREN_optional -> LPAREN LT IDENT RPAREN .)


state 164

    (43) if_stmt -> IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional . END_IF
    END_IF          shift and go to state 170


state 165

    (46) _10_ELSE_statement_optional -> ELSE . statement
    (23) statement -> . block
    (24) statement -> . while_stmt
    (25) statement -> . return_stmt
    (26) statement -> . print_stmt
    (27) statement -> . if_stmt
    (28) statement -> . for_stmt
    (29) statement -> . expr_stmt
    (53) block -> . LBRACE _12_declaration_repeat RBRACE
    (52) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (49) return_stmt -> . RETURN _11_expression_optional SEMI
    (48) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (43) if_stmt -> . IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF
    (31) for_stmt -> . FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement
    (36) for_stmt -> . FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement
    (30) expr_stmt -> . expression SEMI
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    LBRACE          shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    FOR             shift and go to state 28
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    statement                      shift and go to state 171
    block                          shift and go to state 10
    while_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    print_stmt                     shift and go to state 13
    if_stmt                        shift and go to state 14
    for_stmt                       shift and go to state 15
    expr_stmt                      shift and go to state 16
    expression                     shift and go to state 24
    factor                         shift and go to state 29

state 166

    (31) for_stmt -> FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional . RPAREN statement
    RPAREN          shift and go to state 172


state 167

    (34) _6_expression_optional -> expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    RPAREN          reduce using rule 34 (_6_expression_optional -> expression .)
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    MODULEEQ        shift and go to state 65
    DIVIDEEQ        shift and go to state 66
    TIMESEQ         shift and go to state 67
    MINEQ           shift and go to state 68
    ADDEQ           shift and go to state 69
    ASSIGN          shift and go to state 70


state 168

    (36) for_stmt -> FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional . RPAREN statement
    RPAREN          shift and go to state 173


state 169

    (39) _8_expression_optional -> expression .
    (60) expression -> expression . NE expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . GE expression
    (63) expression -> expression . GT expression
    (64) expression -> expression . LE expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . MODULE expression
    (67) expression -> expression . DIVIDE expression
    (68) expression -> expression . TIMES expression
    (69) expression -> expression . MINUS expression
    (70) expression -> expression . PLUS expression
    (71) expression -> expression . AND expression
    (72) expression -> expression . OR expression
    (73) expression -> expression . MODULEEQ expression
    (74) expression -> expression . DIVIDEEQ expression
    (75) expression -> expression . TIMESEQ expression
    (76) expression -> expression . MINEQ expression
    (77) expression -> expression . ADDEQ expression
    (78) expression -> expression . ASSIGN expression
    RPAREN          reduce using rule 39 (_8_expression_optional -> expression .)
    NE              shift and go to state 52
    EQ              shift and go to state 53
    GE              shift and go to state 54
    GT              shift and go to state 55
    LE              shift and go to state 56
    LT              shift and go to state 57
    MODULE          shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60
    MINUS           shift and go to state 61
    PLUS            shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    MODULEEQ        shift and go to state 65
    DIVIDEEQ        shift and go to state 66
    TIMESEQ         shift and go to state 67
    MINEQ           shift and go to state 68
    ADDEQ           shift and go to state 69
    ASSIGN          shift and go to state 70


state 170

    (43) if_stmt -> IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF .
    VAR             reduce using rule 43 (if_stmt -> IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF .)
    FUN             reduce using rule 43 (if_stmt -> IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF .)
    CLASS           reduce using rule 43 (if_stmt -> IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF .)
    LBRACE          reduce using rule 43 (if_stmt -> IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF .)
    WHILE           reduce using rule 43 (if_stmt -> IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF .)
    RETURN          reduce using rule 43 (if_stmt -> IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF .)
    PRINT           reduce using rule 43 (if_stmt -> IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF .)
    IF              reduce using rule 43 (if_stmt -> IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF .)
    FOR             reduce using rule 43 (if_stmt -> IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF .)
    NOT             reduce using rule 43 (if_stmt -> IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF .)
    MINUS           reduce using rule 43 (if_stmt -> IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF .)
    LPAREN          reduce using rule 43 (if_stmt -> IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF .)
    SUPER           reduce using rule 43 (if_stmt -> IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF .)
    IDENT           reduce using rule 43 (if_stmt -> IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF .)
    THIS            reduce using rule 43 (if_stmt -> IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF .)
    NIL             reduce using rule 43 (if_stmt -> IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF .)
    FALSE           reduce using rule 43 (if_stmt -> IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF .)
    TRUE            reduce using rule 43 (if_stmt -> IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF .)
    STRING          reduce using rule 43 (if_stmt -> IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF .)
    NUM             reduce using rule 43 (if_stmt -> IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF .)
    REAL            reduce using rule 43 (if_stmt -> IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF .)
    $end            reduce using rule 43 (if_stmt -> IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF .)
    RBRACE          reduce using rule 43 (if_stmt -> IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF .)
    ELSE            reduce using rule 43 (if_stmt -> IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF .)
    END_IF          reduce using rule 43 (if_stmt -> IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF .)


state 171

    (46) _10_ELSE_statement_optional -> ELSE statement .
    END_IF          reduce using rule 46 (_10_ELSE_statement_optional -> ELSE statement .)


state 172

    (31) for_stmt -> FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN . statement
    (23) statement -> . block
    (24) statement -> . while_stmt
    (25) statement -> . return_stmt
    (26) statement -> . print_stmt
    (27) statement -> . if_stmt
    (28) statement -> . for_stmt
    (29) statement -> . expr_stmt
    (53) block -> . LBRACE _12_declaration_repeat RBRACE
    (52) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (49) return_stmt -> . RETURN _11_expression_optional SEMI
    (48) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (43) if_stmt -> . IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF
    (31) for_stmt -> . FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement
    (36) for_stmt -> . FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement
    (30) expr_stmt -> . expression SEMI
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    LBRACE          shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    FOR             shift and go to state 28
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    statement                      shift and go to state 174
    block                          shift and go to state 10
    while_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    print_stmt                     shift and go to state 13
    if_stmt                        shift and go to state 14
    for_stmt                       shift and go to state 15
    expr_stmt                      shift and go to state 16
    expression                     shift and go to state 24
    factor                         shift and go to state 29

state 173

    (36) for_stmt -> FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN . statement
    (23) statement -> . block
    (24) statement -> . while_stmt
    (25) statement -> . return_stmt
    (26) statement -> . print_stmt
    (27) statement -> . if_stmt
    (28) statement -> . for_stmt
    (29) statement -> . expr_stmt
    (53) block -> . LBRACE _12_declaration_repeat RBRACE
    (52) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (49) return_stmt -> . RETURN _11_expression_optional SEMI
    (48) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (43) if_stmt -> . IF LPAREN _9_expression_optional RPAREN statement _10_ELSE_statement_optional END_IF
    (31) for_stmt -> . FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement
    (36) for_stmt -> . FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement
    (30) expr_stmt -> . expression SEMI
    (59) expression -> . factor
    (60) expression -> . expression NE expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression GE expression
    (63) expression -> . expression GT expression
    (64) expression -> . expression LE expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression MODULE expression
    (67) expression -> . expression DIVIDE expression
    (68) expression -> . expression TIMES expression
    (69) expression -> . expression MINUS expression
    (70) expression -> . expression PLUS expression
    (71) expression -> . expression AND expression
    (72) expression -> . expression OR expression
    (73) expression -> . expression MODULEEQ expression
    (74) expression -> . expression DIVIDEEQ expression
    (75) expression -> . expression TIMESEQ expression
    (76) expression -> . expression MINEQ expression
    (77) expression -> . expression ADDEQ expression
    (78) expression -> . expression ASSIGN expression
    (79) factor -> . NOT factor
    (80) factor -> . MINUS factor
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . factor LPAREN _13_arguments_optional RPAREN
    (85) factor -> . factor POINT IDENT
    (86) factor -> . SUPER POINT IDENT
    (87) factor -> . IDENT
    (88) factor -> . THIS
    (89) factor -> . NIL
    (90) factor -> . FALSE
    (91) factor -> . TRUE
    (92) factor -> . STRING
    (93) factor -> . NUM
    (94) factor -> . REAL
    LBRACE          shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    FOR             shift and go to state 28
    NOT             shift and go to state 31
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 23
    SUPER           shift and go to state 32
    IDENT           shift and go to state 18
    THIS            shift and go to state 33
    NIL             shift and go to state 34
    FALSE           shift and go to state 35
    TRUE            shift and go to state 36
    STRING          shift and go to state 37
    NUM             shift and go to state 38
    REAL            shift and go to state 39

    statement                      shift and go to state 175
    block                          shift and go to state 10
    while_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    print_stmt                     shift and go to state 13
    if_stmt                        shift and go to state 14
    for_stmt                       shift and go to state 15
    expr_stmt                      shift and go to state 16
    expression                     shift and go to state 24
    factor                         shift and go to state 29

state 174

    (31) for_stmt -> FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement .
    VAR             reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement .)
    FUN             reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement .)
    CLASS           reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement .)
    LBRACE          reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement .)
    WHILE           reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement .)
    RETURN          reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement .)
    PRINT           reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement .)
    IF              reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement .)
    FOR             reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement .)
    NOT             reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement .)
    MINUS           reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement .)
    LPAREN          reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement .)
    SUPER           reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement .)
    IDENT           reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement .)
    THIS            reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement .)
    NIL             reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement .)
    FALSE           reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement .)
    TRUE            reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement .)
    STRING          reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement .)
    NUM             reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement .)
    REAL            reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement .)
    $end            reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement .)
    RBRACE          reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement .)
    ELSE            reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement .)
    END_IF          reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_expression_optional SEMI _6_expression_optional RPAREN statement .)


state 175

    (36) for_stmt -> FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement .
    VAR             reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement .)
    FUN             reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement .)
    CLASS           reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement .)
    LBRACE          reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement .)
    WHILE           reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement .)
    RETURN          reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement .)
    PRINT           reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement .)
    IF              reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement .)
    FOR             reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement .)
    NOT             reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement .)
    MINUS           reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement .)
    LPAREN          reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement .)
    SUPER           reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement .)
    IDENT           reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement .)
    THIS            reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement .)
    NIL             reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement .)
    FALSE           reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement .)
    TRUE            reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement .)
    STRING          reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement .)
    NUM             reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement .)
    REAL            reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement .)
    $end            reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement .)
    RBRACE          reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement .)
    ELSE            reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement .)
    END_IF          reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_expression_optional SEMI _8_expression_optional RPAREN statement .)
