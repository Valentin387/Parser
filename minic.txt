Grammar:

Rule 0     S' -> program
Rule 1     program -> _1_repeat
Rule 2     _1_repeat -> _1_items
Rule 3     _1_repeat -> <empty>
Rule 4     _1_items -> _1_items _1_item
Rule 5     _1_items -> _1_item
Rule 6     _1_item -> declaration
Rule 7     declaration -> statement
Rule 8     declaration -> var_declaration
Rule 9     declaration -> func_declaration
Rule 10    declaration -> class_declaration
Rule 11    class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE
Rule 12    _2_optional -> LT IDENT
Rule 13    _2_optional -> <empty>
Rule 14    _3_repeat -> _3_items
Rule 15    _3_repeat -> <empty>
Rule 16    _3_items -> _3_items _3_item
Rule 17    _3_items -> _3_item
Rule 18    _3_item -> function
Rule 19    func_declaration -> FUN function
Rule 20    var_declaration -> VAR IDENT _4_optional SEMI
Rule 21    _4_optional -> ASSIGN expression
Rule 22    _4_optional -> <empty>
Rule 23    statement -> block
Rule 24    statement -> while_stmt
Rule 25    statement -> return_stmt
Rule 26    statement -> print_stmt
Rule 27    statement -> if_stmt
Rule 28    statement -> for_stmt
Rule 29    statement -> expr_stmt
Rule 30    expr_stmt -> expression SEMI
Rule 31    for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
Rule 32    _5_optional -> expression
Rule 33    _5_optional -> <empty>
Rule 34    _6_optional -> expression
Rule 35    _6_optional -> <empty>
Rule 36    for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
Rule 37    _7_optional -> expression
Rule 38    _7_optional -> <empty>
Rule 39    _8_optional -> expression
Rule 40    _8_optional -> <empty>
Rule 41    for_initialize -> expr_stmt
Rule 42    for_initialize -> var_declaration
Rule 43    if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional
Rule 44    _9_optional -> expression
Rule 45    _9_optional -> <empty>
Rule 46    _10_optional -> ELSE statement
Rule 47    _10_optional -> <empty>
Rule 48    print_stmt -> PRINT expression SEMI
Rule 49    return_stmt -> RETURN _11_optional SEMI
Rule 50    _11_optional -> expression
Rule 51    _11_optional -> <empty>
Rule 52    while_stmt -> WHILE LPAREN expression RPAREN statement
Rule 53    block -> LBRACE _12_repeat RBRACE
Rule 54    _12_repeat -> _12_items
Rule 55    _12_repeat -> <empty>
Rule 56    _12_items -> _12_items _12_item
Rule 57    _12_items -> _12_item
Rule 58    _12_item -> declaration
Rule 59    expression -> assignment
Rule 60    assignment -> logic_or
Rule 61    assignment -> _13_optional IDENT ASSIGN expression
Rule 62    _13_optional -> call POINT
Rule 63    _13_optional -> <empty>
Rule 64    logic_or -> logic_and _14_repeat
Rule 65    _14_repeat -> _14_items
Rule 66    _14_repeat -> <empty>
Rule 67    _14_items -> _14_items _14_item
Rule 68    _14_items -> _14_item
Rule 69    _14_item -> OR logic_and
Rule 70    logic_and -> equality _15_repeat
Rule 71    _15_repeat -> _15_items
Rule 72    _15_repeat -> <empty>
Rule 73    _15_items -> _15_items _15_item
Rule 74    _15_items -> _15_item
Rule 75    _15_item -> AND equality
Rule 76    equality -> comparison _16_repeat
Rule 77    _16_repeat -> _16_items
Rule 78    _16_repeat -> <empty>
Rule 79    _16_items -> _16_items _16_item
Rule 80    _16_items -> _16_item
Rule 81    _16_item -> oper1 comparison
Rule 82    oper1 -> EQ
Rule 83    oper1 -> NE
Rule 84    comparison -> term _17_repeat
Rule 85    _17_repeat -> _17_items
Rule 86    _17_repeat -> <empty>
Rule 87    _17_items -> _17_items _17_item
Rule 88    _17_items -> _17_item
Rule 89    _17_item -> oper2 term
Rule 90    oper2 -> LE
Rule 91    oper2 -> LT
Rule 92    oper2 -> GE
Rule 93    oper2 -> GT
Rule 94    term -> factor _18_repeat
Rule 95    _18_repeat -> _18_items
Rule 96    _18_repeat -> <empty>
Rule 97    _18_items -> _18_items _18_item
Rule 98    _18_items -> _18_item
Rule 99    _18_item -> oper3 factor
Rule 100   oper3 -> PLUS
Rule 101   oper3 -> MINUS
Rule 102   factor -> unary _19_repeat
Rule 103   _19_repeat -> _19_items
Rule 104   _19_repeat -> <empty>
Rule 105   _19_items -> _19_items _19_item
Rule 106   _19_items -> _19_item
Rule 107   _19_item -> oper4 unary
Rule 108   oper4 -> TIMES
Rule 109   oper4 -> DIVIDE
Rule 110   unary -> call
Rule 111   unary -> oper5 unary
Rule 112   oper5 -> MINUS
Rule 113   oper5 -> NOT
Rule 114   call -> primary _20_repeat
Rule 115   _20_repeat -> _20_items
Rule 116   _20_repeat -> <empty>
Rule 117   _20_items -> _20_items _20_item
Rule 118   _20_items -> _20_item
Rule 119   _20_item -> oper6
Rule 120   oper6 -> POINT IDENT
Rule 121   oper6 -> LPAREN _21_optional RPAREN
Rule 122   _21_optional -> arguments
Rule 123   _21_optional -> <empty>
Rule 124   primary -> SUPER POINT IDENT
Rule 125   primary -> LPAREN expression RPAREN
Rule 126   primary -> IDENT
Rule 127   primary -> STRING
Rule 128   primary -> NUM
Rule 129   primary -> REAL
Rule 130   primary -> THIS
Rule 131   primary -> NIL
Rule 132   primary -> FALSE
Rule 133   primary -> TRUE
Rule 134   function -> IDENT LPAREN _22_optional RPAREN block
Rule 135   _22_optional -> parameters
Rule 136   _22_optional -> <empty>
Rule 137   parameters -> IDENT _23_repeat
Rule 138   _23_repeat -> _23_items
Rule 139   _23_repeat -> <empty>
Rule 140   _23_items -> _23_items _23_item
Rule 141   _23_items -> _23_item
Rule 142   _23_item -> COMMA IDENT
Rule 143   arguments -> expression _24_repeat
Rule 144   _24_repeat -> _24_items
Rule 145   _24_repeat -> <empty>
Rule 146   _24_items -> _24_items _24_item
Rule 147   _24_items -> _24_item
Rule 148   _24_item -> COMMA expression

Unused terminals:

    LSQBRA
    RSQBRA

Terminals, with rules where they appear:

AND                  : 75
ASSIGN               : 21 61
CLASS                : 11
COMMA                : 142 148
DIVIDE               : 109
ELSE                 : 46
EQ                   : 82
FALSE                : 132
FOR                  : 31 36
FUN                  : 19
GE                   : 92
GT                   : 93
IDENT                : 11 12 20 61 120 124 126 134 137 142
IF                   : 43
LBRACE               : 11 53
LE                   : 90
LPAREN               : 31 36 43 52 121 125 134
LSQBRA               : 
LT                   : 12 91
MINUS                : 101 112
NE                   : 83
NIL                  : 131
NOT                  : 113
NUM                  : 128
OR                   : 69
PLUS                 : 100
POINT                : 62 120 124
PRINT                : 48
RBRACE               : 11 53
REAL                 : 129
RETURN               : 49
RPAREN               : 31 36 43 52 121 125 134
RSQBRA               : 
SEMI                 : 20 30 31 31 36 48 49
STRING               : 127
SUPER                : 124
THIS                 : 130
TIMES                : 108
TRUE                 : 133
VAR                  : 20
WHILE                : 52
error                : 

Nonterminals, with rules where they appear:

_10_optional         : 43
_11_optional         : 49
_12_item             : 56 57
_12_items            : 54 56
_12_repeat           : 53
_13_optional         : 61
_14_item             : 67 68
_14_items            : 65 67
_14_repeat           : 64
_15_item             : 73 74
_15_items            : 71 73
_15_repeat           : 70
_16_item             : 79 80
_16_items            : 77 79
_16_repeat           : 76
_17_item             : 87 88
_17_items            : 85 87
_17_repeat           : 84
_18_item             : 97 98
_18_items            : 95 97
_18_repeat           : 94
_19_item             : 105 106
_19_items            : 103 105
_19_repeat           : 102
_1_item              : 4 5
_1_items             : 2 4
_1_repeat            : 1
_20_item             : 117 118
_20_items            : 115 117
_20_repeat           : 114
_21_optional         : 121
_22_optional         : 134
_23_item             : 140 141
_23_items            : 138 140
_23_repeat           : 137
_24_item             : 146 147
_24_items            : 144 146
_24_repeat           : 143
_2_optional          : 11
_3_item              : 16 17
_3_items             : 14 16
_3_repeat            : 11
_4_optional          : 20
_5_optional          : 31
_6_optional          : 31
_7_optional          : 36
_8_optional          : 36
_9_optional          : 43
arguments            : 122
assignment           : 59
block                : 23 134
call                 : 62 110
class_declaration    : 10
comparison           : 76 81
declaration          : 6 58
equality             : 70 75
expr_stmt            : 29 41
expression           : 21 30 32 34 37 39 44 48 50 52 61 125 143 148
factor               : 94 99
for_initialize       : 36
for_stmt             : 28
func_declaration     : 9
function             : 18 19
if_stmt              : 27
logic_and            : 64 69
logic_or             : 60
oper1                : 81
oper2                : 89
oper3                : 99
oper4                : 107
oper5                : 111
oper6                : 119
parameters           : 135
primary              : 114
print_stmt           : 26
program              : 0
return_stmt          : 25
statement            : 7 31 36 43 46 52
term                 : 84 89
unary                : 102 107 111
var_declaration      : 8 42
while_stmt           : 24


state 0

    (0) S' -> . program
    (1) program -> . _1_repeat
    (2) _1_repeat -> . _1_items
    (3) _1_repeat -> .
    (4) _1_items -> . _1_items _1_item
    (5) _1_items -> . _1_item
    (6) _1_item -> . declaration
    (7) declaration -> . statement
    (8) declaration -> . var_declaration
    (9) declaration -> . func_declaration
    (10) declaration -> . class_declaration
    (23) statement -> . block
    (24) statement -> . while_stmt
    (25) statement -> . return_stmt
    (26) statement -> . print_stmt
    (27) statement -> . if_stmt
    (28) statement -> . for_stmt
    (29) statement -> . expr_stmt
    (20) var_declaration -> . VAR IDENT _4_optional SEMI
    (19) func_declaration -> . FUN function
    (11) class_declaration -> . CLASS IDENT _2_optional LBRACE _3_repeat RBRACE
    (53) block -> . LBRACE _12_repeat RBRACE
    (52) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (49) return_stmt -> . RETURN _11_optional SEMI
    (48) print_stmt -> . PRINT expression SEMI
    (43) if_stmt -> . IF LPAREN _9_optional RPAREN statement _10_optional
    (31) for_stmt -> . FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
    (36) for_stmt -> . FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
    (30) expr_stmt -> . expression SEMI
    (59) expression -> . assignment
    (60) assignment -> . logic_or
    (61) assignment -> . _13_optional IDENT ASSIGN expression
    (64) logic_or -> . logic_and _14_repeat
    (62) _13_optional -> . call POINT
    (63) _13_optional -> .
    (70) logic_and -> . equality _15_repeat
    (114) call -> . primary _20_repeat
    (76) equality -> . comparison _16_repeat
    (124) primary -> . SUPER POINT IDENT
    (125) primary -> . LPAREN expression RPAREN
    (126) primary -> . IDENT
    (127) primary -> . STRING
    (128) primary -> . NUM
    (129) primary -> . REAL
    (130) primary -> . THIS
    (131) primary -> . NIL
    (132) primary -> . FALSE
    (133) primary -> . TRUE
    (84) comparison -> . term _17_repeat
    (94) term -> . factor _18_repeat
    (102) factor -> . unary _19_repeat
    (110) unary -> . call
    (111) unary -> . oper5 unary
    (112) oper5 -> . MINUS
    (113) oper5 -> . NOT
  ! shift/reduce conflict for IDENT resolved as shift
    $end            reduce using rule 3 (_1_repeat -> .)
    VAR             shift and go to state 17
    FUN             shift and go to state 19
    CLASS           shift and go to state 20
    LBRACE          shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    FOR             shift and go to state 28
    SUPER           shift and go to state 37
    LPAREN          shift and go to state 23
    IDENT           shift and go to state 18
    STRING          shift and go to state 38
    NUM             shift and go to state 39
    REAL            shift and go to state 40
    THIS            shift and go to state 41
    NIL             shift and go to state 42
    FALSE           shift and go to state 43
    TRUE            shift and go to state 44
    MINUS           shift and go to state 49
    NOT             shift and go to state 50

    program                        shift and go to state 1
    _1_repeat                      shift and go to state 2
    _1_items                       shift and go to state 3
    _1_item                        shift and go to state 4
    declaration                    shift and go to state 5
    statement                      shift and go to state 6
    var_declaration                shift and go to state 7
    func_declaration               shift and go to state 8
    class_declaration              shift and go to state 9
    block                          shift and go to state 10
    while_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    print_stmt                     shift and go to state 13
    if_stmt                        shift and go to state 14
    for_stmt                       shift and go to state 15
    expr_stmt                      shift and go to state 16
    expression                     shift and go to state 24
    assignment                     shift and go to state 29
    logic_or                       shift and go to state 30
    _13_optional                   shift and go to state 31
    logic_and                      shift and go to state 32
    call                           shift and go to state 33
    equality                       shift and go to state 34
    primary                        shift and go to state 35
    comparison                     shift and go to state 36
    term                           shift and go to state 45
    factor                         shift and go to state 46
    unary                          shift and go to state 47
    oper5                          shift and go to state 48

state 1

    (0) S' -> program .


state 2

    (1) program -> _1_repeat .
    $end            reduce using rule 1 (program -> _1_repeat .)


state 3

    (2) _1_repeat -> _1_items .
    (4) _1_items -> _1_items . _1_item
    (6) _1_item -> . declaration
    (7) declaration -> . statement
    (8) declaration -> . var_declaration
    (9) declaration -> . func_declaration
    (10) declaration -> . class_declaration
    (23) statement -> . block
    (24) statement -> . while_stmt
    (25) statement -> . return_stmt
    (26) statement -> . print_stmt
    (27) statement -> . if_stmt
    (28) statement -> . for_stmt
    (29) statement -> . expr_stmt
    (20) var_declaration -> . VAR IDENT _4_optional SEMI
    (19) func_declaration -> . FUN function
    (11) class_declaration -> . CLASS IDENT _2_optional LBRACE _3_repeat RBRACE
    (53) block -> . LBRACE _12_repeat RBRACE
    (52) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (49) return_stmt -> . RETURN _11_optional SEMI
    (48) print_stmt -> . PRINT expression SEMI
    (43) if_stmt -> . IF LPAREN _9_optional RPAREN statement _10_optional
    (31) for_stmt -> . FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
    (36) for_stmt -> . FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
    (30) expr_stmt -> . expression SEMI
    (59) expression -> . assignment
    (60) assignment -> . logic_or
    (61) assignment -> . _13_optional IDENT ASSIGN expression
    (64) logic_or -> . logic_and _14_repeat
    (62) _13_optional -> . call POINT
    (63) _13_optional -> .
    (70) logic_and -> . equality _15_repeat
    (114) call -> . primary _20_repeat
    (76) equality -> . comparison _16_repeat
    (124) primary -> . SUPER POINT IDENT
    (125) primary -> . LPAREN expression RPAREN
    (126) primary -> . IDENT
    (127) primary -> . STRING
    (128) primary -> . NUM
    (129) primary -> . REAL
    (130) primary -> . THIS
    (131) primary -> . NIL
    (132) primary -> . FALSE
    (133) primary -> . TRUE
    (84) comparison -> . term _17_repeat
    (94) term -> . factor _18_repeat
    (102) factor -> . unary _19_repeat
    (110) unary -> . call
    (111) unary -> . oper5 unary
    (112) oper5 -> . MINUS
    (113) oper5 -> . NOT
  ! shift/reduce conflict for IDENT resolved as shift
    $end            reduce using rule 2 (_1_repeat -> _1_items .)
    VAR             shift and go to state 17
    FUN             shift and go to state 19
    CLASS           shift and go to state 20
    LBRACE          shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    FOR             shift and go to state 28
    SUPER           shift and go to state 37
    LPAREN          shift and go to state 23
    IDENT           shift and go to state 18
    STRING          shift and go to state 38
    NUM             shift and go to state 39
    REAL            shift and go to state 40
    THIS            shift and go to state 41
    NIL             shift and go to state 42
    FALSE           shift and go to state 43
    TRUE            shift and go to state 44
    MINUS           shift and go to state 49
    NOT             shift and go to state 50

    _1_item                        shift and go to state 51
    declaration                    shift and go to state 5
    statement                      shift and go to state 6
    var_declaration                shift and go to state 7
    func_declaration               shift and go to state 8
    class_declaration              shift and go to state 9
    block                          shift and go to state 10
    while_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    print_stmt                     shift and go to state 13
    if_stmt                        shift and go to state 14
    for_stmt                       shift and go to state 15
    expr_stmt                      shift and go to state 16
    expression                     shift and go to state 24
    assignment                     shift and go to state 29
    logic_or                       shift and go to state 30
    _13_optional                   shift and go to state 31
    logic_and                      shift and go to state 32
    call                           shift and go to state 33
    equality                       shift and go to state 34
    primary                        shift and go to state 35
    comparison                     shift and go to state 36
    term                           shift and go to state 45
    factor                         shift and go to state 46
    unary                          shift and go to state 47
    oper5                          shift and go to state 48

state 4

    (5) _1_items -> _1_item .
    VAR             reduce using rule 5 (_1_items -> _1_item .)
    FUN             reduce using rule 5 (_1_items -> _1_item .)
    CLASS           reduce using rule 5 (_1_items -> _1_item .)
    LBRACE          reduce using rule 5 (_1_items -> _1_item .)
    WHILE           reduce using rule 5 (_1_items -> _1_item .)
    RETURN          reduce using rule 5 (_1_items -> _1_item .)
    PRINT           reduce using rule 5 (_1_items -> _1_item .)
    IF              reduce using rule 5 (_1_items -> _1_item .)
    FOR             reduce using rule 5 (_1_items -> _1_item .)
    SUPER           reduce using rule 5 (_1_items -> _1_item .)
    LPAREN          reduce using rule 5 (_1_items -> _1_item .)
    IDENT           reduce using rule 5 (_1_items -> _1_item .)
    STRING          reduce using rule 5 (_1_items -> _1_item .)
    NUM             reduce using rule 5 (_1_items -> _1_item .)
    REAL            reduce using rule 5 (_1_items -> _1_item .)
    THIS            reduce using rule 5 (_1_items -> _1_item .)
    NIL             reduce using rule 5 (_1_items -> _1_item .)
    FALSE           reduce using rule 5 (_1_items -> _1_item .)
    TRUE            reduce using rule 5 (_1_items -> _1_item .)
    MINUS           reduce using rule 5 (_1_items -> _1_item .)
    NOT             reduce using rule 5 (_1_items -> _1_item .)
    $end            reduce using rule 5 (_1_items -> _1_item .)


state 5

    (6) _1_item -> declaration .
    VAR             reduce using rule 6 (_1_item -> declaration .)
    FUN             reduce using rule 6 (_1_item -> declaration .)
    CLASS           reduce using rule 6 (_1_item -> declaration .)
    LBRACE          reduce using rule 6 (_1_item -> declaration .)
    WHILE           reduce using rule 6 (_1_item -> declaration .)
    RETURN          reduce using rule 6 (_1_item -> declaration .)
    PRINT           reduce using rule 6 (_1_item -> declaration .)
    IF              reduce using rule 6 (_1_item -> declaration .)
    FOR             reduce using rule 6 (_1_item -> declaration .)
    SUPER           reduce using rule 6 (_1_item -> declaration .)
    LPAREN          reduce using rule 6 (_1_item -> declaration .)
    IDENT           reduce using rule 6 (_1_item -> declaration .)
    STRING          reduce using rule 6 (_1_item -> declaration .)
    NUM             reduce using rule 6 (_1_item -> declaration .)
    REAL            reduce using rule 6 (_1_item -> declaration .)
    THIS            reduce using rule 6 (_1_item -> declaration .)
    NIL             reduce using rule 6 (_1_item -> declaration .)
    FALSE           reduce using rule 6 (_1_item -> declaration .)
    TRUE            reduce using rule 6 (_1_item -> declaration .)
    MINUS           reduce using rule 6 (_1_item -> declaration .)
    NOT             reduce using rule 6 (_1_item -> declaration .)
    $end            reduce using rule 6 (_1_item -> declaration .)


state 6

    (7) declaration -> statement .
    VAR             reduce using rule 7 (declaration -> statement .)
    FUN             reduce using rule 7 (declaration -> statement .)
    CLASS           reduce using rule 7 (declaration -> statement .)
    LBRACE          reduce using rule 7 (declaration -> statement .)
    WHILE           reduce using rule 7 (declaration -> statement .)
    RETURN          reduce using rule 7 (declaration -> statement .)
    PRINT           reduce using rule 7 (declaration -> statement .)
    IF              reduce using rule 7 (declaration -> statement .)
    FOR             reduce using rule 7 (declaration -> statement .)
    SUPER           reduce using rule 7 (declaration -> statement .)
    LPAREN          reduce using rule 7 (declaration -> statement .)
    IDENT           reduce using rule 7 (declaration -> statement .)
    STRING          reduce using rule 7 (declaration -> statement .)
    NUM             reduce using rule 7 (declaration -> statement .)
    REAL            reduce using rule 7 (declaration -> statement .)
    THIS            reduce using rule 7 (declaration -> statement .)
    NIL             reduce using rule 7 (declaration -> statement .)
    FALSE           reduce using rule 7 (declaration -> statement .)
    TRUE            reduce using rule 7 (declaration -> statement .)
    MINUS           reduce using rule 7 (declaration -> statement .)
    NOT             reduce using rule 7 (declaration -> statement .)
    $end            reduce using rule 7 (declaration -> statement .)
    RBRACE          reduce using rule 7 (declaration -> statement .)


state 7

    (8) declaration -> var_declaration .
    VAR             reduce using rule 8 (declaration -> var_declaration .)
    FUN             reduce using rule 8 (declaration -> var_declaration .)
    CLASS           reduce using rule 8 (declaration -> var_declaration .)
    LBRACE          reduce using rule 8 (declaration -> var_declaration .)
    WHILE           reduce using rule 8 (declaration -> var_declaration .)
    RETURN          reduce using rule 8 (declaration -> var_declaration .)
    PRINT           reduce using rule 8 (declaration -> var_declaration .)
    IF              reduce using rule 8 (declaration -> var_declaration .)
    FOR             reduce using rule 8 (declaration -> var_declaration .)
    SUPER           reduce using rule 8 (declaration -> var_declaration .)
    LPAREN          reduce using rule 8 (declaration -> var_declaration .)
    IDENT           reduce using rule 8 (declaration -> var_declaration .)
    STRING          reduce using rule 8 (declaration -> var_declaration .)
    NUM             reduce using rule 8 (declaration -> var_declaration .)
    REAL            reduce using rule 8 (declaration -> var_declaration .)
    THIS            reduce using rule 8 (declaration -> var_declaration .)
    NIL             reduce using rule 8 (declaration -> var_declaration .)
    FALSE           reduce using rule 8 (declaration -> var_declaration .)
    TRUE            reduce using rule 8 (declaration -> var_declaration .)
    MINUS           reduce using rule 8 (declaration -> var_declaration .)
    NOT             reduce using rule 8 (declaration -> var_declaration .)
    $end            reduce using rule 8 (declaration -> var_declaration .)
    RBRACE          reduce using rule 8 (declaration -> var_declaration .)


state 8

    (9) declaration -> func_declaration .
    VAR             reduce using rule 9 (declaration -> func_declaration .)
    FUN             reduce using rule 9 (declaration -> func_declaration .)
    CLASS           reduce using rule 9 (declaration -> func_declaration .)
    LBRACE          reduce using rule 9 (declaration -> func_declaration .)
    WHILE           reduce using rule 9 (declaration -> func_declaration .)
    RETURN          reduce using rule 9 (declaration -> func_declaration .)
    PRINT           reduce using rule 9 (declaration -> func_declaration .)
    IF              reduce using rule 9 (declaration -> func_declaration .)
    FOR             reduce using rule 9 (declaration -> func_declaration .)
    SUPER           reduce using rule 9 (declaration -> func_declaration .)
    LPAREN          reduce using rule 9 (declaration -> func_declaration .)
    IDENT           reduce using rule 9 (declaration -> func_declaration .)
    STRING          reduce using rule 9 (declaration -> func_declaration .)
    NUM             reduce using rule 9 (declaration -> func_declaration .)
    REAL            reduce using rule 9 (declaration -> func_declaration .)
    THIS            reduce using rule 9 (declaration -> func_declaration .)
    NIL             reduce using rule 9 (declaration -> func_declaration .)
    FALSE           reduce using rule 9 (declaration -> func_declaration .)
    TRUE            reduce using rule 9 (declaration -> func_declaration .)
    MINUS           reduce using rule 9 (declaration -> func_declaration .)
    NOT             reduce using rule 9 (declaration -> func_declaration .)
    $end            reduce using rule 9 (declaration -> func_declaration .)
    RBRACE          reduce using rule 9 (declaration -> func_declaration .)


state 9

    (10) declaration -> class_declaration .
    VAR             reduce using rule 10 (declaration -> class_declaration .)
    FUN             reduce using rule 10 (declaration -> class_declaration .)
    CLASS           reduce using rule 10 (declaration -> class_declaration .)
    LBRACE          reduce using rule 10 (declaration -> class_declaration .)
    WHILE           reduce using rule 10 (declaration -> class_declaration .)
    RETURN          reduce using rule 10 (declaration -> class_declaration .)
    PRINT           reduce using rule 10 (declaration -> class_declaration .)
    IF              reduce using rule 10 (declaration -> class_declaration .)
    FOR             reduce using rule 10 (declaration -> class_declaration .)
    SUPER           reduce using rule 10 (declaration -> class_declaration .)
    LPAREN          reduce using rule 10 (declaration -> class_declaration .)
    IDENT           reduce using rule 10 (declaration -> class_declaration .)
    STRING          reduce using rule 10 (declaration -> class_declaration .)
    NUM             reduce using rule 10 (declaration -> class_declaration .)
    REAL            reduce using rule 10 (declaration -> class_declaration .)
    THIS            reduce using rule 10 (declaration -> class_declaration .)
    NIL             reduce using rule 10 (declaration -> class_declaration .)
    FALSE           reduce using rule 10 (declaration -> class_declaration .)
    TRUE            reduce using rule 10 (declaration -> class_declaration .)
    MINUS           reduce using rule 10 (declaration -> class_declaration .)
    NOT             reduce using rule 10 (declaration -> class_declaration .)
    $end            reduce using rule 10 (declaration -> class_declaration .)
    RBRACE          reduce using rule 10 (declaration -> class_declaration .)


state 10

    (23) statement -> block .
    VAR             reduce using rule 23 (statement -> block .)
    FUN             reduce using rule 23 (statement -> block .)
    CLASS           reduce using rule 23 (statement -> block .)
    LBRACE          reduce using rule 23 (statement -> block .)
    WHILE           reduce using rule 23 (statement -> block .)
    RETURN          reduce using rule 23 (statement -> block .)
    PRINT           reduce using rule 23 (statement -> block .)
    IF              reduce using rule 23 (statement -> block .)
    FOR             reduce using rule 23 (statement -> block .)
    SUPER           reduce using rule 23 (statement -> block .)
    LPAREN          reduce using rule 23 (statement -> block .)
    IDENT           reduce using rule 23 (statement -> block .)
    STRING          reduce using rule 23 (statement -> block .)
    NUM             reduce using rule 23 (statement -> block .)
    REAL            reduce using rule 23 (statement -> block .)
    THIS            reduce using rule 23 (statement -> block .)
    NIL             reduce using rule 23 (statement -> block .)
    FALSE           reduce using rule 23 (statement -> block .)
    TRUE            reduce using rule 23 (statement -> block .)
    MINUS           reduce using rule 23 (statement -> block .)
    NOT             reduce using rule 23 (statement -> block .)
    $end            reduce using rule 23 (statement -> block .)
    RBRACE          reduce using rule 23 (statement -> block .)
    ELSE            reduce using rule 23 (statement -> block .)


state 11

    (24) statement -> while_stmt .
    VAR             reduce using rule 24 (statement -> while_stmt .)
    FUN             reduce using rule 24 (statement -> while_stmt .)
    CLASS           reduce using rule 24 (statement -> while_stmt .)
    LBRACE          reduce using rule 24 (statement -> while_stmt .)
    WHILE           reduce using rule 24 (statement -> while_stmt .)
    RETURN          reduce using rule 24 (statement -> while_stmt .)
    PRINT           reduce using rule 24 (statement -> while_stmt .)
    IF              reduce using rule 24 (statement -> while_stmt .)
    FOR             reduce using rule 24 (statement -> while_stmt .)
    SUPER           reduce using rule 24 (statement -> while_stmt .)
    LPAREN          reduce using rule 24 (statement -> while_stmt .)
    IDENT           reduce using rule 24 (statement -> while_stmt .)
    STRING          reduce using rule 24 (statement -> while_stmt .)
    NUM             reduce using rule 24 (statement -> while_stmt .)
    REAL            reduce using rule 24 (statement -> while_stmt .)
    THIS            reduce using rule 24 (statement -> while_stmt .)
    NIL             reduce using rule 24 (statement -> while_stmt .)
    FALSE           reduce using rule 24 (statement -> while_stmt .)
    TRUE            reduce using rule 24 (statement -> while_stmt .)
    MINUS           reduce using rule 24 (statement -> while_stmt .)
    NOT             reduce using rule 24 (statement -> while_stmt .)
    $end            reduce using rule 24 (statement -> while_stmt .)
    RBRACE          reduce using rule 24 (statement -> while_stmt .)
    ELSE            reduce using rule 24 (statement -> while_stmt .)


state 12

    (25) statement -> return_stmt .
    VAR             reduce using rule 25 (statement -> return_stmt .)
    FUN             reduce using rule 25 (statement -> return_stmt .)
    CLASS           reduce using rule 25 (statement -> return_stmt .)
    LBRACE          reduce using rule 25 (statement -> return_stmt .)
    WHILE           reduce using rule 25 (statement -> return_stmt .)
    RETURN          reduce using rule 25 (statement -> return_stmt .)
    PRINT           reduce using rule 25 (statement -> return_stmt .)
    IF              reduce using rule 25 (statement -> return_stmt .)
    FOR             reduce using rule 25 (statement -> return_stmt .)
    SUPER           reduce using rule 25 (statement -> return_stmt .)
    LPAREN          reduce using rule 25 (statement -> return_stmt .)
    IDENT           reduce using rule 25 (statement -> return_stmt .)
    STRING          reduce using rule 25 (statement -> return_stmt .)
    NUM             reduce using rule 25 (statement -> return_stmt .)
    REAL            reduce using rule 25 (statement -> return_stmt .)
    THIS            reduce using rule 25 (statement -> return_stmt .)
    NIL             reduce using rule 25 (statement -> return_stmt .)
    FALSE           reduce using rule 25 (statement -> return_stmt .)
    TRUE            reduce using rule 25 (statement -> return_stmt .)
    MINUS           reduce using rule 25 (statement -> return_stmt .)
    NOT             reduce using rule 25 (statement -> return_stmt .)
    $end            reduce using rule 25 (statement -> return_stmt .)
    RBRACE          reduce using rule 25 (statement -> return_stmt .)
    ELSE            reduce using rule 25 (statement -> return_stmt .)


state 13

    (26) statement -> print_stmt .
    VAR             reduce using rule 26 (statement -> print_stmt .)
    FUN             reduce using rule 26 (statement -> print_stmt .)
    CLASS           reduce using rule 26 (statement -> print_stmt .)
    LBRACE          reduce using rule 26 (statement -> print_stmt .)
    WHILE           reduce using rule 26 (statement -> print_stmt .)
    RETURN          reduce using rule 26 (statement -> print_stmt .)
    PRINT           reduce using rule 26 (statement -> print_stmt .)
    IF              reduce using rule 26 (statement -> print_stmt .)
    FOR             reduce using rule 26 (statement -> print_stmt .)
    SUPER           reduce using rule 26 (statement -> print_stmt .)
    LPAREN          reduce using rule 26 (statement -> print_stmt .)
    IDENT           reduce using rule 26 (statement -> print_stmt .)
    STRING          reduce using rule 26 (statement -> print_stmt .)
    NUM             reduce using rule 26 (statement -> print_stmt .)
    REAL            reduce using rule 26 (statement -> print_stmt .)
    THIS            reduce using rule 26 (statement -> print_stmt .)
    NIL             reduce using rule 26 (statement -> print_stmt .)
    FALSE           reduce using rule 26 (statement -> print_stmt .)
    TRUE            reduce using rule 26 (statement -> print_stmt .)
    MINUS           reduce using rule 26 (statement -> print_stmt .)
    NOT             reduce using rule 26 (statement -> print_stmt .)
    $end            reduce using rule 26 (statement -> print_stmt .)
    RBRACE          reduce using rule 26 (statement -> print_stmt .)
    ELSE            reduce using rule 26 (statement -> print_stmt .)


state 14

    (27) statement -> if_stmt .
    VAR             reduce using rule 27 (statement -> if_stmt .)
    FUN             reduce using rule 27 (statement -> if_stmt .)
    CLASS           reduce using rule 27 (statement -> if_stmt .)
    LBRACE          reduce using rule 27 (statement -> if_stmt .)
    WHILE           reduce using rule 27 (statement -> if_stmt .)
    RETURN          reduce using rule 27 (statement -> if_stmt .)
    PRINT           reduce using rule 27 (statement -> if_stmt .)
    IF              reduce using rule 27 (statement -> if_stmt .)
    FOR             reduce using rule 27 (statement -> if_stmt .)
    SUPER           reduce using rule 27 (statement -> if_stmt .)
    LPAREN          reduce using rule 27 (statement -> if_stmt .)
    IDENT           reduce using rule 27 (statement -> if_stmt .)
    STRING          reduce using rule 27 (statement -> if_stmt .)
    NUM             reduce using rule 27 (statement -> if_stmt .)
    REAL            reduce using rule 27 (statement -> if_stmt .)
    THIS            reduce using rule 27 (statement -> if_stmt .)
    NIL             reduce using rule 27 (statement -> if_stmt .)
    FALSE           reduce using rule 27 (statement -> if_stmt .)
    TRUE            reduce using rule 27 (statement -> if_stmt .)
    MINUS           reduce using rule 27 (statement -> if_stmt .)
    NOT             reduce using rule 27 (statement -> if_stmt .)
    $end            reduce using rule 27 (statement -> if_stmt .)
    RBRACE          reduce using rule 27 (statement -> if_stmt .)
    ELSE            reduce using rule 27 (statement -> if_stmt .)


state 15

    (28) statement -> for_stmt .
    VAR             reduce using rule 28 (statement -> for_stmt .)
    FUN             reduce using rule 28 (statement -> for_stmt .)
    CLASS           reduce using rule 28 (statement -> for_stmt .)
    LBRACE          reduce using rule 28 (statement -> for_stmt .)
    WHILE           reduce using rule 28 (statement -> for_stmt .)
    RETURN          reduce using rule 28 (statement -> for_stmt .)
    PRINT           reduce using rule 28 (statement -> for_stmt .)
    IF              reduce using rule 28 (statement -> for_stmt .)
    FOR             reduce using rule 28 (statement -> for_stmt .)
    SUPER           reduce using rule 28 (statement -> for_stmt .)
    LPAREN          reduce using rule 28 (statement -> for_stmt .)
    IDENT           reduce using rule 28 (statement -> for_stmt .)
    STRING          reduce using rule 28 (statement -> for_stmt .)
    NUM             reduce using rule 28 (statement -> for_stmt .)
    REAL            reduce using rule 28 (statement -> for_stmt .)
    THIS            reduce using rule 28 (statement -> for_stmt .)
    NIL             reduce using rule 28 (statement -> for_stmt .)
    FALSE           reduce using rule 28 (statement -> for_stmt .)
    TRUE            reduce using rule 28 (statement -> for_stmt .)
    MINUS           reduce using rule 28 (statement -> for_stmt .)
    NOT             reduce using rule 28 (statement -> for_stmt .)
    $end            reduce using rule 28 (statement -> for_stmt .)
    RBRACE          reduce using rule 28 (statement -> for_stmt .)
    ELSE            reduce using rule 28 (statement -> for_stmt .)


state 16

    (29) statement -> expr_stmt .
    VAR             reduce using rule 29 (statement -> expr_stmt .)
    FUN             reduce using rule 29 (statement -> expr_stmt .)
    CLASS           reduce using rule 29 (statement -> expr_stmt .)
    LBRACE          reduce using rule 29 (statement -> expr_stmt .)
    WHILE           reduce using rule 29 (statement -> expr_stmt .)
    RETURN          reduce using rule 29 (statement -> expr_stmt .)
    PRINT           reduce using rule 29 (statement -> expr_stmt .)
    IF              reduce using rule 29 (statement -> expr_stmt .)
    FOR             reduce using rule 29 (statement -> expr_stmt .)
    SUPER           reduce using rule 29 (statement -> expr_stmt .)
    LPAREN          reduce using rule 29 (statement -> expr_stmt .)
    IDENT           reduce using rule 29 (statement -> expr_stmt .)
    STRING          reduce using rule 29 (statement -> expr_stmt .)
    NUM             reduce using rule 29 (statement -> expr_stmt .)
    REAL            reduce using rule 29 (statement -> expr_stmt .)
    THIS            reduce using rule 29 (statement -> expr_stmt .)
    NIL             reduce using rule 29 (statement -> expr_stmt .)
    FALSE           reduce using rule 29 (statement -> expr_stmt .)
    TRUE            reduce using rule 29 (statement -> expr_stmt .)
    MINUS           reduce using rule 29 (statement -> expr_stmt .)
    NOT             reduce using rule 29 (statement -> expr_stmt .)
    $end            reduce using rule 29 (statement -> expr_stmt .)
    RBRACE          reduce using rule 29 (statement -> expr_stmt .)
    ELSE            reduce using rule 29 (statement -> expr_stmt .)


state 17

    (20) var_declaration -> VAR . IDENT _4_optional SEMI
    IDENT           shift and go to state 52


state 18

    (126) primary -> IDENT .
    POINT           reduce using rule 126 (primary -> IDENT .)
    LPAREN          reduce using rule 126 (primary -> IDENT .)
    TIMES           reduce using rule 126 (primary -> IDENT .)
    DIVIDE          reduce using rule 126 (primary -> IDENT .)
    PLUS            reduce using rule 126 (primary -> IDENT .)
    MINUS           reduce using rule 126 (primary -> IDENT .)
    LE              reduce using rule 126 (primary -> IDENT .)
    LT              reduce using rule 126 (primary -> IDENT .)
    GE              reduce using rule 126 (primary -> IDENT .)
    GT              reduce using rule 126 (primary -> IDENT .)
    EQ              reduce using rule 126 (primary -> IDENT .)
    NE              reduce using rule 126 (primary -> IDENT .)
    AND             reduce using rule 126 (primary -> IDENT .)
    OR              reduce using rule 126 (primary -> IDENT .)
    SEMI            reduce using rule 126 (primary -> IDENT .)
    RPAREN          reduce using rule 126 (primary -> IDENT .)
    COMMA           reduce using rule 126 (primary -> IDENT .)


state 19

    (19) func_declaration -> FUN . function
    (134) function -> . IDENT LPAREN _22_optional RPAREN block
    IDENT           shift and go to state 54

    function                       shift and go to state 53

state 20

    (11) class_declaration -> CLASS . IDENT _2_optional LBRACE _3_repeat RBRACE
    IDENT           shift and go to state 55


state 21

    (53) block -> LBRACE . _12_repeat RBRACE
    (54) _12_repeat -> . _12_items
    (55) _12_repeat -> .
    (56) _12_items -> . _12_items _12_item
    (57) _12_items -> . _12_item
    (58) _12_item -> . declaration
    (7) declaration -> . statement
    (8) declaration -> . var_declaration
    (9) declaration -> . func_declaration
    (10) declaration -> . class_declaration
    (23) statement -> . block
    (24) statement -> . while_stmt
    (25) statement -> . return_stmt
    (26) statement -> . print_stmt
    (27) statement -> . if_stmt
    (28) statement -> . for_stmt
    (29) statement -> . expr_stmt
    (20) var_declaration -> . VAR IDENT _4_optional SEMI
    (19) func_declaration -> . FUN function
    (11) class_declaration -> . CLASS IDENT _2_optional LBRACE _3_repeat RBRACE
    (53) block -> . LBRACE _12_repeat RBRACE
    (52) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (49) return_stmt -> . RETURN _11_optional SEMI
    (48) print_stmt -> . PRINT expression SEMI
    (43) if_stmt -> . IF LPAREN _9_optional RPAREN statement _10_optional
    (31) for_stmt -> . FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
    (36) for_stmt -> . FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
    (30) expr_stmt -> . expression SEMI
    (59) expression -> . assignment
    (60) assignment -> . logic_or
    (61) assignment -> . _13_optional IDENT ASSIGN expression
    (64) logic_or -> . logic_and _14_repeat
    (62) _13_optional -> . call POINT
    (63) _13_optional -> .
    (70) logic_and -> . equality _15_repeat
    (114) call -> . primary _20_repeat
    (76) equality -> . comparison _16_repeat
    (124) primary -> . SUPER POINT IDENT
    (125) primary -> . LPAREN expression RPAREN
    (126) primary -> . IDENT
    (127) primary -> . STRING
    (128) primary -> . NUM
    (129) primary -> . REAL
    (130) primary -> . THIS
    (131) primary -> . NIL
    (132) primary -> . FALSE
    (133) primary -> . TRUE
    (84) comparison -> . term _17_repeat
    (94) term -> . factor _18_repeat
    (102) factor -> . unary _19_repeat
    (110) unary -> . call
    (111) unary -> . oper5 unary
    (112) oper5 -> . MINUS
    (113) oper5 -> . NOT
  ! shift/reduce conflict for IDENT resolved as shift
    RBRACE          reduce using rule 55 (_12_repeat -> .)
    VAR             shift and go to state 17
    FUN             shift and go to state 19
    CLASS           shift and go to state 20
    LBRACE          shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    FOR             shift and go to state 28
    SUPER           shift and go to state 37
    LPAREN          shift and go to state 23
    IDENT           shift and go to state 18
    STRING          shift and go to state 38
    NUM             shift and go to state 39
    REAL            shift and go to state 40
    THIS            shift and go to state 41
    NIL             shift and go to state 42
    FALSE           shift and go to state 43
    TRUE            shift and go to state 44
    MINUS           shift and go to state 49
    NOT             shift and go to state 50

    _12_repeat                     shift and go to state 56
    _12_items                      shift and go to state 57
    _12_item                       shift and go to state 58
    declaration                    shift and go to state 59
    statement                      shift and go to state 6
    var_declaration                shift and go to state 7
    func_declaration               shift and go to state 8
    class_declaration              shift and go to state 9
    block                          shift and go to state 10
    while_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    print_stmt                     shift and go to state 13
    if_stmt                        shift and go to state 14
    for_stmt                       shift and go to state 15
    expr_stmt                      shift and go to state 16
    expression                     shift and go to state 24
    assignment                     shift and go to state 29
    logic_or                       shift and go to state 30
    _13_optional                   shift and go to state 31
    logic_and                      shift and go to state 32
    call                           shift and go to state 33
    equality                       shift and go to state 34
    primary                        shift and go to state 35
    comparison                     shift and go to state 36
    term                           shift and go to state 45
    factor                         shift and go to state 46
    unary                          shift and go to state 47
    oper5                          shift and go to state 48

state 22

    (52) while_stmt -> WHILE . LPAREN expression RPAREN statement
    LPAREN          shift and go to state 60


state 23

    (125) primary -> LPAREN . expression RPAREN
    (59) expression -> . assignment
    (60) assignment -> . logic_or
    (61) assignment -> . _13_optional IDENT ASSIGN expression
    (64) logic_or -> . logic_and _14_repeat
    (62) _13_optional -> . call POINT
    (63) _13_optional -> .
    (70) logic_and -> . equality _15_repeat
    (114) call -> . primary _20_repeat
    (76) equality -> . comparison _16_repeat
    (124) primary -> . SUPER POINT IDENT
    (125) primary -> . LPAREN expression RPAREN
    (126) primary -> . IDENT
    (127) primary -> . STRING
    (128) primary -> . NUM
    (129) primary -> . REAL
    (130) primary -> . THIS
    (131) primary -> . NIL
    (132) primary -> . FALSE
    (133) primary -> . TRUE
    (84) comparison -> . term _17_repeat
    (94) term -> . factor _18_repeat
    (102) factor -> . unary _19_repeat
    (110) unary -> . call
    (111) unary -> . oper5 unary
    (112) oper5 -> . MINUS
    (113) oper5 -> . NOT
  ! shift/reduce conflict for IDENT resolved as shift
    SUPER           shift and go to state 37
    LPAREN          shift and go to state 23
    IDENT           shift and go to state 18
    STRING          shift and go to state 38
    NUM             shift and go to state 39
    REAL            shift and go to state 40
    THIS            shift and go to state 41
    NIL             shift and go to state 42
    FALSE           shift and go to state 43
    TRUE            shift and go to state 44
    MINUS           shift and go to state 49
    NOT             shift and go to state 50

    expression                     shift and go to state 61
    assignment                     shift and go to state 29
    logic_or                       shift and go to state 30
    _13_optional                   shift and go to state 31
    logic_and                      shift and go to state 32
    call                           shift and go to state 33
    equality                       shift and go to state 34
    primary                        shift and go to state 35
    comparison                     shift and go to state 36
    term                           shift and go to state 45
    factor                         shift and go to state 46
    unary                          shift and go to state 47
    oper5                          shift and go to state 48

state 24

    (30) expr_stmt -> expression . SEMI
    SEMI            shift and go to state 62


state 25

    (49) return_stmt -> RETURN . _11_optional SEMI
    (50) _11_optional -> . expression
    (51) _11_optional -> .
    (59) expression -> . assignment
    (60) assignment -> . logic_or
    (61) assignment -> . _13_optional IDENT ASSIGN expression
    (64) logic_or -> . logic_and _14_repeat
    (62) _13_optional -> . call POINT
    (63) _13_optional -> .
    (70) logic_and -> . equality _15_repeat
    (114) call -> . primary _20_repeat
    (76) equality -> . comparison _16_repeat
    (124) primary -> . SUPER POINT IDENT
    (125) primary -> . LPAREN expression RPAREN
    (126) primary -> . IDENT
    (127) primary -> . STRING
    (128) primary -> . NUM
    (129) primary -> . REAL
    (130) primary -> . THIS
    (131) primary -> . NIL
    (132) primary -> . FALSE
    (133) primary -> . TRUE
    (84) comparison -> . term _17_repeat
    (94) term -> . factor _18_repeat
    (102) factor -> . unary _19_repeat
    (110) unary -> . call
    (111) unary -> . oper5 unary
    (112) oper5 -> . MINUS
    (113) oper5 -> . NOT
  ! shift/reduce conflict for IDENT resolved as shift
    SEMI            reduce using rule 51 (_11_optional -> .)
    SUPER           shift and go to state 37
    LPAREN          shift and go to state 23
    IDENT           shift and go to state 18
    STRING          shift and go to state 38
    NUM             shift and go to state 39
    REAL            shift and go to state 40
    THIS            shift and go to state 41
    NIL             shift and go to state 42
    FALSE           shift and go to state 43
    TRUE            shift and go to state 44
    MINUS           shift and go to state 49
    NOT             shift and go to state 50

    _11_optional                   shift and go to state 63
    expression                     shift and go to state 64
    assignment                     shift and go to state 29
    logic_or                       shift and go to state 30
    _13_optional                   shift and go to state 31
    logic_and                      shift and go to state 32
    call                           shift and go to state 33
    equality                       shift and go to state 34
    primary                        shift and go to state 35
    comparison                     shift and go to state 36
    term                           shift and go to state 45
    factor                         shift and go to state 46
    unary                          shift and go to state 47
    oper5                          shift and go to state 48

state 26

    (48) print_stmt -> PRINT . expression SEMI
    (59) expression -> . assignment
    (60) assignment -> . logic_or
    (61) assignment -> . _13_optional IDENT ASSIGN expression
    (64) logic_or -> . logic_and _14_repeat
    (62) _13_optional -> . call POINT
    (63) _13_optional -> .
    (70) logic_and -> . equality _15_repeat
    (114) call -> . primary _20_repeat
    (76) equality -> . comparison _16_repeat
    (124) primary -> . SUPER POINT IDENT
    (125) primary -> . LPAREN expression RPAREN
    (126) primary -> . IDENT
    (127) primary -> . STRING
    (128) primary -> . NUM
    (129) primary -> . REAL
    (130) primary -> . THIS
    (131) primary -> . NIL
    (132) primary -> . FALSE
    (133) primary -> . TRUE
    (84) comparison -> . term _17_repeat
    (94) term -> . factor _18_repeat
    (102) factor -> . unary _19_repeat
    (110) unary -> . call
    (111) unary -> . oper5 unary
    (112) oper5 -> . MINUS
    (113) oper5 -> . NOT
  ! shift/reduce conflict for IDENT resolved as shift
    SUPER           shift and go to state 37
    LPAREN          shift and go to state 23
    IDENT           shift and go to state 18
    STRING          shift and go to state 38
    NUM             shift and go to state 39
    REAL            shift and go to state 40
    THIS            shift and go to state 41
    NIL             shift and go to state 42
    FALSE           shift and go to state 43
    TRUE            shift and go to state 44
    MINUS           shift and go to state 49
    NOT             shift and go to state 50

    expression                     shift and go to state 65
    assignment                     shift and go to state 29
    logic_or                       shift and go to state 30
    _13_optional                   shift and go to state 31
    logic_and                      shift and go to state 32
    call                           shift and go to state 33
    equality                       shift and go to state 34
    primary                        shift and go to state 35
    comparison                     shift and go to state 36
    term                           shift and go to state 45
    factor                         shift and go to state 46
    unary                          shift and go to state 47
    oper5                          shift and go to state 48

state 27

    (43) if_stmt -> IF . LPAREN _9_optional RPAREN statement _10_optional
    LPAREN          shift and go to state 66


state 28

    (31) for_stmt -> FOR . LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
    (36) for_stmt -> FOR . LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
    LPAREN          shift and go to state 67


state 29

    (59) expression -> assignment .
    SEMI            reduce using rule 59 (expression -> assignment .)
    RPAREN          reduce using rule 59 (expression -> assignment .)
    COMMA           reduce using rule 59 (expression -> assignment .)


state 30

    (60) assignment -> logic_or .
    SEMI            reduce using rule 60 (assignment -> logic_or .)
    RPAREN          reduce using rule 60 (assignment -> logic_or .)
    COMMA           reduce using rule 60 (assignment -> logic_or .)


state 31

    (61) assignment -> _13_optional . IDENT ASSIGN expression
    IDENT           shift and go to state 68


state 32

    (64) logic_or -> logic_and . _14_repeat
    (65) _14_repeat -> . _14_items
    (66) _14_repeat -> .
    (67) _14_items -> . _14_items _14_item
    (68) _14_items -> . _14_item
    (69) _14_item -> . OR logic_and
    SEMI            reduce using rule 66 (_14_repeat -> .)
    RPAREN          reduce using rule 66 (_14_repeat -> .)
    COMMA           reduce using rule 66 (_14_repeat -> .)
    OR              shift and go to state 72

    _14_repeat                     shift and go to state 69
    _14_items                      shift and go to state 70
    _14_item                       shift and go to state 71

state 33

    (62) _13_optional -> call . POINT
    (110) unary -> call .
    POINT           shift and go to state 73
    TIMES           reduce using rule 110 (unary -> call .)
    DIVIDE          reduce using rule 110 (unary -> call .)
    PLUS            reduce using rule 110 (unary -> call .)
    MINUS           reduce using rule 110 (unary -> call .)
    LE              reduce using rule 110 (unary -> call .)
    LT              reduce using rule 110 (unary -> call .)
    GE              reduce using rule 110 (unary -> call .)
    GT              reduce using rule 110 (unary -> call .)
    EQ              reduce using rule 110 (unary -> call .)
    NE              reduce using rule 110 (unary -> call .)
    AND             reduce using rule 110 (unary -> call .)
    OR              reduce using rule 110 (unary -> call .)
    SEMI            reduce using rule 110 (unary -> call .)
    RPAREN          reduce using rule 110 (unary -> call .)
    COMMA           reduce using rule 110 (unary -> call .)


state 34

    (70) logic_and -> equality . _15_repeat
    (71) _15_repeat -> . _15_items
    (72) _15_repeat -> .
    (73) _15_items -> . _15_items _15_item
    (74) _15_items -> . _15_item
    (75) _15_item -> . AND equality
    OR              reduce using rule 72 (_15_repeat -> .)
    SEMI            reduce using rule 72 (_15_repeat -> .)
    RPAREN          reduce using rule 72 (_15_repeat -> .)
    COMMA           reduce using rule 72 (_15_repeat -> .)
    AND             shift and go to state 77

    _15_repeat                     shift and go to state 74
    _15_items                      shift and go to state 75
    _15_item                       shift and go to state 76

state 35

    (114) call -> primary . _20_repeat
    (115) _20_repeat -> . _20_items
    (116) _20_repeat -> .
    (117) _20_items -> . _20_items _20_item
    (118) _20_items -> . _20_item
    (119) _20_item -> . oper6
    (120) oper6 -> . POINT IDENT
    (121) oper6 -> . LPAREN _21_optional RPAREN
  ! shift/reduce conflict for POINT resolved as shift
    TIMES           reduce using rule 116 (_20_repeat -> .)
    DIVIDE          reduce using rule 116 (_20_repeat -> .)
    PLUS            reduce using rule 116 (_20_repeat -> .)
    MINUS           reduce using rule 116 (_20_repeat -> .)
    LE              reduce using rule 116 (_20_repeat -> .)
    LT              reduce using rule 116 (_20_repeat -> .)
    GE              reduce using rule 116 (_20_repeat -> .)
    GT              reduce using rule 116 (_20_repeat -> .)
    EQ              reduce using rule 116 (_20_repeat -> .)
    NE              reduce using rule 116 (_20_repeat -> .)
    AND             reduce using rule 116 (_20_repeat -> .)
    OR              reduce using rule 116 (_20_repeat -> .)
    SEMI            reduce using rule 116 (_20_repeat -> .)
    RPAREN          reduce using rule 116 (_20_repeat -> .)
    COMMA           reduce using rule 116 (_20_repeat -> .)
    POINT           shift and go to state 82
    LPAREN          shift and go to state 83

    _20_repeat                     shift and go to state 78
    _20_items                      shift and go to state 79
    _20_item                       shift and go to state 80
    oper6                          shift and go to state 81

state 36

    (76) equality -> comparison . _16_repeat
    (77) _16_repeat -> . _16_items
    (78) _16_repeat -> .
    (79) _16_items -> . _16_items _16_item
    (80) _16_items -> . _16_item
    (81) _16_item -> . oper1 comparison
    (82) oper1 -> . EQ
    (83) oper1 -> . NE
    AND             reduce using rule 78 (_16_repeat -> .)
    OR              reduce using rule 78 (_16_repeat -> .)
    SEMI            reduce using rule 78 (_16_repeat -> .)
    RPAREN          reduce using rule 78 (_16_repeat -> .)
    COMMA           reduce using rule 78 (_16_repeat -> .)
    EQ              shift and go to state 88
    NE              shift and go to state 89

    _16_repeat                     shift and go to state 84
    _16_items                      shift and go to state 85
    _16_item                       shift and go to state 86
    oper1                          shift and go to state 87

state 37

    (124) primary -> SUPER . POINT IDENT
    POINT           shift and go to state 90


state 38

    (127) primary -> STRING .
    POINT           reduce using rule 127 (primary -> STRING .)
    LPAREN          reduce using rule 127 (primary -> STRING .)
    TIMES           reduce using rule 127 (primary -> STRING .)
    DIVIDE          reduce using rule 127 (primary -> STRING .)
    PLUS            reduce using rule 127 (primary -> STRING .)
    MINUS           reduce using rule 127 (primary -> STRING .)
    LE              reduce using rule 127 (primary -> STRING .)
    LT              reduce using rule 127 (primary -> STRING .)
    GE              reduce using rule 127 (primary -> STRING .)
    GT              reduce using rule 127 (primary -> STRING .)
    EQ              reduce using rule 127 (primary -> STRING .)
    NE              reduce using rule 127 (primary -> STRING .)
    AND             reduce using rule 127 (primary -> STRING .)
    OR              reduce using rule 127 (primary -> STRING .)
    SEMI            reduce using rule 127 (primary -> STRING .)
    RPAREN          reduce using rule 127 (primary -> STRING .)
    COMMA           reduce using rule 127 (primary -> STRING .)


state 39

    (128) primary -> NUM .
    POINT           reduce using rule 128 (primary -> NUM .)
    LPAREN          reduce using rule 128 (primary -> NUM .)
    TIMES           reduce using rule 128 (primary -> NUM .)
    DIVIDE          reduce using rule 128 (primary -> NUM .)
    PLUS            reduce using rule 128 (primary -> NUM .)
    MINUS           reduce using rule 128 (primary -> NUM .)
    LE              reduce using rule 128 (primary -> NUM .)
    LT              reduce using rule 128 (primary -> NUM .)
    GE              reduce using rule 128 (primary -> NUM .)
    GT              reduce using rule 128 (primary -> NUM .)
    EQ              reduce using rule 128 (primary -> NUM .)
    NE              reduce using rule 128 (primary -> NUM .)
    AND             reduce using rule 128 (primary -> NUM .)
    OR              reduce using rule 128 (primary -> NUM .)
    SEMI            reduce using rule 128 (primary -> NUM .)
    RPAREN          reduce using rule 128 (primary -> NUM .)
    COMMA           reduce using rule 128 (primary -> NUM .)


state 40

    (129) primary -> REAL .
    POINT           reduce using rule 129 (primary -> REAL .)
    LPAREN          reduce using rule 129 (primary -> REAL .)
    TIMES           reduce using rule 129 (primary -> REAL .)
    DIVIDE          reduce using rule 129 (primary -> REAL .)
    PLUS            reduce using rule 129 (primary -> REAL .)
    MINUS           reduce using rule 129 (primary -> REAL .)
    LE              reduce using rule 129 (primary -> REAL .)
    LT              reduce using rule 129 (primary -> REAL .)
    GE              reduce using rule 129 (primary -> REAL .)
    GT              reduce using rule 129 (primary -> REAL .)
    EQ              reduce using rule 129 (primary -> REAL .)
    NE              reduce using rule 129 (primary -> REAL .)
    AND             reduce using rule 129 (primary -> REAL .)
    OR              reduce using rule 129 (primary -> REAL .)
    SEMI            reduce using rule 129 (primary -> REAL .)
    RPAREN          reduce using rule 129 (primary -> REAL .)
    COMMA           reduce using rule 129 (primary -> REAL .)


state 41

    (130) primary -> THIS .
    POINT           reduce using rule 130 (primary -> THIS .)
    LPAREN          reduce using rule 130 (primary -> THIS .)
    TIMES           reduce using rule 130 (primary -> THIS .)
    DIVIDE          reduce using rule 130 (primary -> THIS .)
    PLUS            reduce using rule 130 (primary -> THIS .)
    MINUS           reduce using rule 130 (primary -> THIS .)
    LE              reduce using rule 130 (primary -> THIS .)
    LT              reduce using rule 130 (primary -> THIS .)
    GE              reduce using rule 130 (primary -> THIS .)
    GT              reduce using rule 130 (primary -> THIS .)
    EQ              reduce using rule 130 (primary -> THIS .)
    NE              reduce using rule 130 (primary -> THIS .)
    AND             reduce using rule 130 (primary -> THIS .)
    OR              reduce using rule 130 (primary -> THIS .)
    SEMI            reduce using rule 130 (primary -> THIS .)
    RPAREN          reduce using rule 130 (primary -> THIS .)
    COMMA           reduce using rule 130 (primary -> THIS .)


state 42

    (131) primary -> NIL .
    POINT           reduce using rule 131 (primary -> NIL .)
    LPAREN          reduce using rule 131 (primary -> NIL .)
    TIMES           reduce using rule 131 (primary -> NIL .)
    DIVIDE          reduce using rule 131 (primary -> NIL .)
    PLUS            reduce using rule 131 (primary -> NIL .)
    MINUS           reduce using rule 131 (primary -> NIL .)
    LE              reduce using rule 131 (primary -> NIL .)
    LT              reduce using rule 131 (primary -> NIL .)
    GE              reduce using rule 131 (primary -> NIL .)
    GT              reduce using rule 131 (primary -> NIL .)
    EQ              reduce using rule 131 (primary -> NIL .)
    NE              reduce using rule 131 (primary -> NIL .)
    AND             reduce using rule 131 (primary -> NIL .)
    OR              reduce using rule 131 (primary -> NIL .)
    SEMI            reduce using rule 131 (primary -> NIL .)
    RPAREN          reduce using rule 131 (primary -> NIL .)
    COMMA           reduce using rule 131 (primary -> NIL .)


state 43

    (132) primary -> FALSE .
    POINT           reduce using rule 132 (primary -> FALSE .)
    LPAREN          reduce using rule 132 (primary -> FALSE .)
    TIMES           reduce using rule 132 (primary -> FALSE .)
    DIVIDE          reduce using rule 132 (primary -> FALSE .)
    PLUS            reduce using rule 132 (primary -> FALSE .)
    MINUS           reduce using rule 132 (primary -> FALSE .)
    LE              reduce using rule 132 (primary -> FALSE .)
    LT              reduce using rule 132 (primary -> FALSE .)
    GE              reduce using rule 132 (primary -> FALSE .)
    GT              reduce using rule 132 (primary -> FALSE .)
    EQ              reduce using rule 132 (primary -> FALSE .)
    NE              reduce using rule 132 (primary -> FALSE .)
    AND             reduce using rule 132 (primary -> FALSE .)
    OR              reduce using rule 132 (primary -> FALSE .)
    SEMI            reduce using rule 132 (primary -> FALSE .)
    RPAREN          reduce using rule 132 (primary -> FALSE .)
    COMMA           reduce using rule 132 (primary -> FALSE .)


state 44

    (133) primary -> TRUE .
    POINT           reduce using rule 133 (primary -> TRUE .)
    LPAREN          reduce using rule 133 (primary -> TRUE .)
    TIMES           reduce using rule 133 (primary -> TRUE .)
    DIVIDE          reduce using rule 133 (primary -> TRUE .)
    PLUS            reduce using rule 133 (primary -> TRUE .)
    MINUS           reduce using rule 133 (primary -> TRUE .)
    LE              reduce using rule 133 (primary -> TRUE .)
    LT              reduce using rule 133 (primary -> TRUE .)
    GE              reduce using rule 133 (primary -> TRUE .)
    GT              reduce using rule 133 (primary -> TRUE .)
    EQ              reduce using rule 133 (primary -> TRUE .)
    NE              reduce using rule 133 (primary -> TRUE .)
    AND             reduce using rule 133 (primary -> TRUE .)
    OR              reduce using rule 133 (primary -> TRUE .)
    SEMI            reduce using rule 133 (primary -> TRUE .)
    RPAREN          reduce using rule 133 (primary -> TRUE .)
    COMMA           reduce using rule 133 (primary -> TRUE .)


state 45

    (84) comparison -> term . _17_repeat
    (85) _17_repeat -> . _17_items
    (86) _17_repeat -> .
    (87) _17_items -> . _17_items _17_item
    (88) _17_items -> . _17_item
    (89) _17_item -> . oper2 term
    (90) oper2 -> . LE
    (91) oper2 -> . LT
    (92) oper2 -> . GE
    (93) oper2 -> . GT
    EQ              reduce using rule 86 (_17_repeat -> .)
    NE              reduce using rule 86 (_17_repeat -> .)
    AND             reduce using rule 86 (_17_repeat -> .)
    OR              reduce using rule 86 (_17_repeat -> .)
    SEMI            reduce using rule 86 (_17_repeat -> .)
    RPAREN          reduce using rule 86 (_17_repeat -> .)
    COMMA           reduce using rule 86 (_17_repeat -> .)
    LE              shift and go to state 95
    LT              shift and go to state 96
    GE              shift and go to state 97
    GT              shift and go to state 98

    _17_repeat                     shift and go to state 91
    _17_items                      shift and go to state 92
    _17_item                       shift and go to state 93
    oper2                          shift and go to state 94

state 46

    (94) term -> factor . _18_repeat
    (95) _18_repeat -> . _18_items
    (96) _18_repeat -> .
    (97) _18_items -> . _18_items _18_item
    (98) _18_items -> . _18_item
    (99) _18_item -> . oper3 factor
    (100) oper3 -> . PLUS
    (101) oper3 -> . MINUS
    LE              reduce using rule 96 (_18_repeat -> .)
    LT              reduce using rule 96 (_18_repeat -> .)
    GE              reduce using rule 96 (_18_repeat -> .)
    GT              reduce using rule 96 (_18_repeat -> .)
    EQ              reduce using rule 96 (_18_repeat -> .)
    NE              reduce using rule 96 (_18_repeat -> .)
    AND             reduce using rule 96 (_18_repeat -> .)
    OR              reduce using rule 96 (_18_repeat -> .)
    SEMI            reduce using rule 96 (_18_repeat -> .)
    RPAREN          reduce using rule 96 (_18_repeat -> .)
    COMMA           reduce using rule 96 (_18_repeat -> .)
    PLUS            shift and go to state 103
    MINUS           shift and go to state 104

    _18_repeat                     shift and go to state 99
    _18_items                      shift and go to state 100
    _18_item                       shift and go to state 101
    oper3                          shift and go to state 102

state 47

    (102) factor -> unary . _19_repeat
    (103) _19_repeat -> . _19_items
    (104) _19_repeat -> .
    (105) _19_items -> . _19_items _19_item
    (106) _19_items -> . _19_item
    (107) _19_item -> . oper4 unary
    (108) oper4 -> . TIMES
    (109) oper4 -> . DIVIDE
    PLUS            reduce using rule 104 (_19_repeat -> .)
    MINUS           reduce using rule 104 (_19_repeat -> .)
    LE              reduce using rule 104 (_19_repeat -> .)
    LT              reduce using rule 104 (_19_repeat -> .)
    GE              reduce using rule 104 (_19_repeat -> .)
    GT              reduce using rule 104 (_19_repeat -> .)
    EQ              reduce using rule 104 (_19_repeat -> .)
    NE              reduce using rule 104 (_19_repeat -> .)
    AND             reduce using rule 104 (_19_repeat -> .)
    OR              reduce using rule 104 (_19_repeat -> .)
    SEMI            reduce using rule 104 (_19_repeat -> .)
    RPAREN          reduce using rule 104 (_19_repeat -> .)
    COMMA           reduce using rule 104 (_19_repeat -> .)
    TIMES           shift and go to state 109
    DIVIDE          shift and go to state 110

    _19_repeat                     shift and go to state 105
    _19_items                      shift and go to state 106
    _19_item                       shift and go to state 107
    oper4                          shift and go to state 108

state 48

    (111) unary -> oper5 . unary
    (110) unary -> . call
    (111) unary -> . oper5 unary
    (114) call -> . primary _20_repeat
    (112) oper5 -> . MINUS
    (113) oper5 -> . NOT
    (124) primary -> . SUPER POINT IDENT
    (125) primary -> . LPAREN expression RPAREN
    (126) primary -> . IDENT
    (127) primary -> . STRING
    (128) primary -> . NUM
    (129) primary -> . REAL
    (130) primary -> . THIS
    (131) primary -> . NIL
    (132) primary -> . FALSE
    (133) primary -> . TRUE
    MINUS           shift and go to state 49
    NOT             shift and go to state 50
    SUPER           shift and go to state 37
    LPAREN          shift and go to state 23
    IDENT           shift and go to state 18
    STRING          shift and go to state 38
    NUM             shift and go to state 39
    REAL            shift and go to state 40
    THIS            shift and go to state 41
    NIL             shift and go to state 42
    FALSE           shift and go to state 43
    TRUE            shift and go to state 44

    oper5                          shift and go to state 48
    unary                          shift and go to state 111
    call                           shift and go to state 112
    primary                        shift and go to state 35

state 49

    (112) oper5 -> MINUS .
    MINUS           reduce using rule 112 (oper5 -> MINUS .)
    NOT             reduce using rule 112 (oper5 -> MINUS .)
    SUPER           reduce using rule 112 (oper5 -> MINUS .)
    LPAREN          reduce using rule 112 (oper5 -> MINUS .)
    IDENT           reduce using rule 112 (oper5 -> MINUS .)
    STRING          reduce using rule 112 (oper5 -> MINUS .)
    NUM             reduce using rule 112 (oper5 -> MINUS .)
    REAL            reduce using rule 112 (oper5 -> MINUS .)
    THIS            reduce using rule 112 (oper5 -> MINUS .)
    NIL             reduce using rule 112 (oper5 -> MINUS .)
    FALSE           reduce using rule 112 (oper5 -> MINUS .)
    TRUE            reduce using rule 112 (oper5 -> MINUS .)


state 50

    (113) oper5 -> NOT .
    MINUS           reduce using rule 113 (oper5 -> NOT .)
    NOT             reduce using rule 113 (oper5 -> NOT .)
    SUPER           reduce using rule 113 (oper5 -> NOT .)
    LPAREN          reduce using rule 113 (oper5 -> NOT .)
    IDENT           reduce using rule 113 (oper5 -> NOT .)
    STRING          reduce using rule 113 (oper5 -> NOT .)
    NUM             reduce using rule 113 (oper5 -> NOT .)
    REAL            reduce using rule 113 (oper5 -> NOT .)
    THIS            reduce using rule 113 (oper5 -> NOT .)
    NIL             reduce using rule 113 (oper5 -> NOT .)
    FALSE           reduce using rule 113 (oper5 -> NOT .)
    TRUE            reduce using rule 113 (oper5 -> NOT .)


state 51

    (4) _1_items -> _1_items _1_item .
    VAR             reduce using rule 4 (_1_items -> _1_items _1_item .)
    FUN             reduce using rule 4 (_1_items -> _1_items _1_item .)
    CLASS           reduce using rule 4 (_1_items -> _1_items _1_item .)
    LBRACE          reduce using rule 4 (_1_items -> _1_items _1_item .)
    WHILE           reduce using rule 4 (_1_items -> _1_items _1_item .)
    RETURN          reduce using rule 4 (_1_items -> _1_items _1_item .)
    PRINT           reduce using rule 4 (_1_items -> _1_items _1_item .)
    IF              reduce using rule 4 (_1_items -> _1_items _1_item .)
    FOR             reduce using rule 4 (_1_items -> _1_items _1_item .)
    SUPER           reduce using rule 4 (_1_items -> _1_items _1_item .)
    LPAREN          reduce using rule 4 (_1_items -> _1_items _1_item .)
    IDENT           reduce using rule 4 (_1_items -> _1_items _1_item .)
    STRING          reduce using rule 4 (_1_items -> _1_items _1_item .)
    NUM             reduce using rule 4 (_1_items -> _1_items _1_item .)
    REAL            reduce using rule 4 (_1_items -> _1_items _1_item .)
    THIS            reduce using rule 4 (_1_items -> _1_items _1_item .)
    NIL             reduce using rule 4 (_1_items -> _1_items _1_item .)
    FALSE           reduce using rule 4 (_1_items -> _1_items _1_item .)
    TRUE            reduce using rule 4 (_1_items -> _1_items _1_item .)
    MINUS           reduce using rule 4 (_1_items -> _1_items _1_item .)
    NOT             reduce using rule 4 (_1_items -> _1_items _1_item .)
    $end            reduce using rule 4 (_1_items -> _1_items _1_item .)


state 52

    (20) var_declaration -> VAR IDENT . _4_optional SEMI
    (21) _4_optional -> . ASSIGN expression
    (22) _4_optional -> .
    ASSIGN          shift and go to state 114
    SEMI            reduce using rule 22 (_4_optional -> .)

    _4_optional                    shift and go to state 113

state 53

    (19) func_declaration -> FUN function .
    VAR             reduce using rule 19 (func_declaration -> FUN function .)
    FUN             reduce using rule 19 (func_declaration -> FUN function .)
    CLASS           reduce using rule 19 (func_declaration -> FUN function .)
    LBRACE          reduce using rule 19 (func_declaration -> FUN function .)
    WHILE           reduce using rule 19 (func_declaration -> FUN function .)
    RETURN          reduce using rule 19 (func_declaration -> FUN function .)
    PRINT           reduce using rule 19 (func_declaration -> FUN function .)
    IF              reduce using rule 19 (func_declaration -> FUN function .)
    FOR             reduce using rule 19 (func_declaration -> FUN function .)
    SUPER           reduce using rule 19 (func_declaration -> FUN function .)
    LPAREN          reduce using rule 19 (func_declaration -> FUN function .)
    IDENT           reduce using rule 19 (func_declaration -> FUN function .)
    STRING          reduce using rule 19 (func_declaration -> FUN function .)
    NUM             reduce using rule 19 (func_declaration -> FUN function .)
    REAL            reduce using rule 19 (func_declaration -> FUN function .)
    THIS            reduce using rule 19 (func_declaration -> FUN function .)
    NIL             reduce using rule 19 (func_declaration -> FUN function .)
    FALSE           reduce using rule 19 (func_declaration -> FUN function .)
    TRUE            reduce using rule 19 (func_declaration -> FUN function .)
    MINUS           reduce using rule 19 (func_declaration -> FUN function .)
    NOT             reduce using rule 19 (func_declaration -> FUN function .)
    $end            reduce using rule 19 (func_declaration -> FUN function .)
    RBRACE          reduce using rule 19 (func_declaration -> FUN function .)


state 54

    (134) function -> IDENT . LPAREN _22_optional RPAREN block
    LPAREN          shift and go to state 115


state 55

    (11) class_declaration -> CLASS IDENT . _2_optional LBRACE _3_repeat RBRACE
    (12) _2_optional -> . LT IDENT
    (13) _2_optional -> .
    LT              shift and go to state 117
    LBRACE          reduce using rule 13 (_2_optional -> .)

    _2_optional                    shift and go to state 116

state 56

    (53) block -> LBRACE _12_repeat . RBRACE
    RBRACE          shift and go to state 118


state 57

    (54) _12_repeat -> _12_items .
    (56) _12_items -> _12_items . _12_item
    (58) _12_item -> . declaration
    (7) declaration -> . statement
    (8) declaration -> . var_declaration
    (9) declaration -> . func_declaration
    (10) declaration -> . class_declaration
    (23) statement -> . block
    (24) statement -> . while_stmt
    (25) statement -> . return_stmt
    (26) statement -> . print_stmt
    (27) statement -> . if_stmt
    (28) statement -> . for_stmt
    (29) statement -> . expr_stmt
    (20) var_declaration -> . VAR IDENT _4_optional SEMI
    (19) func_declaration -> . FUN function
    (11) class_declaration -> . CLASS IDENT _2_optional LBRACE _3_repeat RBRACE
    (53) block -> . LBRACE _12_repeat RBRACE
    (52) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (49) return_stmt -> . RETURN _11_optional SEMI
    (48) print_stmt -> . PRINT expression SEMI
    (43) if_stmt -> . IF LPAREN _9_optional RPAREN statement _10_optional
    (31) for_stmt -> . FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
    (36) for_stmt -> . FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
    (30) expr_stmt -> . expression SEMI
    (59) expression -> . assignment
    (60) assignment -> . logic_or
    (61) assignment -> . _13_optional IDENT ASSIGN expression
    (64) logic_or -> . logic_and _14_repeat
    (62) _13_optional -> . call POINT
    (63) _13_optional -> .
    (70) logic_and -> . equality _15_repeat
    (114) call -> . primary _20_repeat
    (76) equality -> . comparison _16_repeat
    (124) primary -> . SUPER POINT IDENT
    (125) primary -> . LPAREN expression RPAREN
    (126) primary -> . IDENT
    (127) primary -> . STRING
    (128) primary -> . NUM
    (129) primary -> . REAL
    (130) primary -> . THIS
    (131) primary -> . NIL
    (132) primary -> . FALSE
    (133) primary -> . TRUE
    (84) comparison -> . term _17_repeat
    (94) term -> . factor _18_repeat
    (102) factor -> . unary _19_repeat
    (110) unary -> . call
    (111) unary -> . oper5 unary
    (112) oper5 -> . MINUS
    (113) oper5 -> . NOT
  ! shift/reduce conflict for IDENT resolved as shift
    RBRACE          reduce using rule 54 (_12_repeat -> _12_items .)
    VAR             shift and go to state 17
    FUN             shift and go to state 19
    CLASS           shift and go to state 20
    LBRACE          shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    FOR             shift and go to state 28
    SUPER           shift and go to state 37
    LPAREN          shift and go to state 23
    IDENT           shift and go to state 18
    STRING          shift and go to state 38
    NUM             shift and go to state 39
    REAL            shift and go to state 40
    THIS            shift and go to state 41
    NIL             shift and go to state 42
    FALSE           shift and go to state 43
    TRUE            shift and go to state 44
    MINUS           shift and go to state 49
    NOT             shift and go to state 50

    _12_item                       shift and go to state 119
    declaration                    shift and go to state 59
    statement                      shift and go to state 6
    var_declaration                shift and go to state 7
    func_declaration               shift and go to state 8
    class_declaration              shift and go to state 9
    block                          shift and go to state 10
    while_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    print_stmt                     shift and go to state 13
    if_stmt                        shift and go to state 14
    for_stmt                       shift and go to state 15
    expr_stmt                      shift and go to state 16
    expression                     shift and go to state 24
    assignment                     shift and go to state 29
    logic_or                       shift and go to state 30
    _13_optional                   shift and go to state 31
    logic_and                      shift and go to state 32
    call                           shift and go to state 33
    equality                       shift and go to state 34
    primary                        shift and go to state 35
    comparison                     shift and go to state 36
    term                           shift and go to state 45
    factor                         shift and go to state 46
    unary                          shift and go to state 47
    oper5                          shift and go to state 48

state 58

    (57) _12_items -> _12_item .
    VAR             reduce using rule 57 (_12_items -> _12_item .)
    FUN             reduce using rule 57 (_12_items -> _12_item .)
    CLASS           reduce using rule 57 (_12_items -> _12_item .)
    LBRACE          reduce using rule 57 (_12_items -> _12_item .)
    WHILE           reduce using rule 57 (_12_items -> _12_item .)
    RETURN          reduce using rule 57 (_12_items -> _12_item .)
    PRINT           reduce using rule 57 (_12_items -> _12_item .)
    IF              reduce using rule 57 (_12_items -> _12_item .)
    FOR             reduce using rule 57 (_12_items -> _12_item .)
    SUPER           reduce using rule 57 (_12_items -> _12_item .)
    LPAREN          reduce using rule 57 (_12_items -> _12_item .)
    IDENT           reduce using rule 57 (_12_items -> _12_item .)
    STRING          reduce using rule 57 (_12_items -> _12_item .)
    NUM             reduce using rule 57 (_12_items -> _12_item .)
    REAL            reduce using rule 57 (_12_items -> _12_item .)
    THIS            reduce using rule 57 (_12_items -> _12_item .)
    NIL             reduce using rule 57 (_12_items -> _12_item .)
    FALSE           reduce using rule 57 (_12_items -> _12_item .)
    TRUE            reduce using rule 57 (_12_items -> _12_item .)
    MINUS           reduce using rule 57 (_12_items -> _12_item .)
    NOT             reduce using rule 57 (_12_items -> _12_item .)
    RBRACE          reduce using rule 57 (_12_items -> _12_item .)


state 59

    (58) _12_item -> declaration .
    VAR             reduce using rule 58 (_12_item -> declaration .)
    FUN             reduce using rule 58 (_12_item -> declaration .)
    CLASS           reduce using rule 58 (_12_item -> declaration .)
    LBRACE          reduce using rule 58 (_12_item -> declaration .)
    WHILE           reduce using rule 58 (_12_item -> declaration .)
    RETURN          reduce using rule 58 (_12_item -> declaration .)
    PRINT           reduce using rule 58 (_12_item -> declaration .)
    IF              reduce using rule 58 (_12_item -> declaration .)
    FOR             reduce using rule 58 (_12_item -> declaration .)
    SUPER           reduce using rule 58 (_12_item -> declaration .)
    LPAREN          reduce using rule 58 (_12_item -> declaration .)
    IDENT           reduce using rule 58 (_12_item -> declaration .)
    STRING          reduce using rule 58 (_12_item -> declaration .)
    NUM             reduce using rule 58 (_12_item -> declaration .)
    REAL            reduce using rule 58 (_12_item -> declaration .)
    THIS            reduce using rule 58 (_12_item -> declaration .)
    NIL             reduce using rule 58 (_12_item -> declaration .)
    FALSE           reduce using rule 58 (_12_item -> declaration .)
    TRUE            reduce using rule 58 (_12_item -> declaration .)
    MINUS           reduce using rule 58 (_12_item -> declaration .)
    NOT             reduce using rule 58 (_12_item -> declaration .)
    RBRACE          reduce using rule 58 (_12_item -> declaration .)


state 60

    (52) while_stmt -> WHILE LPAREN . expression RPAREN statement
    (59) expression -> . assignment
    (60) assignment -> . logic_or
    (61) assignment -> . _13_optional IDENT ASSIGN expression
    (64) logic_or -> . logic_and _14_repeat
    (62) _13_optional -> . call POINT
    (63) _13_optional -> .
    (70) logic_and -> . equality _15_repeat
    (114) call -> . primary _20_repeat
    (76) equality -> . comparison _16_repeat
    (124) primary -> . SUPER POINT IDENT
    (125) primary -> . LPAREN expression RPAREN
    (126) primary -> . IDENT
    (127) primary -> . STRING
    (128) primary -> . NUM
    (129) primary -> . REAL
    (130) primary -> . THIS
    (131) primary -> . NIL
    (132) primary -> . FALSE
    (133) primary -> . TRUE
    (84) comparison -> . term _17_repeat
    (94) term -> . factor _18_repeat
    (102) factor -> . unary _19_repeat
    (110) unary -> . call
    (111) unary -> . oper5 unary
    (112) oper5 -> . MINUS
    (113) oper5 -> . NOT
  ! shift/reduce conflict for IDENT resolved as shift
    SUPER           shift and go to state 37
    LPAREN          shift and go to state 23
    IDENT           shift and go to state 18
    STRING          shift and go to state 38
    NUM             shift and go to state 39
    REAL            shift and go to state 40
    THIS            shift and go to state 41
    NIL             shift and go to state 42
    FALSE           shift and go to state 43
    TRUE            shift and go to state 44
    MINUS           shift and go to state 49
    NOT             shift and go to state 50

    expression                     shift and go to state 120
    assignment                     shift and go to state 29
    logic_or                       shift and go to state 30
    _13_optional                   shift and go to state 31
    logic_and                      shift and go to state 32
    call                           shift and go to state 33
    equality                       shift and go to state 34
    primary                        shift and go to state 35
    comparison                     shift and go to state 36
    term                           shift and go to state 45
    factor                         shift and go to state 46
    unary                          shift and go to state 47
    oper5                          shift and go to state 48

state 61

    (125) primary -> LPAREN expression . RPAREN
    RPAREN          shift and go to state 121


state 62

    (30) expr_stmt -> expression SEMI .
    VAR             reduce using rule 30 (expr_stmt -> expression SEMI .)
    FUN             reduce using rule 30 (expr_stmt -> expression SEMI .)
    CLASS           reduce using rule 30 (expr_stmt -> expression SEMI .)
    LBRACE          reduce using rule 30 (expr_stmt -> expression SEMI .)
    WHILE           reduce using rule 30 (expr_stmt -> expression SEMI .)
    RETURN          reduce using rule 30 (expr_stmt -> expression SEMI .)
    PRINT           reduce using rule 30 (expr_stmt -> expression SEMI .)
    IF              reduce using rule 30 (expr_stmt -> expression SEMI .)
    FOR             reduce using rule 30 (expr_stmt -> expression SEMI .)
    SUPER           reduce using rule 30 (expr_stmt -> expression SEMI .)
    LPAREN          reduce using rule 30 (expr_stmt -> expression SEMI .)
    IDENT           reduce using rule 30 (expr_stmt -> expression SEMI .)
    STRING          reduce using rule 30 (expr_stmt -> expression SEMI .)
    NUM             reduce using rule 30 (expr_stmt -> expression SEMI .)
    REAL            reduce using rule 30 (expr_stmt -> expression SEMI .)
    THIS            reduce using rule 30 (expr_stmt -> expression SEMI .)
    NIL             reduce using rule 30 (expr_stmt -> expression SEMI .)
    FALSE           reduce using rule 30 (expr_stmt -> expression SEMI .)
    TRUE            reduce using rule 30 (expr_stmt -> expression SEMI .)
    MINUS           reduce using rule 30 (expr_stmt -> expression SEMI .)
    NOT             reduce using rule 30 (expr_stmt -> expression SEMI .)
    $end            reduce using rule 30 (expr_stmt -> expression SEMI .)
    RBRACE          reduce using rule 30 (expr_stmt -> expression SEMI .)
    SEMI            reduce using rule 30 (expr_stmt -> expression SEMI .)
    ELSE            reduce using rule 30 (expr_stmt -> expression SEMI .)


state 63

    (49) return_stmt -> RETURN _11_optional . SEMI
    SEMI            shift and go to state 122


state 64

    (50) _11_optional -> expression .
    SEMI            reduce using rule 50 (_11_optional -> expression .)


state 65

    (48) print_stmt -> PRINT expression . SEMI
    SEMI            shift and go to state 123


state 66

    (43) if_stmt -> IF LPAREN . _9_optional RPAREN statement _10_optional
    (44) _9_optional -> . expression
    (45) _9_optional -> .
    (59) expression -> . assignment
    (60) assignment -> . logic_or
    (61) assignment -> . _13_optional IDENT ASSIGN expression
    (64) logic_or -> . logic_and _14_repeat
    (62) _13_optional -> . call POINT
    (63) _13_optional -> .
    (70) logic_and -> . equality _15_repeat
    (114) call -> . primary _20_repeat
    (76) equality -> . comparison _16_repeat
    (124) primary -> . SUPER POINT IDENT
    (125) primary -> . LPAREN expression RPAREN
    (126) primary -> . IDENT
    (127) primary -> . STRING
    (128) primary -> . NUM
    (129) primary -> . REAL
    (130) primary -> . THIS
    (131) primary -> . NIL
    (132) primary -> . FALSE
    (133) primary -> . TRUE
    (84) comparison -> . term _17_repeat
    (94) term -> . factor _18_repeat
    (102) factor -> . unary _19_repeat
    (110) unary -> . call
    (111) unary -> . oper5 unary
    (112) oper5 -> . MINUS
    (113) oper5 -> . NOT
  ! shift/reduce conflict for IDENT resolved as shift
    RPAREN          reduce using rule 45 (_9_optional -> .)
    SUPER           shift and go to state 37
    LPAREN          shift and go to state 23
    IDENT           shift and go to state 18
    STRING          shift and go to state 38
    NUM             shift and go to state 39
    REAL            shift and go to state 40
    THIS            shift and go to state 41
    NIL             shift and go to state 42
    FALSE           shift and go to state 43
    TRUE            shift and go to state 44
    MINUS           shift and go to state 49
    NOT             shift and go to state 50

    _9_optional                    shift and go to state 124
    expression                     shift and go to state 125
    assignment                     shift and go to state 29
    logic_or                       shift and go to state 30
    _13_optional                   shift and go to state 31
    logic_and                      shift and go to state 32
    call                           shift and go to state 33
    equality                       shift and go to state 34
    primary                        shift and go to state 35
    comparison                     shift and go to state 36
    term                           shift and go to state 45
    factor                         shift and go to state 46
    unary                          shift and go to state 47
    oper5                          shift and go to state 48

state 67

    (31) for_stmt -> FOR LPAREN . SEMI _5_optional SEMI _6_optional RPAREN statement
    (36) for_stmt -> FOR LPAREN . for_initialize _7_optional SEMI _8_optional RPAREN statement
    (41) for_initialize -> . expr_stmt
    (42) for_initialize -> . var_declaration
    (30) expr_stmt -> . expression SEMI
    (20) var_declaration -> . VAR IDENT _4_optional SEMI
    (59) expression -> . assignment
    (60) assignment -> . logic_or
    (61) assignment -> . _13_optional IDENT ASSIGN expression
    (64) logic_or -> . logic_and _14_repeat
    (62) _13_optional -> . call POINT
    (63) _13_optional -> .
    (70) logic_and -> . equality _15_repeat
    (114) call -> . primary _20_repeat
    (76) equality -> . comparison _16_repeat
    (124) primary -> . SUPER POINT IDENT
    (125) primary -> . LPAREN expression RPAREN
    (126) primary -> . IDENT
    (127) primary -> . STRING
    (128) primary -> . NUM
    (129) primary -> . REAL
    (130) primary -> . THIS
    (131) primary -> . NIL
    (132) primary -> . FALSE
    (133) primary -> . TRUE
    (84) comparison -> . term _17_repeat
    (94) term -> . factor _18_repeat
    (102) factor -> . unary _19_repeat
    (110) unary -> . call
    (111) unary -> . oper5 unary
    (112) oper5 -> . MINUS
    (113) oper5 -> . NOT
  ! shift/reduce conflict for IDENT resolved as shift
    SEMI            shift and go to state 126
    VAR             shift and go to state 17
    SUPER           shift and go to state 37
    LPAREN          shift and go to state 23
    IDENT           shift and go to state 18
    STRING          shift and go to state 38
    NUM             shift and go to state 39
    REAL            shift and go to state 40
    THIS            shift and go to state 41
    NIL             shift and go to state 42
    FALSE           shift and go to state 43
    TRUE            shift and go to state 44
    MINUS           shift and go to state 49
    NOT             shift and go to state 50

    for_initialize                 shift and go to state 127
    expr_stmt                      shift and go to state 128
    var_declaration                shift and go to state 129
    expression                     shift and go to state 24
    assignment                     shift and go to state 29
    logic_or                       shift and go to state 30
    _13_optional                   shift and go to state 31
    logic_and                      shift and go to state 32
    call                           shift and go to state 33
    equality                       shift and go to state 34
    primary                        shift and go to state 35
    comparison                     shift and go to state 36
    term                           shift and go to state 45
    factor                         shift and go to state 46
    unary                          shift and go to state 47
    oper5                          shift and go to state 48

state 68

    (61) assignment -> _13_optional IDENT . ASSIGN expression
    ASSIGN          shift and go to state 130


state 69

    (64) logic_or -> logic_and _14_repeat .
    SEMI            reduce using rule 64 (logic_or -> logic_and _14_repeat .)
    RPAREN          reduce using rule 64 (logic_or -> logic_and _14_repeat .)
    COMMA           reduce using rule 64 (logic_or -> logic_and _14_repeat .)


state 70

    (65) _14_repeat -> _14_items .
    (67) _14_items -> _14_items . _14_item
    (69) _14_item -> . OR logic_and
    SEMI            reduce using rule 65 (_14_repeat -> _14_items .)
    RPAREN          reduce using rule 65 (_14_repeat -> _14_items .)
    COMMA           reduce using rule 65 (_14_repeat -> _14_items .)
    OR              shift and go to state 72

    _14_item                       shift and go to state 131

state 71

    (68) _14_items -> _14_item .
    OR              reduce using rule 68 (_14_items -> _14_item .)
    SEMI            reduce using rule 68 (_14_items -> _14_item .)
    RPAREN          reduce using rule 68 (_14_items -> _14_item .)
    COMMA           reduce using rule 68 (_14_items -> _14_item .)


state 72

    (69) _14_item -> OR . logic_and
    (70) logic_and -> . equality _15_repeat
    (76) equality -> . comparison _16_repeat
    (84) comparison -> . term _17_repeat
    (94) term -> . factor _18_repeat
    (102) factor -> . unary _19_repeat
    (110) unary -> . call
    (111) unary -> . oper5 unary
    (114) call -> . primary _20_repeat
    (112) oper5 -> . MINUS
    (113) oper5 -> . NOT
    (124) primary -> . SUPER POINT IDENT
    (125) primary -> . LPAREN expression RPAREN
    (126) primary -> . IDENT
    (127) primary -> . STRING
    (128) primary -> . NUM
    (129) primary -> . REAL
    (130) primary -> . THIS
    (131) primary -> . NIL
    (132) primary -> . FALSE
    (133) primary -> . TRUE
    MINUS           shift and go to state 49
    NOT             shift and go to state 50
    SUPER           shift and go to state 37
    LPAREN          shift and go to state 23
    IDENT           shift and go to state 18
    STRING          shift and go to state 38
    NUM             shift and go to state 39
    REAL            shift and go to state 40
    THIS            shift and go to state 41
    NIL             shift and go to state 42
    FALSE           shift and go to state 43
    TRUE            shift and go to state 44

    logic_and                      shift and go to state 132
    equality                       shift and go to state 34
    comparison                     shift and go to state 36
    term                           shift and go to state 45
    factor                         shift and go to state 46
    unary                          shift and go to state 47
    call                           shift and go to state 112
    oper5                          shift and go to state 48
    primary                        shift and go to state 35

state 73

    (62) _13_optional -> call POINT .
    IDENT           reduce using rule 62 (_13_optional -> call POINT .)


state 74

    (70) logic_and -> equality _15_repeat .
    OR              reduce using rule 70 (logic_and -> equality _15_repeat .)
    SEMI            reduce using rule 70 (logic_and -> equality _15_repeat .)
    RPAREN          reduce using rule 70 (logic_and -> equality _15_repeat .)
    COMMA           reduce using rule 70 (logic_and -> equality _15_repeat .)


state 75

    (71) _15_repeat -> _15_items .
    (73) _15_items -> _15_items . _15_item
    (75) _15_item -> . AND equality
    OR              reduce using rule 71 (_15_repeat -> _15_items .)
    SEMI            reduce using rule 71 (_15_repeat -> _15_items .)
    RPAREN          reduce using rule 71 (_15_repeat -> _15_items .)
    COMMA           reduce using rule 71 (_15_repeat -> _15_items .)
    AND             shift and go to state 77

    _15_item                       shift and go to state 133

state 76

    (74) _15_items -> _15_item .
    AND             reduce using rule 74 (_15_items -> _15_item .)
    OR              reduce using rule 74 (_15_items -> _15_item .)
    SEMI            reduce using rule 74 (_15_items -> _15_item .)
    RPAREN          reduce using rule 74 (_15_items -> _15_item .)
    COMMA           reduce using rule 74 (_15_items -> _15_item .)


state 77

    (75) _15_item -> AND . equality
    (76) equality -> . comparison _16_repeat
    (84) comparison -> . term _17_repeat
    (94) term -> . factor _18_repeat
    (102) factor -> . unary _19_repeat
    (110) unary -> . call
    (111) unary -> . oper5 unary
    (114) call -> . primary _20_repeat
    (112) oper5 -> . MINUS
    (113) oper5 -> . NOT
    (124) primary -> . SUPER POINT IDENT
    (125) primary -> . LPAREN expression RPAREN
    (126) primary -> . IDENT
    (127) primary -> . STRING
    (128) primary -> . NUM
    (129) primary -> . REAL
    (130) primary -> . THIS
    (131) primary -> . NIL
    (132) primary -> . FALSE
    (133) primary -> . TRUE
    MINUS           shift and go to state 49
    NOT             shift and go to state 50
    SUPER           shift and go to state 37
    LPAREN          shift and go to state 23
    IDENT           shift and go to state 18
    STRING          shift and go to state 38
    NUM             shift and go to state 39
    REAL            shift and go to state 40
    THIS            shift and go to state 41
    NIL             shift and go to state 42
    FALSE           shift and go to state 43
    TRUE            shift and go to state 44

    equality                       shift and go to state 134
    comparison                     shift and go to state 36
    term                           shift and go to state 45
    factor                         shift and go to state 46
    unary                          shift and go to state 47
    call                           shift and go to state 112
    oper5                          shift and go to state 48
    primary                        shift and go to state 35

state 78

    (114) call -> primary _20_repeat .
    POINT           reduce using rule 114 (call -> primary _20_repeat .)
    TIMES           reduce using rule 114 (call -> primary _20_repeat .)
    DIVIDE          reduce using rule 114 (call -> primary _20_repeat .)
    PLUS            reduce using rule 114 (call -> primary _20_repeat .)
    MINUS           reduce using rule 114 (call -> primary _20_repeat .)
    LE              reduce using rule 114 (call -> primary _20_repeat .)
    LT              reduce using rule 114 (call -> primary _20_repeat .)
    GE              reduce using rule 114 (call -> primary _20_repeat .)
    GT              reduce using rule 114 (call -> primary _20_repeat .)
    EQ              reduce using rule 114 (call -> primary _20_repeat .)
    NE              reduce using rule 114 (call -> primary _20_repeat .)
    AND             reduce using rule 114 (call -> primary _20_repeat .)
    OR              reduce using rule 114 (call -> primary _20_repeat .)
    SEMI            reduce using rule 114 (call -> primary _20_repeat .)
    RPAREN          reduce using rule 114 (call -> primary _20_repeat .)
    COMMA           reduce using rule 114 (call -> primary _20_repeat .)


state 79

    (115) _20_repeat -> _20_items .
    (117) _20_items -> _20_items . _20_item
    (119) _20_item -> . oper6
    (120) oper6 -> . POINT IDENT
    (121) oper6 -> . LPAREN _21_optional RPAREN
  ! shift/reduce conflict for POINT resolved as shift
    TIMES           reduce using rule 115 (_20_repeat -> _20_items .)
    DIVIDE          reduce using rule 115 (_20_repeat -> _20_items .)
    PLUS            reduce using rule 115 (_20_repeat -> _20_items .)
    MINUS           reduce using rule 115 (_20_repeat -> _20_items .)
    LE              reduce using rule 115 (_20_repeat -> _20_items .)
    LT              reduce using rule 115 (_20_repeat -> _20_items .)
    GE              reduce using rule 115 (_20_repeat -> _20_items .)
    GT              reduce using rule 115 (_20_repeat -> _20_items .)
    EQ              reduce using rule 115 (_20_repeat -> _20_items .)
    NE              reduce using rule 115 (_20_repeat -> _20_items .)
    AND             reduce using rule 115 (_20_repeat -> _20_items .)
    OR              reduce using rule 115 (_20_repeat -> _20_items .)
    SEMI            reduce using rule 115 (_20_repeat -> _20_items .)
    RPAREN          reduce using rule 115 (_20_repeat -> _20_items .)
    COMMA           reduce using rule 115 (_20_repeat -> _20_items .)
    POINT           shift and go to state 82
    LPAREN          shift and go to state 83

    _20_item                       shift and go to state 135
    oper6                          shift and go to state 81

state 80

    (118) _20_items -> _20_item .
    POINT           reduce using rule 118 (_20_items -> _20_item .)
    LPAREN          reduce using rule 118 (_20_items -> _20_item .)
    TIMES           reduce using rule 118 (_20_items -> _20_item .)
    DIVIDE          reduce using rule 118 (_20_items -> _20_item .)
    PLUS            reduce using rule 118 (_20_items -> _20_item .)
    MINUS           reduce using rule 118 (_20_items -> _20_item .)
    LE              reduce using rule 118 (_20_items -> _20_item .)
    LT              reduce using rule 118 (_20_items -> _20_item .)
    GE              reduce using rule 118 (_20_items -> _20_item .)
    GT              reduce using rule 118 (_20_items -> _20_item .)
    EQ              reduce using rule 118 (_20_items -> _20_item .)
    NE              reduce using rule 118 (_20_items -> _20_item .)
    AND             reduce using rule 118 (_20_items -> _20_item .)
    OR              reduce using rule 118 (_20_items -> _20_item .)
    SEMI            reduce using rule 118 (_20_items -> _20_item .)
    RPAREN          reduce using rule 118 (_20_items -> _20_item .)
    COMMA           reduce using rule 118 (_20_items -> _20_item .)


state 81

    (119) _20_item -> oper6 .
    POINT           reduce using rule 119 (_20_item -> oper6 .)
    LPAREN          reduce using rule 119 (_20_item -> oper6 .)
    TIMES           reduce using rule 119 (_20_item -> oper6 .)
    DIVIDE          reduce using rule 119 (_20_item -> oper6 .)
    PLUS            reduce using rule 119 (_20_item -> oper6 .)
    MINUS           reduce using rule 119 (_20_item -> oper6 .)
    LE              reduce using rule 119 (_20_item -> oper6 .)
    LT              reduce using rule 119 (_20_item -> oper6 .)
    GE              reduce using rule 119 (_20_item -> oper6 .)
    GT              reduce using rule 119 (_20_item -> oper6 .)
    EQ              reduce using rule 119 (_20_item -> oper6 .)
    NE              reduce using rule 119 (_20_item -> oper6 .)
    AND             reduce using rule 119 (_20_item -> oper6 .)
    OR              reduce using rule 119 (_20_item -> oper6 .)
    SEMI            reduce using rule 119 (_20_item -> oper6 .)
    RPAREN          reduce using rule 119 (_20_item -> oper6 .)
    COMMA           reduce using rule 119 (_20_item -> oper6 .)


state 82

    (120) oper6 -> POINT . IDENT
    IDENT           shift and go to state 136


state 83

    (121) oper6 -> LPAREN . _21_optional RPAREN
    (122) _21_optional -> . arguments
    (123) _21_optional -> .
    (143) arguments -> . expression _24_repeat
    (59) expression -> . assignment
    (60) assignment -> . logic_or
    (61) assignment -> . _13_optional IDENT ASSIGN expression
    (64) logic_or -> . logic_and _14_repeat
    (62) _13_optional -> . call POINT
    (63) _13_optional -> .
    (70) logic_and -> . equality _15_repeat
    (114) call -> . primary _20_repeat
    (76) equality -> . comparison _16_repeat
    (124) primary -> . SUPER POINT IDENT
    (125) primary -> . LPAREN expression RPAREN
    (126) primary -> . IDENT
    (127) primary -> . STRING
    (128) primary -> . NUM
    (129) primary -> . REAL
    (130) primary -> . THIS
    (131) primary -> . NIL
    (132) primary -> . FALSE
    (133) primary -> . TRUE
    (84) comparison -> . term _17_repeat
    (94) term -> . factor _18_repeat
    (102) factor -> . unary _19_repeat
    (110) unary -> . call
    (111) unary -> . oper5 unary
    (112) oper5 -> . MINUS
    (113) oper5 -> . NOT
  ! shift/reduce conflict for IDENT resolved as shift
    RPAREN          reduce using rule 123 (_21_optional -> .)
    SUPER           shift and go to state 37
    LPAREN          shift and go to state 23
    IDENT           shift and go to state 18
    STRING          shift and go to state 38
    NUM             shift and go to state 39
    REAL            shift and go to state 40
    THIS            shift and go to state 41
    NIL             shift and go to state 42
    FALSE           shift and go to state 43
    TRUE            shift and go to state 44
    MINUS           shift and go to state 49
    NOT             shift and go to state 50

    _21_optional                   shift and go to state 137
    arguments                      shift and go to state 138
    expression                     shift and go to state 139
    assignment                     shift and go to state 29
    logic_or                       shift and go to state 30
    _13_optional                   shift and go to state 31
    logic_and                      shift and go to state 32
    call                           shift and go to state 33
    equality                       shift and go to state 34
    primary                        shift and go to state 35
    comparison                     shift and go to state 36
    term                           shift and go to state 45
    factor                         shift and go to state 46
    unary                          shift and go to state 47
    oper5                          shift and go to state 48

state 84

    (76) equality -> comparison _16_repeat .
    AND             reduce using rule 76 (equality -> comparison _16_repeat .)
    OR              reduce using rule 76 (equality -> comparison _16_repeat .)
    SEMI            reduce using rule 76 (equality -> comparison _16_repeat .)
    RPAREN          reduce using rule 76 (equality -> comparison _16_repeat .)
    COMMA           reduce using rule 76 (equality -> comparison _16_repeat .)


state 85

    (77) _16_repeat -> _16_items .
    (79) _16_items -> _16_items . _16_item
    (81) _16_item -> . oper1 comparison
    (82) oper1 -> . EQ
    (83) oper1 -> . NE
    AND             reduce using rule 77 (_16_repeat -> _16_items .)
    OR              reduce using rule 77 (_16_repeat -> _16_items .)
    SEMI            reduce using rule 77 (_16_repeat -> _16_items .)
    RPAREN          reduce using rule 77 (_16_repeat -> _16_items .)
    COMMA           reduce using rule 77 (_16_repeat -> _16_items .)
    EQ              shift and go to state 88
    NE              shift and go to state 89

    _16_item                       shift and go to state 140
    oper1                          shift and go to state 87

state 86

    (80) _16_items -> _16_item .
    EQ              reduce using rule 80 (_16_items -> _16_item .)
    NE              reduce using rule 80 (_16_items -> _16_item .)
    AND             reduce using rule 80 (_16_items -> _16_item .)
    OR              reduce using rule 80 (_16_items -> _16_item .)
    SEMI            reduce using rule 80 (_16_items -> _16_item .)
    RPAREN          reduce using rule 80 (_16_items -> _16_item .)
    COMMA           reduce using rule 80 (_16_items -> _16_item .)


state 87

    (81) _16_item -> oper1 . comparison
    (84) comparison -> . term _17_repeat
    (94) term -> . factor _18_repeat
    (102) factor -> . unary _19_repeat
    (110) unary -> . call
    (111) unary -> . oper5 unary
    (114) call -> . primary _20_repeat
    (112) oper5 -> . MINUS
    (113) oper5 -> . NOT
    (124) primary -> . SUPER POINT IDENT
    (125) primary -> . LPAREN expression RPAREN
    (126) primary -> . IDENT
    (127) primary -> . STRING
    (128) primary -> . NUM
    (129) primary -> . REAL
    (130) primary -> . THIS
    (131) primary -> . NIL
    (132) primary -> . FALSE
    (133) primary -> . TRUE
    MINUS           shift and go to state 49
    NOT             shift and go to state 50
    SUPER           shift and go to state 37
    LPAREN          shift and go to state 23
    IDENT           shift and go to state 18
    STRING          shift and go to state 38
    NUM             shift and go to state 39
    REAL            shift and go to state 40
    THIS            shift and go to state 41
    NIL             shift and go to state 42
    FALSE           shift and go to state 43
    TRUE            shift and go to state 44

    comparison                     shift and go to state 141
    term                           shift and go to state 45
    factor                         shift and go to state 46
    unary                          shift and go to state 47
    call                           shift and go to state 112
    oper5                          shift and go to state 48
    primary                        shift and go to state 35

state 88

    (82) oper1 -> EQ .
    MINUS           reduce using rule 82 (oper1 -> EQ .)
    NOT             reduce using rule 82 (oper1 -> EQ .)
    SUPER           reduce using rule 82 (oper1 -> EQ .)
    LPAREN          reduce using rule 82 (oper1 -> EQ .)
    IDENT           reduce using rule 82 (oper1 -> EQ .)
    STRING          reduce using rule 82 (oper1 -> EQ .)
    NUM             reduce using rule 82 (oper1 -> EQ .)
    REAL            reduce using rule 82 (oper1 -> EQ .)
    THIS            reduce using rule 82 (oper1 -> EQ .)
    NIL             reduce using rule 82 (oper1 -> EQ .)
    FALSE           reduce using rule 82 (oper1 -> EQ .)
    TRUE            reduce using rule 82 (oper1 -> EQ .)


state 89

    (83) oper1 -> NE .
    MINUS           reduce using rule 83 (oper1 -> NE .)
    NOT             reduce using rule 83 (oper1 -> NE .)
    SUPER           reduce using rule 83 (oper1 -> NE .)
    LPAREN          reduce using rule 83 (oper1 -> NE .)
    IDENT           reduce using rule 83 (oper1 -> NE .)
    STRING          reduce using rule 83 (oper1 -> NE .)
    NUM             reduce using rule 83 (oper1 -> NE .)
    REAL            reduce using rule 83 (oper1 -> NE .)
    THIS            reduce using rule 83 (oper1 -> NE .)
    NIL             reduce using rule 83 (oper1 -> NE .)
    FALSE           reduce using rule 83 (oper1 -> NE .)
    TRUE            reduce using rule 83 (oper1 -> NE .)


state 90

    (124) primary -> SUPER POINT . IDENT
    IDENT           shift and go to state 142


state 91

    (84) comparison -> term _17_repeat .
    EQ              reduce using rule 84 (comparison -> term _17_repeat .)
    NE              reduce using rule 84 (comparison -> term _17_repeat .)
    AND             reduce using rule 84 (comparison -> term _17_repeat .)
    OR              reduce using rule 84 (comparison -> term _17_repeat .)
    SEMI            reduce using rule 84 (comparison -> term _17_repeat .)
    RPAREN          reduce using rule 84 (comparison -> term _17_repeat .)
    COMMA           reduce using rule 84 (comparison -> term _17_repeat .)


state 92

    (85) _17_repeat -> _17_items .
    (87) _17_items -> _17_items . _17_item
    (89) _17_item -> . oper2 term
    (90) oper2 -> . LE
    (91) oper2 -> . LT
    (92) oper2 -> . GE
    (93) oper2 -> . GT
    EQ              reduce using rule 85 (_17_repeat -> _17_items .)
    NE              reduce using rule 85 (_17_repeat -> _17_items .)
    AND             reduce using rule 85 (_17_repeat -> _17_items .)
    OR              reduce using rule 85 (_17_repeat -> _17_items .)
    SEMI            reduce using rule 85 (_17_repeat -> _17_items .)
    RPAREN          reduce using rule 85 (_17_repeat -> _17_items .)
    COMMA           reduce using rule 85 (_17_repeat -> _17_items .)
    LE              shift and go to state 95
    LT              shift and go to state 96
    GE              shift and go to state 97
    GT              shift and go to state 98

    _17_item                       shift and go to state 143
    oper2                          shift and go to state 94

state 93

    (88) _17_items -> _17_item .
    LE              reduce using rule 88 (_17_items -> _17_item .)
    LT              reduce using rule 88 (_17_items -> _17_item .)
    GE              reduce using rule 88 (_17_items -> _17_item .)
    GT              reduce using rule 88 (_17_items -> _17_item .)
    EQ              reduce using rule 88 (_17_items -> _17_item .)
    NE              reduce using rule 88 (_17_items -> _17_item .)
    AND             reduce using rule 88 (_17_items -> _17_item .)
    OR              reduce using rule 88 (_17_items -> _17_item .)
    SEMI            reduce using rule 88 (_17_items -> _17_item .)
    RPAREN          reduce using rule 88 (_17_items -> _17_item .)
    COMMA           reduce using rule 88 (_17_items -> _17_item .)


state 94

    (89) _17_item -> oper2 . term
    (94) term -> . factor _18_repeat
    (102) factor -> . unary _19_repeat
    (110) unary -> . call
    (111) unary -> . oper5 unary
    (114) call -> . primary _20_repeat
    (112) oper5 -> . MINUS
    (113) oper5 -> . NOT
    (124) primary -> . SUPER POINT IDENT
    (125) primary -> . LPAREN expression RPAREN
    (126) primary -> . IDENT
    (127) primary -> . STRING
    (128) primary -> . NUM
    (129) primary -> . REAL
    (130) primary -> . THIS
    (131) primary -> . NIL
    (132) primary -> . FALSE
    (133) primary -> . TRUE
    MINUS           shift and go to state 49
    NOT             shift and go to state 50
    SUPER           shift and go to state 37
    LPAREN          shift and go to state 23
    IDENT           shift and go to state 18
    STRING          shift and go to state 38
    NUM             shift and go to state 39
    REAL            shift and go to state 40
    THIS            shift and go to state 41
    NIL             shift and go to state 42
    FALSE           shift and go to state 43
    TRUE            shift and go to state 44

    term                           shift and go to state 144
    factor                         shift and go to state 46
    unary                          shift and go to state 47
    call                           shift and go to state 112
    oper5                          shift and go to state 48
    primary                        shift and go to state 35

state 95

    (90) oper2 -> LE .
    MINUS           reduce using rule 90 (oper2 -> LE .)
    NOT             reduce using rule 90 (oper2 -> LE .)
    SUPER           reduce using rule 90 (oper2 -> LE .)
    LPAREN          reduce using rule 90 (oper2 -> LE .)
    IDENT           reduce using rule 90 (oper2 -> LE .)
    STRING          reduce using rule 90 (oper2 -> LE .)
    NUM             reduce using rule 90 (oper2 -> LE .)
    REAL            reduce using rule 90 (oper2 -> LE .)
    THIS            reduce using rule 90 (oper2 -> LE .)
    NIL             reduce using rule 90 (oper2 -> LE .)
    FALSE           reduce using rule 90 (oper2 -> LE .)
    TRUE            reduce using rule 90 (oper2 -> LE .)


state 96

    (91) oper2 -> LT .
    MINUS           reduce using rule 91 (oper2 -> LT .)
    NOT             reduce using rule 91 (oper2 -> LT .)
    SUPER           reduce using rule 91 (oper2 -> LT .)
    LPAREN          reduce using rule 91 (oper2 -> LT .)
    IDENT           reduce using rule 91 (oper2 -> LT .)
    STRING          reduce using rule 91 (oper2 -> LT .)
    NUM             reduce using rule 91 (oper2 -> LT .)
    REAL            reduce using rule 91 (oper2 -> LT .)
    THIS            reduce using rule 91 (oper2 -> LT .)
    NIL             reduce using rule 91 (oper2 -> LT .)
    FALSE           reduce using rule 91 (oper2 -> LT .)
    TRUE            reduce using rule 91 (oper2 -> LT .)


state 97

    (92) oper2 -> GE .
    MINUS           reduce using rule 92 (oper2 -> GE .)
    NOT             reduce using rule 92 (oper2 -> GE .)
    SUPER           reduce using rule 92 (oper2 -> GE .)
    LPAREN          reduce using rule 92 (oper2 -> GE .)
    IDENT           reduce using rule 92 (oper2 -> GE .)
    STRING          reduce using rule 92 (oper2 -> GE .)
    NUM             reduce using rule 92 (oper2 -> GE .)
    REAL            reduce using rule 92 (oper2 -> GE .)
    THIS            reduce using rule 92 (oper2 -> GE .)
    NIL             reduce using rule 92 (oper2 -> GE .)
    FALSE           reduce using rule 92 (oper2 -> GE .)
    TRUE            reduce using rule 92 (oper2 -> GE .)


state 98

    (93) oper2 -> GT .
    MINUS           reduce using rule 93 (oper2 -> GT .)
    NOT             reduce using rule 93 (oper2 -> GT .)
    SUPER           reduce using rule 93 (oper2 -> GT .)
    LPAREN          reduce using rule 93 (oper2 -> GT .)
    IDENT           reduce using rule 93 (oper2 -> GT .)
    STRING          reduce using rule 93 (oper2 -> GT .)
    NUM             reduce using rule 93 (oper2 -> GT .)
    REAL            reduce using rule 93 (oper2 -> GT .)
    THIS            reduce using rule 93 (oper2 -> GT .)
    NIL             reduce using rule 93 (oper2 -> GT .)
    FALSE           reduce using rule 93 (oper2 -> GT .)
    TRUE            reduce using rule 93 (oper2 -> GT .)


state 99

    (94) term -> factor _18_repeat .
    LE              reduce using rule 94 (term -> factor _18_repeat .)
    LT              reduce using rule 94 (term -> factor _18_repeat .)
    GE              reduce using rule 94 (term -> factor _18_repeat .)
    GT              reduce using rule 94 (term -> factor _18_repeat .)
    EQ              reduce using rule 94 (term -> factor _18_repeat .)
    NE              reduce using rule 94 (term -> factor _18_repeat .)
    AND             reduce using rule 94 (term -> factor _18_repeat .)
    OR              reduce using rule 94 (term -> factor _18_repeat .)
    SEMI            reduce using rule 94 (term -> factor _18_repeat .)
    RPAREN          reduce using rule 94 (term -> factor _18_repeat .)
    COMMA           reduce using rule 94 (term -> factor _18_repeat .)


state 100

    (95) _18_repeat -> _18_items .
    (97) _18_items -> _18_items . _18_item
    (99) _18_item -> . oper3 factor
    (100) oper3 -> . PLUS
    (101) oper3 -> . MINUS
    LE              reduce using rule 95 (_18_repeat -> _18_items .)
    LT              reduce using rule 95 (_18_repeat -> _18_items .)
    GE              reduce using rule 95 (_18_repeat -> _18_items .)
    GT              reduce using rule 95 (_18_repeat -> _18_items .)
    EQ              reduce using rule 95 (_18_repeat -> _18_items .)
    NE              reduce using rule 95 (_18_repeat -> _18_items .)
    AND             reduce using rule 95 (_18_repeat -> _18_items .)
    OR              reduce using rule 95 (_18_repeat -> _18_items .)
    SEMI            reduce using rule 95 (_18_repeat -> _18_items .)
    RPAREN          reduce using rule 95 (_18_repeat -> _18_items .)
    COMMA           reduce using rule 95 (_18_repeat -> _18_items .)
    PLUS            shift and go to state 103
    MINUS           shift and go to state 104

    _18_item                       shift and go to state 145
    oper3                          shift and go to state 102

state 101

    (98) _18_items -> _18_item .
    PLUS            reduce using rule 98 (_18_items -> _18_item .)
    MINUS           reduce using rule 98 (_18_items -> _18_item .)
    LE              reduce using rule 98 (_18_items -> _18_item .)
    LT              reduce using rule 98 (_18_items -> _18_item .)
    GE              reduce using rule 98 (_18_items -> _18_item .)
    GT              reduce using rule 98 (_18_items -> _18_item .)
    EQ              reduce using rule 98 (_18_items -> _18_item .)
    NE              reduce using rule 98 (_18_items -> _18_item .)
    AND             reduce using rule 98 (_18_items -> _18_item .)
    OR              reduce using rule 98 (_18_items -> _18_item .)
    SEMI            reduce using rule 98 (_18_items -> _18_item .)
    RPAREN          reduce using rule 98 (_18_items -> _18_item .)
    COMMA           reduce using rule 98 (_18_items -> _18_item .)


state 102

    (99) _18_item -> oper3 . factor
    (102) factor -> . unary _19_repeat
    (110) unary -> . call
    (111) unary -> . oper5 unary
    (114) call -> . primary _20_repeat
    (112) oper5 -> . MINUS
    (113) oper5 -> . NOT
    (124) primary -> . SUPER POINT IDENT
    (125) primary -> . LPAREN expression RPAREN
    (126) primary -> . IDENT
    (127) primary -> . STRING
    (128) primary -> . NUM
    (129) primary -> . REAL
    (130) primary -> . THIS
    (131) primary -> . NIL
    (132) primary -> . FALSE
    (133) primary -> . TRUE
    MINUS           shift and go to state 49
    NOT             shift and go to state 50
    SUPER           shift and go to state 37
    LPAREN          shift and go to state 23
    IDENT           shift and go to state 18
    STRING          shift and go to state 38
    NUM             shift and go to state 39
    REAL            shift and go to state 40
    THIS            shift and go to state 41
    NIL             shift and go to state 42
    FALSE           shift and go to state 43
    TRUE            shift and go to state 44

    factor                         shift and go to state 146
    unary                          shift and go to state 47
    call                           shift and go to state 112
    oper5                          shift and go to state 48
    primary                        shift and go to state 35

state 103

    (100) oper3 -> PLUS .
    MINUS           reduce using rule 100 (oper3 -> PLUS .)
    NOT             reduce using rule 100 (oper3 -> PLUS .)
    SUPER           reduce using rule 100 (oper3 -> PLUS .)
    LPAREN          reduce using rule 100 (oper3 -> PLUS .)
    IDENT           reduce using rule 100 (oper3 -> PLUS .)
    STRING          reduce using rule 100 (oper3 -> PLUS .)
    NUM             reduce using rule 100 (oper3 -> PLUS .)
    REAL            reduce using rule 100 (oper3 -> PLUS .)
    THIS            reduce using rule 100 (oper3 -> PLUS .)
    NIL             reduce using rule 100 (oper3 -> PLUS .)
    FALSE           reduce using rule 100 (oper3 -> PLUS .)
    TRUE            reduce using rule 100 (oper3 -> PLUS .)


state 104

    (101) oper3 -> MINUS .
    MINUS           reduce using rule 101 (oper3 -> MINUS .)
    NOT             reduce using rule 101 (oper3 -> MINUS .)
    SUPER           reduce using rule 101 (oper3 -> MINUS .)
    LPAREN          reduce using rule 101 (oper3 -> MINUS .)
    IDENT           reduce using rule 101 (oper3 -> MINUS .)
    STRING          reduce using rule 101 (oper3 -> MINUS .)
    NUM             reduce using rule 101 (oper3 -> MINUS .)
    REAL            reduce using rule 101 (oper3 -> MINUS .)
    THIS            reduce using rule 101 (oper3 -> MINUS .)
    NIL             reduce using rule 101 (oper3 -> MINUS .)
    FALSE           reduce using rule 101 (oper3 -> MINUS .)
    TRUE            reduce using rule 101 (oper3 -> MINUS .)


state 105

    (102) factor -> unary _19_repeat .
    PLUS            reduce using rule 102 (factor -> unary _19_repeat .)
    MINUS           reduce using rule 102 (factor -> unary _19_repeat .)
    LE              reduce using rule 102 (factor -> unary _19_repeat .)
    LT              reduce using rule 102 (factor -> unary _19_repeat .)
    GE              reduce using rule 102 (factor -> unary _19_repeat .)
    GT              reduce using rule 102 (factor -> unary _19_repeat .)
    EQ              reduce using rule 102 (factor -> unary _19_repeat .)
    NE              reduce using rule 102 (factor -> unary _19_repeat .)
    AND             reduce using rule 102 (factor -> unary _19_repeat .)
    OR              reduce using rule 102 (factor -> unary _19_repeat .)
    SEMI            reduce using rule 102 (factor -> unary _19_repeat .)
    RPAREN          reduce using rule 102 (factor -> unary _19_repeat .)
    COMMA           reduce using rule 102 (factor -> unary _19_repeat .)


state 106

    (103) _19_repeat -> _19_items .
    (105) _19_items -> _19_items . _19_item
    (107) _19_item -> . oper4 unary
    (108) oper4 -> . TIMES
    (109) oper4 -> . DIVIDE
    PLUS            reduce using rule 103 (_19_repeat -> _19_items .)
    MINUS           reduce using rule 103 (_19_repeat -> _19_items .)
    LE              reduce using rule 103 (_19_repeat -> _19_items .)
    LT              reduce using rule 103 (_19_repeat -> _19_items .)
    GE              reduce using rule 103 (_19_repeat -> _19_items .)
    GT              reduce using rule 103 (_19_repeat -> _19_items .)
    EQ              reduce using rule 103 (_19_repeat -> _19_items .)
    NE              reduce using rule 103 (_19_repeat -> _19_items .)
    AND             reduce using rule 103 (_19_repeat -> _19_items .)
    OR              reduce using rule 103 (_19_repeat -> _19_items .)
    SEMI            reduce using rule 103 (_19_repeat -> _19_items .)
    RPAREN          reduce using rule 103 (_19_repeat -> _19_items .)
    COMMA           reduce using rule 103 (_19_repeat -> _19_items .)
    TIMES           shift and go to state 109
    DIVIDE          shift and go to state 110

    _19_item                       shift and go to state 147
    oper4                          shift and go to state 108

state 107

    (106) _19_items -> _19_item .
    TIMES           reduce using rule 106 (_19_items -> _19_item .)
    DIVIDE          reduce using rule 106 (_19_items -> _19_item .)
    PLUS            reduce using rule 106 (_19_items -> _19_item .)
    MINUS           reduce using rule 106 (_19_items -> _19_item .)
    LE              reduce using rule 106 (_19_items -> _19_item .)
    LT              reduce using rule 106 (_19_items -> _19_item .)
    GE              reduce using rule 106 (_19_items -> _19_item .)
    GT              reduce using rule 106 (_19_items -> _19_item .)
    EQ              reduce using rule 106 (_19_items -> _19_item .)
    NE              reduce using rule 106 (_19_items -> _19_item .)
    AND             reduce using rule 106 (_19_items -> _19_item .)
    OR              reduce using rule 106 (_19_items -> _19_item .)
    SEMI            reduce using rule 106 (_19_items -> _19_item .)
    RPAREN          reduce using rule 106 (_19_items -> _19_item .)
    COMMA           reduce using rule 106 (_19_items -> _19_item .)


state 108

    (107) _19_item -> oper4 . unary
    (110) unary -> . call
    (111) unary -> . oper5 unary
    (114) call -> . primary _20_repeat
    (112) oper5 -> . MINUS
    (113) oper5 -> . NOT
    (124) primary -> . SUPER POINT IDENT
    (125) primary -> . LPAREN expression RPAREN
    (126) primary -> . IDENT
    (127) primary -> . STRING
    (128) primary -> . NUM
    (129) primary -> . REAL
    (130) primary -> . THIS
    (131) primary -> . NIL
    (132) primary -> . FALSE
    (133) primary -> . TRUE
    MINUS           shift and go to state 49
    NOT             shift and go to state 50
    SUPER           shift and go to state 37
    LPAREN          shift and go to state 23
    IDENT           shift and go to state 18
    STRING          shift and go to state 38
    NUM             shift and go to state 39
    REAL            shift and go to state 40
    THIS            shift and go to state 41
    NIL             shift and go to state 42
    FALSE           shift and go to state 43
    TRUE            shift and go to state 44

    unary                          shift and go to state 148
    call                           shift and go to state 112
    oper5                          shift and go to state 48
    primary                        shift and go to state 35

state 109

    (108) oper4 -> TIMES .
    MINUS           reduce using rule 108 (oper4 -> TIMES .)
    NOT             reduce using rule 108 (oper4 -> TIMES .)
    SUPER           reduce using rule 108 (oper4 -> TIMES .)
    LPAREN          reduce using rule 108 (oper4 -> TIMES .)
    IDENT           reduce using rule 108 (oper4 -> TIMES .)
    STRING          reduce using rule 108 (oper4 -> TIMES .)
    NUM             reduce using rule 108 (oper4 -> TIMES .)
    REAL            reduce using rule 108 (oper4 -> TIMES .)
    THIS            reduce using rule 108 (oper4 -> TIMES .)
    NIL             reduce using rule 108 (oper4 -> TIMES .)
    FALSE           reduce using rule 108 (oper4 -> TIMES .)
    TRUE            reduce using rule 108 (oper4 -> TIMES .)


state 110

    (109) oper4 -> DIVIDE .
    MINUS           reduce using rule 109 (oper4 -> DIVIDE .)
    NOT             reduce using rule 109 (oper4 -> DIVIDE .)
    SUPER           reduce using rule 109 (oper4 -> DIVIDE .)
    LPAREN          reduce using rule 109 (oper4 -> DIVIDE .)
    IDENT           reduce using rule 109 (oper4 -> DIVIDE .)
    STRING          reduce using rule 109 (oper4 -> DIVIDE .)
    NUM             reduce using rule 109 (oper4 -> DIVIDE .)
    REAL            reduce using rule 109 (oper4 -> DIVIDE .)
    THIS            reduce using rule 109 (oper4 -> DIVIDE .)
    NIL             reduce using rule 109 (oper4 -> DIVIDE .)
    FALSE           reduce using rule 109 (oper4 -> DIVIDE .)
    TRUE            reduce using rule 109 (oper4 -> DIVIDE .)


state 111

    (111) unary -> oper5 unary .
    TIMES           reduce using rule 111 (unary -> oper5 unary .)
    DIVIDE          reduce using rule 111 (unary -> oper5 unary .)
    PLUS            reduce using rule 111 (unary -> oper5 unary .)
    MINUS           reduce using rule 111 (unary -> oper5 unary .)
    LE              reduce using rule 111 (unary -> oper5 unary .)
    LT              reduce using rule 111 (unary -> oper5 unary .)
    GE              reduce using rule 111 (unary -> oper5 unary .)
    GT              reduce using rule 111 (unary -> oper5 unary .)
    EQ              reduce using rule 111 (unary -> oper5 unary .)
    NE              reduce using rule 111 (unary -> oper5 unary .)
    AND             reduce using rule 111 (unary -> oper5 unary .)
    OR              reduce using rule 111 (unary -> oper5 unary .)
    SEMI            reduce using rule 111 (unary -> oper5 unary .)
    RPAREN          reduce using rule 111 (unary -> oper5 unary .)
    COMMA           reduce using rule 111 (unary -> oper5 unary .)


state 112

    (110) unary -> call .
    TIMES           reduce using rule 110 (unary -> call .)
    DIVIDE          reduce using rule 110 (unary -> call .)
    PLUS            reduce using rule 110 (unary -> call .)
    MINUS           reduce using rule 110 (unary -> call .)
    LE              reduce using rule 110 (unary -> call .)
    LT              reduce using rule 110 (unary -> call .)
    GE              reduce using rule 110 (unary -> call .)
    GT              reduce using rule 110 (unary -> call .)
    EQ              reduce using rule 110 (unary -> call .)
    NE              reduce using rule 110 (unary -> call .)
    AND             reduce using rule 110 (unary -> call .)
    OR              reduce using rule 110 (unary -> call .)
    SEMI            reduce using rule 110 (unary -> call .)
    RPAREN          reduce using rule 110 (unary -> call .)
    COMMA           reduce using rule 110 (unary -> call .)


state 113

    (20) var_declaration -> VAR IDENT _4_optional . SEMI
    SEMI            shift and go to state 149


state 114

    (21) _4_optional -> ASSIGN . expression
    (59) expression -> . assignment
    (60) assignment -> . logic_or
    (61) assignment -> . _13_optional IDENT ASSIGN expression
    (64) logic_or -> . logic_and _14_repeat
    (62) _13_optional -> . call POINT
    (63) _13_optional -> .
    (70) logic_and -> . equality _15_repeat
    (114) call -> . primary _20_repeat
    (76) equality -> . comparison _16_repeat
    (124) primary -> . SUPER POINT IDENT
    (125) primary -> . LPAREN expression RPAREN
    (126) primary -> . IDENT
    (127) primary -> . STRING
    (128) primary -> . NUM
    (129) primary -> . REAL
    (130) primary -> . THIS
    (131) primary -> . NIL
    (132) primary -> . FALSE
    (133) primary -> . TRUE
    (84) comparison -> . term _17_repeat
    (94) term -> . factor _18_repeat
    (102) factor -> . unary _19_repeat
    (110) unary -> . call
    (111) unary -> . oper5 unary
    (112) oper5 -> . MINUS
    (113) oper5 -> . NOT
  ! shift/reduce conflict for IDENT resolved as shift
    SUPER           shift and go to state 37
    LPAREN          shift and go to state 23
    IDENT           shift and go to state 18
    STRING          shift and go to state 38
    NUM             shift and go to state 39
    REAL            shift and go to state 40
    THIS            shift and go to state 41
    NIL             shift and go to state 42
    FALSE           shift and go to state 43
    TRUE            shift and go to state 44
    MINUS           shift and go to state 49
    NOT             shift and go to state 50

    expression                     shift and go to state 150
    assignment                     shift and go to state 29
    logic_or                       shift and go to state 30
    _13_optional                   shift and go to state 31
    logic_and                      shift and go to state 32
    call                           shift and go to state 33
    equality                       shift and go to state 34
    primary                        shift and go to state 35
    comparison                     shift and go to state 36
    term                           shift and go to state 45
    factor                         shift and go to state 46
    unary                          shift and go to state 47
    oper5                          shift and go to state 48

state 115

    (134) function -> IDENT LPAREN . _22_optional RPAREN block
    (135) _22_optional -> . parameters
    (136) _22_optional -> .
    (137) parameters -> . IDENT _23_repeat
    RPAREN          reduce using rule 136 (_22_optional -> .)
    IDENT           shift and go to state 151

    _22_optional                   shift and go to state 152
    parameters                     shift and go to state 153

state 116

    (11) class_declaration -> CLASS IDENT _2_optional . LBRACE _3_repeat RBRACE
    LBRACE          shift and go to state 154


state 117

    (12) _2_optional -> LT . IDENT
    IDENT           shift and go to state 155


state 118

    (53) block -> LBRACE _12_repeat RBRACE .
    VAR             reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    FUN             reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    CLASS           reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    LBRACE          reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    WHILE           reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    RETURN          reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    PRINT           reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    IF              reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    FOR             reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    SUPER           reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    LPAREN          reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    IDENT           reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    STRING          reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    NUM             reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    REAL            reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    THIS            reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    NIL             reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    FALSE           reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    TRUE            reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    MINUS           reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    NOT             reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    $end            reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    RBRACE          reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)
    ELSE            reduce using rule 53 (block -> LBRACE _12_repeat RBRACE .)


state 119

    (56) _12_items -> _12_items _12_item .
    VAR             reduce using rule 56 (_12_items -> _12_items _12_item .)
    FUN             reduce using rule 56 (_12_items -> _12_items _12_item .)
    CLASS           reduce using rule 56 (_12_items -> _12_items _12_item .)
    LBRACE          reduce using rule 56 (_12_items -> _12_items _12_item .)
    WHILE           reduce using rule 56 (_12_items -> _12_items _12_item .)
    RETURN          reduce using rule 56 (_12_items -> _12_items _12_item .)
    PRINT           reduce using rule 56 (_12_items -> _12_items _12_item .)
    IF              reduce using rule 56 (_12_items -> _12_items _12_item .)
    FOR             reduce using rule 56 (_12_items -> _12_items _12_item .)
    SUPER           reduce using rule 56 (_12_items -> _12_items _12_item .)
    LPAREN          reduce using rule 56 (_12_items -> _12_items _12_item .)
    IDENT           reduce using rule 56 (_12_items -> _12_items _12_item .)
    STRING          reduce using rule 56 (_12_items -> _12_items _12_item .)
    NUM             reduce using rule 56 (_12_items -> _12_items _12_item .)
    REAL            reduce using rule 56 (_12_items -> _12_items _12_item .)
    THIS            reduce using rule 56 (_12_items -> _12_items _12_item .)
    NIL             reduce using rule 56 (_12_items -> _12_items _12_item .)
    FALSE           reduce using rule 56 (_12_items -> _12_items _12_item .)
    TRUE            reduce using rule 56 (_12_items -> _12_items _12_item .)
    MINUS           reduce using rule 56 (_12_items -> _12_items _12_item .)
    NOT             reduce using rule 56 (_12_items -> _12_items _12_item .)
    RBRACE          reduce using rule 56 (_12_items -> _12_items _12_item .)


state 120

    (52) while_stmt -> WHILE LPAREN expression . RPAREN statement
    RPAREN          shift and go to state 156


state 121

    (125) primary -> LPAREN expression RPAREN .
    POINT           reduce using rule 125 (primary -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 125 (primary -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 125 (primary -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 125 (primary -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 125 (primary -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 125 (primary -> LPAREN expression RPAREN .)
    LE              reduce using rule 125 (primary -> LPAREN expression RPAREN .)
    LT              reduce using rule 125 (primary -> LPAREN expression RPAREN .)
    GE              reduce using rule 125 (primary -> LPAREN expression RPAREN .)
    GT              reduce using rule 125 (primary -> LPAREN expression RPAREN .)
    EQ              reduce using rule 125 (primary -> LPAREN expression RPAREN .)
    NE              reduce using rule 125 (primary -> LPAREN expression RPAREN .)
    AND             reduce using rule 125 (primary -> LPAREN expression RPAREN .)
    OR              reduce using rule 125 (primary -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 125 (primary -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 125 (primary -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 125 (primary -> LPAREN expression RPAREN .)


state 122

    (49) return_stmt -> RETURN _11_optional SEMI .
    VAR             reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    FUN             reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    CLASS           reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    LBRACE          reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    WHILE           reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    RETURN          reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    PRINT           reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    IF              reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    FOR             reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    SUPER           reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    LPAREN          reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    IDENT           reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    STRING          reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    NUM             reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    REAL            reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    THIS            reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    NIL             reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    FALSE           reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    TRUE            reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    MINUS           reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    NOT             reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    $end            reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    RBRACE          reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)
    ELSE            reduce using rule 49 (return_stmt -> RETURN _11_optional SEMI .)


state 123

    (48) print_stmt -> PRINT expression SEMI .
    VAR             reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    FUN             reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    CLASS           reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    LBRACE          reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    WHILE           reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    RETURN          reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    PRINT           reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    IF              reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    FOR             reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    SUPER           reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    LPAREN          reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    IDENT           reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    STRING          reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    NUM             reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    REAL            reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    THIS            reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    NIL             reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    FALSE           reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    TRUE            reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    MINUS           reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    NOT             reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    $end            reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    RBRACE          reduce using rule 48 (print_stmt -> PRINT expression SEMI .)
    ELSE            reduce using rule 48 (print_stmt -> PRINT expression SEMI .)


state 124

    (43) if_stmt -> IF LPAREN _9_optional . RPAREN statement _10_optional
    RPAREN          shift and go to state 157


state 125

    (44) _9_optional -> expression .
    RPAREN          reduce using rule 44 (_9_optional -> expression .)


state 126

    (31) for_stmt -> FOR LPAREN SEMI . _5_optional SEMI _6_optional RPAREN statement
    (32) _5_optional -> . expression
    (33) _5_optional -> .
    (59) expression -> . assignment
    (60) assignment -> . logic_or
    (61) assignment -> . _13_optional IDENT ASSIGN expression
    (64) logic_or -> . logic_and _14_repeat
    (62) _13_optional -> . call POINT
    (63) _13_optional -> .
    (70) logic_and -> . equality _15_repeat
    (114) call -> . primary _20_repeat
    (76) equality -> . comparison _16_repeat
    (124) primary -> . SUPER POINT IDENT
    (125) primary -> . LPAREN expression RPAREN
    (126) primary -> . IDENT
    (127) primary -> . STRING
    (128) primary -> . NUM
    (129) primary -> . REAL
    (130) primary -> . THIS
    (131) primary -> . NIL
    (132) primary -> . FALSE
    (133) primary -> . TRUE
    (84) comparison -> . term _17_repeat
    (94) term -> . factor _18_repeat
    (102) factor -> . unary _19_repeat
    (110) unary -> . call
    (111) unary -> . oper5 unary
    (112) oper5 -> . MINUS
    (113) oper5 -> . NOT
  ! shift/reduce conflict for IDENT resolved as shift
    SEMI            reduce using rule 33 (_5_optional -> .)
    SUPER           shift and go to state 37
    LPAREN          shift and go to state 23
    IDENT           shift and go to state 18
    STRING          shift and go to state 38
    NUM             shift and go to state 39
    REAL            shift and go to state 40
    THIS            shift and go to state 41
    NIL             shift and go to state 42
    FALSE           shift and go to state 43
    TRUE            shift and go to state 44
    MINUS           shift and go to state 49
    NOT             shift and go to state 50

    _5_optional                    shift and go to state 158
    expression                     shift and go to state 159
    assignment                     shift and go to state 29
    logic_or                       shift and go to state 30
    _13_optional                   shift and go to state 31
    logic_and                      shift and go to state 32
    call                           shift and go to state 33
    equality                       shift and go to state 34
    primary                        shift and go to state 35
    comparison                     shift and go to state 36
    term                           shift and go to state 45
    factor                         shift and go to state 46
    unary                          shift and go to state 47
    oper5                          shift and go to state 48

state 127

    (36) for_stmt -> FOR LPAREN for_initialize . _7_optional SEMI _8_optional RPAREN statement
    (37) _7_optional -> . expression
    (38) _7_optional -> .
    (59) expression -> . assignment
    (60) assignment -> . logic_or
    (61) assignment -> . _13_optional IDENT ASSIGN expression
    (64) logic_or -> . logic_and _14_repeat
    (62) _13_optional -> . call POINT
    (63) _13_optional -> .
    (70) logic_and -> . equality _15_repeat
    (114) call -> . primary _20_repeat
    (76) equality -> . comparison _16_repeat
    (124) primary -> . SUPER POINT IDENT
    (125) primary -> . LPAREN expression RPAREN
    (126) primary -> . IDENT
    (127) primary -> . STRING
    (128) primary -> . NUM
    (129) primary -> . REAL
    (130) primary -> . THIS
    (131) primary -> . NIL
    (132) primary -> . FALSE
    (133) primary -> . TRUE
    (84) comparison -> . term _17_repeat
    (94) term -> . factor _18_repeat
    (102) factor -> . unary _19_repeat
    (110) unary -> . call
    (111) unary -> . oper5 unary
    (112) oper5 -> . MINUS
    (113) oper5 -> . NOT
  ! shift/reduce conflict for IDENT resolved as shift
    SEMI            reduce using rule 38 (_7_optional -> .)
    SUPER           shift and go to state 37
    LPAREN          shift and go to state 23
    IDENT           shift and go to state 18
    STRING          shift and go to state 38
    NUM             shift and go to state 39
    REAL            shift and go to state 40
    THIS            shift and go to state 41
    NIL             shift and go to state 42
    FALSE           shift and go to state 43
    TRUE            shift and go to state 44
    MINUS           shift and go to state 49
    NOT             shift and go to state 50

    _7_optional                    shift and go to state 160
    expression                     shift and go to state 161
    assignment                     shift and go to state 29
    logic_or                       shift and go to state 30
    _13_optional                   shift and go to state 31
    logic_and                      shift and go to state 32
    call                           shift and go to state 33
    equality                       shift and go to state 34
    primary                        shift and go to state 35
    comparison                     shift and go to state 36
    term                           shift and go to state 45
    factor                         shift and go to state 46
    unary                          shift and go to state 47
    oper5                          shift and go to state 48

state 128

    (41) for_initialize -> expr_stmt .
    SUPER           reduce using rule 41 (for_initialize -> expr_stmt .)
    LPAREN          reduce using rule 41 (for_initialize -> expr_stmt .)
    IDENT           reduce using rule 41 (for_initialize -> expr_stmt .)
    STRING          reduce using rule 41 (for_initialize -> expr_stmt .)
    NUM             reduce using rule 41 (for_initialize -> expr_stmt .)
    REAL            reduce using rule 41 (for_initialize -> expr_stmt .)
    THIS            reduce using rule 41 (for_initialize -> expr_stmt .)
    NIL             reduce using rule 41 (for_initialize -> expr_stmt .)
    FALSE           reduce using rule 41 (for_initialize -> expr_stmt .)
    TRUE            reduce using rule 41 (for_initialize -> expr_stmt .)
    MINUS           reduce using rule 41 (for_initialize -> expr_stmt .)
    NOT             reduce using rule 41 (for_initialize -> expr_stmt .)
    SEMI            reduce using rule 41 (for_initialize -> expr_stmt .)


state 129

    (42) for_initialize -> var_declaration .
    SUPER           reduce using rule 42 (for_initialize -> var_declaration .)
    LPAREN          reduce using rule 42 (for_initialize -> var_declaration .)
    IDENT           reduce using rule 42 (for_initialize -> var_declaration .)
    STRING          reduce using rule 42 (for_initialize -> var_declaration .)
    NUM             reduce using rule 42 (for_initialize -> var_declaration .)
    REAL            reduce using rule 42 (for_initialize -> var_declaration .)
    THIS            reduce using rule 42 (for_initialize -> var_declaration .)
    NIL             reduce using rule 42 (for_initialize -> var_declaration .)
    FALSE           reduce using rule 42 (for_initialize -> var_declaration .)
    TRUE            reduce using rule 42 (for_initialize -> var_declaration .)
    MINUS           reduce using rule 42 (for_initialize -> var_declaration .)
    NOT             reduce using rule 42 (for_initialize -> var_declaration .)
    SEMI            reduce using rule 42 (for_initialize -> var_declaration .)


state 130

    (61) assignment -> _13_optional IDENT ASSIGN . expression
    (59) expression -> . assignment
    (60) assignment -> . logic_or
    (61) assignment -> . _13_optional IDENT ASSIGN expression
    (64) logic_or -> . logic_and _14_repeat
    (62) _13_optional -> . call POINT
    (63) _13_optional -> .
    (70) logic_and -> . equality _15_repeat
    (114) call -> . primary _20_repeat
    (76) equality -> . comparison _16_repeat
    (124) primary -> . SUPER POINT IDENT
    (125) primary -> . LPAREN expression RPAREN
    (126) primary -> . IDENT
    (127) primary -> . STRING
    (128) primary -> . NUM
    (129) primary -> . REAL
    (130) primary -> . THIS
    (131) primary -> . NIL
    (132) primary -> . FALSE
    (133) primary -> . TRUE
    (84) comparison -> . term _17_repeat
    (94) term -> . factor _18_repeat
    (102) factor -> . unary _19_repeat
    (110) unary -> . call
    (111) unary -> . oper5 unary
    (112) oper5 -> . MINUS
    (113) oper5 -> . NOT
  ! shift/reduce conflict for IDENT resolved as shift
    SUPER           shift and go to state 37
    LPAREN          shift and go to state 23
    IDENT           shift and go to state 18
    STRING          shift and go to state 38
    NUM             shift and go to state 39
    REAL            shift and go to state 40
    THIS            shift and go to state 41
    NIL             shift and go to state 42
    FALSE           shift and go to state 43
    TRUE            shift and go to state 44
    MINUS           shift and go to state 49
    NOT             shift and go to state 50

    _13_optional                   shift and go to state 31
    expression                     shift and go to state 162
    assignment                     shift and go to state 29
    logic_or                       shift and go to state 30
    logic_and                      shift and go to state 32
    call                           shift and go to state 33
    equality                       shift and go to state 34
    primary                        shift and go to state 35
    comparison                     shift and go to state 36
    term                           shift and go to state 45
    factor                         shift and go to state 46
    unary                          shift and go to state 47
    oper5                          shift and go to state 48

state 131

    (67) _14_items -> _14_items _14_item .
    OR              reduce using rule 67 (_14_items -> _14_items _14_item .)
    SEMI            reduce using rule 67 (_14_items -> _14_items _14_item .)
    RPAREN          reduce using rule 67 (_14_items -> _14_items _14_item .)
    COMMA           reduce using rule 67 (_14_items -> _14_items _14_item .)


state 132

    (69) _14_item -> OR logic_and .
    OR              reduce using rule 69 (_14_item -> OR logic_and .)
    SEMI            reduce using rule 69 (_14_item -> OR logic_and .)
    RPAREN          reduce using rule 69 (_14_item -> OR logic_and .)
    COMMA           reduce using rule 69 (_14_item -> OR logic_and .)


state 133

    (73) _15_items -> _15_items _15_item .
    AND             reduce using rule 73 (_15_items -> _15_items _15_item .)
    OR              reduce using rule 73 (_15_items -> _15_items _15_item .)
    SEMI            reduce using rule 73 (_15_items -> _15_items _15_item .)
    RPAREN          reduce using rule 73 (_15_items -> _15_items _15_item .)
    COMMA           reduce using rule 73 (_15_items -> _15_items _15_item .)


state 134

    (75) _15_item -> AND equality .
    AND             reduce using rule 75 (_15_item -> AND equality .)
    OR              reduce using rule 75 (_15_item -> AND equality .)
    SEMI            reduce using rule 75 (_15_item -> AND equality .)
    RPAREN          reduce using rule 75 (_15_item -> AND equality .)
    COMMA           reduce using rule 75 (_15_item -> AND equality .)


state 135

    (117) _20_items -> _20_items _20_item .
    POINT           reduce using rule 117 (_20_items -> _20_items _20_item .)
    LPAREN          reduce using rule 117 (_20_items -> _20_items _20_item .)
    TIMES           reduce using rule 117 (_20_items -> _20_items _20_item .)
    DIVIDE          reduce using rule 117 (_20_items -> _20_items _20_item .)
    PLUS            reduce using rule 117 (_20_items -> _20_items _20_item .)
    MINUS           reduce using rule 117 (_20_items -> _20_items _20_item .)
    LE              reduce using rule 117 (_20_items -> _20_items _20_item .)
    LT              reduce using rule 117 (_20_items -> _20_items _20_item .)
    GE              reduce using rule 117 (_20_items -> _20_items _20_item .)
    GT              reduce using rule 117 (_20_items -> _20_items _20_item .)
    EQ              reduce using rule 117 (_20_items -> _20_items _20_item .)
    NE              reduce using rule 117 (_20_items -> _20_items _20_item .)
    AND             reduce using rule 117 (_20_items -> _20_items _20_item .)
    OR              reduce using rule 117 (_20_items -> _20_items _20_item .)
    SEMI            reduce using rule 117 (_20_items -> _20_items _20_item .)
    RPAREN          reduce using rule 117 (_20_items -> _20_items _20_item .)
    COMMA           reduce using rule 117 (_20_items -> _20_items _20_item .)


state 136

    (120) oper6 -> POINT IDENT .
    POINT           reduce using rule 120 (oper6 -> POINT IDENT .)
    LPAREN          reduce using rule 120 (oper6 -> POINT IDENT .)
    TIMES           reduce using rule 120 (oper6 -> POINT IDENT .)
    DIVIDE          reduce using rule 120 (oper6 -> POINT IDENT .)
    PLUS            reduce using rule 120 (oper6 -> POINT IDENT .)
    MINUS           reduce using rule 120 (oper6 -> POINT IDENT .)
    LE              reduce using rule 120 (oper6 -> POINT IDENT .)
    LT              reduce using rule 120 (oper6 -> POINT IDENT .)
    GE              reduce using rule 120 (oper6 -> POINT IDENT .)
    GT              reduce using rule 120 (oper6 -> POINT IDENT .)
    EQ              reduce using rule 120 (oper6 -> POINT IDENT .)
    NE              reduce using rule 120 (oper6 -> POINT IDENT .)
    AND             reduce using rule 120 (oper6 -> POINT IDENT .)
    OR              reduce using rule 120 (oper6 -> POINT IDENT .)
    SEMI            reduce using rule 120 (oper6 -> POINT IDENT .)
    RPAREN          reduce using rule 120 (oper6 -> POINT IDENT .)
    COMMA           reduce using rule 120 (oper6 -> POINT IDENT .)


state 137

    (121) oper6 -> LPAREN _21_optional . RPAREN
    RPAREN          shift and go to state 163


state 138

    (122) _21_optional -> arguments .
    RPAREN          reduce using rule 122 (_21_optional -> arguments .)


state 139

    (143) arguments -> expression . _24_repeat
    (144) _24_repeat -> . _24_items
    (145) _24_repeat -> .
    (146) _24_items -> . _24_items _24_item
    (147) _24_items -> . _24_item
    (148) _24_item -> . COMMA expression
    RPAREN          reduce using rule 145 (_24_repeat -> .)
    COMMA           shift and go to state 167

    _24_repeat                     shift and go to state 164
    _24_items                      shift and go to state 165
    _24_item                       shift and go to state 166

state 140

    (79) _16_items -> _16_items _16_item .
    EQ              reduce using rule 79 (_16_items -> _16_items _16_item .)
    NE              reduce using rule 79 (_16_items -> _16_items _16_item .)
    AND             reduce using rule 79 (_16_items -> _16_items _16_item .)
    OR              reduce using rule 79 (_16_items -> _16_items _16_item .)
    SEMI            reduce using rule 79 (_16_items -> _16_items _16_item .)
    RPAREN          reduce using rule 79 (_16_items -> _16_items _16_item .)
    COMMA           reduce using rule 79 (_16_items -> _16_items _16_item .)


state 141

    (81) _16_item -> oper1 comparison .
    EQ              reduce using rule 81 (_16_item -> oper1 comparison .)
    NE              reduce using rule 81 (_16_item -> oper1 comparison .)
    AND             reduce using rule 81 (_16_item -> oper1 comparison .)
    OR              reduce using rule 81 (_16_item -> oper1 comparison .)
    SEMI            reduce using rule 81 (_16_item -> oper1 comparison .)
    RPAREN          reduce using rule 81 (_16_item -> oper1 comparison .)
    COMMA           reduce using rule 81 (_16_item -> oper1 comparison .)


state 142

    (124) primary -> SUPER POINT IDENT .
    POINT           reduce using rule 124 (primary -> SUPER POINT IDENT .)
    LPAREN          reduce using rule 124 (primary -> SUPER POINT IDENT .)
    TIMES           reduce using rule 124 (primary -> SUPER POINT IDENT .)
    DIVIDE          reduce using rule 124 (primary -> SUPER POINT IDENT .)
    PLUS            reduce using rule 124 (primary -> SUPER POINT IDENT .)
    MINUS           reduce using rule 124 (primary -> SUPER POINT IDENT .)
    LE              reduce using rule 124 (primary -> SUPER POINT IDENT .)
    LT              reduce using rule 124 (primary -> SUPER POINT IDENT .)
    GE              reduce using rule 124 (primary -> SUPER POINT IDENT .)
    GT              reduce using rule 124 (primary -> SUPER POINT IDENT .)
    EQ              reduce using rule 124 (primary -> SUPER POINT IDENT .)
    NE              reduce using rule 124 (primary -> SUPER POINT IDENT .)
    AND             reduce using rule 124 (primary -> SUPER POINT IDENT .)
    OR              reduce using rule 124 (primary -> SUPER POINT IDENT .)
    SEMI            reduce using rule 124 (primary -> SUPER POINT IDENT .)
    RPAREN          reduce using rule 124 (primary -> SUPER POINT IDENT .)
    COMMA           reduce using rule 124 (primary -> SUPER POINT IDENT .)


state 143

    (87) _17_items -> _17_items _17_item .
    LE              reduce using rule 87 (_17_items -> _17_items _17_item .)
    LT              reduce using rule 87 (_17_items -> _17_items _17_item .)
    GE              reduce using rule 87 (_17_items -> _17_items _17_item .)
    GT              reduce using rule 87 (_17_items -> _17_items _17_item .)
    EQ              reduce using rule 87 (_17_items -> _17_items _17_item .)
    NE              reduce using rule 87 (_17_items -> _17_items _17_item .)
    AND             reduce using rule 87 (_17_items -> _17_items _17_item .)
    OR              reduce using rule 87 (_17_items -> _17_items _17_item .)
    SEMI            reduce using rule 87 (_17_items -> _17_items _17_item .)
    RPAREN          reduce using rule 87 (_17_items -> _17_items _17_item .)
    COMMA           reduce using rule 87 (_17_items -> _17_items _17_item .)


state 144

    (89) _17_item -> oper2 term .
    LE              reduce using rule 89 (_17_item -> oper2 term .)
    LT              reduce using rule 89 (_17_item -> oper2 term .)
    GE              reduce using rule 89 (_17_item -> oper2 term .)
    GT              reduce using rule 89 (_17_item -> oper2 term .)
    EQ              reduce using rule 89 (_17_item -> oper2 term .)
    NE              reduce using rule 89 (_17_item -> oper2 term .)
    AND             reduce using rule 89 (_17_item -> oper2 term .)
    OR              reduce using rule 89 (_17_item -> oper2 term .)
    SEMI            reduce using rule 89 (_17_item -> oper2 term .)
    RPAREN          reduce using rule 89 (_17_item -> oper2 term .)
    COMMA           reduce using rule 89 (_17_item -> oper2 term .)


state 145

    (97) _18_items -> _18_items _18_item .
    PLUS            reduce using rule 97 (_18_items -> _18_items _18_item .)
    MINUS           reduce using rule 97 (_18_items -> _18_items _18_item .)
    LE              reduce using rule 97 (_18_items -> _18_items _18_item .)
    LT              reduce using rule 97 (_18_items -> _18_items _18_item .)
    GE              reduce using rule 97 (_18_items -> _18_items _18_item .)
    GT              reduce using rule 97 (_18_items -> _18_items _18_item .)
    EQ              reduce using rule 97 (_18_items -> _18_items _18_item .)
    NE              reduce using rule 97 (_18_items -> _18_items _18_item .)
    AND             reduce using rule 97 (_18_items -> _18_items _18_item .)
    OR              reduce using rule 97 (_18_items -> _18_items _18_item .)
    SEMI            reduce using rule 97 (_18_items -> _18_items _18_item .)
    RPAREN          reduce using rule 97 (_18_items -> _18_items _18_item .)
    COMMA           reduce using rule 97 (_18_items -> _18_items _18_item .)


state 146

    (99) _18_item -> oper3 factor .
    PLUS            reduce using rule 99 (_18_item -> oper3 factor .)
    MINUS           reduce using rule 99 (_18_item -> oper3 factor .)
    LE              reduce using rule 99 (_18_item -> oper3 factor .)
    LT              reduce using rule 99 (_18_item -> oper3 factor .)
    GE              reduce using rule 99 (_18_item -> oper3 factor .)
    GT              reduce using rule 99 (_18_item -> oper3 factor .)
    EQ              reduce using rule 99 (_18_item -> oper3 factor .)
    NE              reduce using rule 99 (_18_item -> oper3 factor .)
    AND             reduce using rule 99 (_18_item -> oper3 factor .)
    OR              reduce using rule 99 (_18_item -> oper3 factor .)
    SEMI            reduce using rule 99 (_18_item -> oper3 factor .)
    RPAREN          reduce using rule 99 (_18_item -> oper3 factor .)
    COMMA           reduce using rule 99 (_18_item -> oper3 factor .)


state 147

    (105) _19_items -> _19_items _19_item .
    TIMES           reduce using rule 105 (_19_items -> _19_items _19_item .)
    DIVIDE          reduce using rule 105 (_19_items -> _19_items _19_item .)
    PLUS            reduce using rule 105 (_19_items -> _19_items _19_item .)
    MINUS           reduce using rule 105 (_19_items -> _19_items _19_item .)
    LE              reduce using rule 105 (_19_items -> _19_items _19_item .)
    LT              reduce using rule 105 (_19_items -> _19_items _19_item .)
    GE              reduce using rule 105 (_19_items -> _19_items _19_item .)
    GT              reduce using rule 105 (_19_items -> _19_items _19_item .)
    EQ              reduce using rule 105 (_19_items -> _19_items _19_item .)
    NE              reduce using rule 105 (_19_items -> _19_items _19_item .)
    AND             reduce using rule 105 (_19_items -> _19_items _19_item .)
    OR              reduce using rule 105 (_19_items -> _19_items _19_item .)
    SEMI            reduce using rule 105 (_19_items -> _19_items _19_item .)
    RPAREN          reduce using rule 105 (_19_items -> _19_items _19_item .)
    COMMA           reduce using rule 105 (_19_items -> _19_items _19_item .)


state 148

    (107) _19_item -> oper4 unary .
    TIMES           reduce using rule 107 (_19_item -> oper4 unary .)
    DIVIDE          reduce using rule 107 (_19_item -> oper4 unary .)
    PLUS            reduce using rule 107 (_19_item -> oper4 unary .)
    MINUS           reduce using rule 107 (_19_item -> oper4 unary .)
    LE              reduce using rule 107 (_19_item -> oper4 unary .)
    LT              reduce using rule 107 (_19_item -> oper4 unary .)
    GE              reduce using rule 107 (_19_item -> oper4 unary .)
    GT              reduce using rule 107 (_19_item -> oper4 unary .)
    EQ              reduce using rule 107 (_19_item -> oper4 unary .)
    NE              reduce using rule 107 (_19_item -> oper4 unary .)
    AND             reduce using rule 107 (_19_item -> oper4 unary .)
    OR              reduce using rule 107 (_19_item -> oper4 unary .)
    SEMI            reduce using rule 107 (_19_item -> oper4 unary .)
    RPAREN          reduce using rule 107 (_19_item -> oper4 unary .)
    COMMA           reduce using rule 107 (_19_item -> oper4 unary .)


state 149

    (20) var_declaration -> VAR IDENT _4_optional SEMI .
    VAR             reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    FUN             reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    CLASS           reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    LBRACE          reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    WHILE           reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    RETURN          reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    PRINT           reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    IF              reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    FOR             reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    SUPER           reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    LPAREN          reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    IDENT           reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    STRING          reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    NUM             reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    REAL            reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    THIS            reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    NIL             reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    FALSE           reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    TRUE            reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    MINUS           reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    NOT             reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    $end            reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    RBRACE          reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    SEMI            reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)


state 150

    (21) _4_optional -> ASSIGN expression .
    SEMI            reduce using rule 21 (_4_optional -> ASSIGN expression .)


state 151

    (137) parameters -> IDENT . _23_repeat
    (138) _23_repeat -> . _23_items
    (139) _23_repeat -> .
    (140) _23_items -> . _23_items _23_item
    (141) _23_items -> . _23_item
    (142) _23_item -> . COMMA IDENT
    RPAREN          reduce using rule 139 (_23_repeat -> .)
    COMMA           shift and go to state 171

    _23_repeat                     shift and go to state 168
    _23_items                      shift and go to state 169
    _23_item                       shift and go to state 170

state 152

    (134) function -> IDENT LPAREN _22_optional . RPAREN block
    RPAREN          shift and go to state 172


state 153

    (135) _22_optional -> parameters .
    RPAREN          reduce using rule 135 (_22_optional -> parameters .)


state 154

    (11) class_declaration -> CLASS IDENT _2_optional LBRACE . _3_repeat RBRACE
    (14) _3_repeat -> . _3_items
    (15) _3_repeat -> .
    (16) _3_items -> . _3_items _3_item
    (17) _3_items -> . _3_item
    (18) _3_item -> . function
    (134) function -> . IDENT LPAREN _22_optional RPAREN block
    RBRACE          reduce using rule 15 (_3_repeat -> .)
    IDENT           shift and go to state 54

    _3_repeat                      shift and go to state 173
    _3_items                       shift and go to state 174
    _3_item                        shift and go to state 175
    function                       shift and go to state 176

state 155

    (12) _2_optional -> LT IDENT .
    LBRACE          reduce using rule 12 (_2_optional -> LT IDENT .)


state 156

    (52) while_stmt -> WHILE LPAREN expression RPAREN . statement
    (23) statement -> . block
    (24) statement -> . while_stmt
    (25) statement -> . return_stmt
    (26) statement -> . print_stmt
    (27) statement -> . if_stmt
    (28) statement -> . for_stmt
    (29) statement -> . expr_stmt
    (53) block -> . LBRACE _12_repeat RBRACE
    (52) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (49) return_stmt -> . RETURN _11_optional SEMI
    (48) print_stmt -> . PRINT expression SEMI
    (43) if_stmt -> . IF LPAREN _9_optional RPAREN statement _10_optional
    (31) for_stmt -> . FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
    (36) for_stmt -> . FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
    (30) expr_stmt -> . expression SEMI
    (59) expression -> . assignment
    (60) assignment -> . logic_or
    (61) assignment -> . _13_optional IDENT ASSIGN expression
    (64) logic_or -> . logic_and _14_repeat
    (62) _13_optional -> . call POINT
    (63) _13_optional -> .
    (70) logic_and -> . equality _15_repeat
    (114) call -> . primary _20_repeat
    (76) equality -> . comparison _16_repeat
    (124) primary -> . SUPER POINT IDENT
    (125) primary -> . LPAREN expression RPAREN
    (126) primary -> . IDENT
    (127) primary -> . STRING
    (128) primary -> . NUM
    (129) primary -> . REAL
    (130) primary -> . THIS
    (131) primary -> . NIL
    (132) primary -> . FALSE
    (133) primary -> . TRUE
    (84) comparison -> . term _17_repeat
    (94) term -> . factor _18_repeat
    (102) factor -> . unary _19_repeat
    (110) unary -> . call
    (111) unary -> . oper5 unary
    (112) oper5 -> . MINUS
    (113) oper5 -> . NOT
  ! shift/reduce conflict for IDENT resolved as shift
    LBRACE          shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    FOR             shift and go to state 28
    SUPER           shift and go to state 37
    LPAREN          shift and go to state 23
    IDENT           shift and go to state 18
    STRING          shift and go to state 38
    NUM             shift and go to state 39
    REAL            shift and go to state 40
    THIS            shift and go to state 41
    NIL             shift and go to state 42
    FALSE           shift and go to state 43
    TRUE            shift and go to state 44
    MINUS           shift and go to state 49
    NOT             shift and go to state 50

    expression                     shift and go to state 24
    statement                      shift and go to state 177
    block                          shift and go to state 10
    while_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    print_stmt                     shift and go to state 13
    if_stmt                        shift and go to state 14
    for_stmt                       shift and go to state 15
    expr_stmt                      shift and go to state 16
    assignment                     shift and go to state 29
    logic_or                       shift and go to state 30
    _13_optional                   shift and go to state 31
    logic_and                      shift and go to state 32
    call                           shift and go to state 33
    equality                       shift and go to state 34
    primary                        shift and go to state 35
    comparison                     shift and go to state 36
    term                           shift and go to state 45
    factor                         shift and go to state 46
    unary                          shift and go to state 47
    oper5                          shift and go to state 48

state 157

    (43) if_stmt -> IF LPAREN _9_optional RPAREN . statement _10_optional
    (23) statement -> . block
    (24) statement -> . while_stmt
    (25) statement -> . return_stmt
    (26) statement -> . print_stmt
    (27) statement -> . if_stmt
    (28) statement -> . for_stmt
    (29) statement -> . expr_stmt
    (53) block -> . LBRACE _12_repeat RBRACE
    (52) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (49) return_stmt -> . RETURN _11_optional SEMI
    (48) print_stmt -> . PRINT expression SEMI
    (43) if_stmt -> . IF LPAREN _9_optional RPAREN statement _10_optional
    (31) for_stmt -> . FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
    (36) for_stmt -> . FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
    (30) expr_stmt -> . expression SEMI
    (59) expression -> . assignment
    (60) assignment -> . logic_or
    (61) assignment -> . _13_optional IDENT ASSIGN expression
    (64) logic_or -> . logic_and _14_repeat
    (62) _13_optional -> . call POINT
    (63) _13_optional -> .
    (70) logic_and -> . equality _15_repeat
    (114) call -> . primary _20_repeat
    (76) equality -> . comparison _16_repeat
    (124) primary -> . SUPER POINT IDENT
    (125) primary -> . LPAREN expression RPAREN
    (126) primary -> . IDENT
    (127) primary -> . STRING
    (128) primary -> . NUM
    (129) primary -> . REAL
    (130) primary -> . THIS
    (131) primary -> . NIL
    (132) primary -> . FALSE
    (133) primary -> . TRUE
    (84) comparison -> . term _17_repeat
    (94) term -> . factor _18_repeat
    (102) factor -> . unary _19_repeat
    (110) unary -> . call
    (111) unary -> . oper5 unary
    (112) oper5 -> . MINUS
    (113) oper5 -> . NOT
  ! shift/reduce conflict for IDENT resolved as shift
    LBRACE          shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    FOR             shift and go to state 28
    SUPER           shift and go to state 37
    LPAREN          shift and go to state 23
    IDENT           shift and go to state 18
    STRING          shift and go to state 38
    NUM             shift and go to state 39
    REAL            shift and go to state 40
    THIS            shift and go to state 41
    NIL             shift and go to state 42
    FALSE           shift and go to state 43
    TRUE            shift and go to state 44
    MINUS           shift and go to state 49
    NOT             shift and go to state 50

    statement                      shift and go to state 178
    block                          shift and go to state 10
    while_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    print_stmt                     shift and go to state 13
    if_stmt                        shift and go to state 14
    for_stmt                       shift and go to state 15
    expr_stmt                      shift and go to state 16
    expression                     shift and go to state 24
    assignment                     shift and go to state 29
    logic_or                       shift and go to state 30
    _13_optional                   shift and go to state 31
    logic_and                      shift and go to state 32
    call                           shift and go to state 33
    equality                       shift and go to state 34
    primary                        shift and go to state 35
    comparison                     shift and go to state 36
    term                           shift and go to state 45
    factor                         shift and go to state 46
    unary                          shift and go to state 47
    oper5                          shift and go to state 48

state 158

    (31) for_stmt -> FOR LPAREN SEMI _5_optional . SEMI _6_optional RPAREN statement
    SEMI            shift and go to state 179


state 159

    (32) _5_optional -> expression .
    SEMI            reduce using rule 32 (_5_optional -> expression .)


state 160

    (36) for_stmt -> FOR LPAREN for_initialize _7_optional . SEMI _8_optional RPAREN statement
    SEMI            shift and go to state 180


state 161

    (37) _7_optional -> expression .
    SEMI            reduce using rule 37 (_7_optional -> expression .)


state 162

    (61) assignment -> _13_optional IDENT ASSIGN expression .
    SEMI            reduce using rule 61 (assignment -> _13_optional IDENT ASSIGN expression .)
    RPAREN          reduce using rule 61 (assignment -> _13_optional IDENT ASSIGN expression .)
    COMMA           reduce using rule 61 (assignment -> _13_optional IDENT ASSIGN expression .)


state 163

    (121) oper6 -> LPAREN _21_optional RPAREN .
    POINT           reduce using rule 121 (oper6 -> LPAREN _21_optional RPAREN .)
    LPAREN          reduce using rule 121 (oper6 -> LPAREN _21_optional RPAREN .)
    TIMES           reduce using rule 121 (oper6 -> LPAREN _21_optional RPAREN .)
    DIVIDE          reduce using rule 121 (oper6 -> LPAREN _21_optional RPAREN .)
    PLUS            reduce using rule 121 (oper6 -> LPAREN _21_optional RPAREN .)
    MINUS           reduce using rule 121 (oper6 -> LPAREN _21_optional RPAREN .)
    LE              reduce using rule 121 (oper6 -> LPAREN _21_optional RPAREN .)
    LT              reduce using rule 121 (oper6 -> LPAREN _21_optional RPAREN .)
    GE              reduce using rule 121 (oper6 -> LPAREN _21_optional RPAREN .)
    GT              reduce using rule 121 (oper6 -> LPAREN _21_optional RPAREN .)
    EQ              reduce using rule 121 (oper6 -> LPAREN _21_optional RPAREN .)
    NE              reduce using rule 121 (oper6 -> LPAREN _21_optional RPAREN .)
    AND             reduce using rule 121 (oper6 -> LPAREN _21_optional RPAREN .)
    OR              reduce using rule 121 (oper6 -> LPAREN _21_optional RPAREN .)
    SEMI            reduce using rule 121 (oper6 -> LPAREN _21_optional RPAREN .)
    RPAREN          reduce using rule 121 (oper6 -> LPAREN _21_optional RPAREN .)
    COMMA           reduce using rule 121 (oper6 -> LPAREN _21_optional RPAREN .)


state 164

    (143) arguments -> expression _24_repeat .
    RPAREN          reduce using rule 143 (arguments -> expression _24_repeat .)


state 165

    (144) _24_repeat -> _24_items .
    (146) _24_items -> _24_items . _24_item
    (148) _24_item -> . COMMA expression
    RPAREN          reduce using rule 144 (_24_repeat -> _24_items .)
    COMMA           shift and go to state 167

    _24_item                       shift and go to state 181

state 166

    (147) _24_items -> _24_item .
    COMMA           reduce using rule 147 (_24_items -> _24_item .)
    RPAREN          reduce using rule 147 (_24_items -> _24_item .)


state 167

    (148) _24_item -> COMMA . expression
    (59) expression -> . assignment
    (60) assignment -> . logic_or
    (61) assignment -> . _13_optional IDENT ASSIGN expression
    (64) logic_or -> . logic_and _14_repeat
    (62) _13_optional -> . call POINT
    (63) _13_optional -> .
    (70) logic_and -> . equality _15_repeat
    (114) call -> . primary _20_repeat
    (76) equality -> . comparison _16_repeat
    (124) primary -> . SUPER POINT IDENT
    (125) primary -> . LPAREN expression RPAREN
    (126) primary -> . IDENT
    (127) primary -> . STRING
    (128) primary -> . NUM
    (129) primary -> . REAL
    (130) primary -> . THIS
    (131) primary -> . NIL
    (132) primary -> . FALSE
    (133) primary -> . TRUE
    (84) comparison -> . term _17_repeat
    (94) term -> . factor _18_repeat
    (102) factor -> . unary _19_repeat
    (110) unary -> . call
    (111) unary -> . oper5 unary
    (112) oper5 -> . MINUS
    (113) oper5 -> . NOT
  ! shift/reduce conflict for IDENT resolved as shift
    SUPER           shift and go to state 37
    LPAREN          shift and go to state 23
    IDENT           shift and go to state 18
    STRING          shift and go to state 38
    NUM             shift and go to state 39
    REAL            shift and go to state 40
    THIS            shift and go to state 41
    NIL             shift and go to state 42
    FALSE           shift and go to state 43
    TRUE            shift and go to state 44
    MINUS           shift and go to state 49
    NOT             shift and go to state 50

    expression                     shift and go to state 182
    assignment                     shift and go to state 29
    logic_or                       shift and go to state 30
    _13_optional                   shift and go to state 31
    logic_and                      shift and go to state 32
    call                           shift and go to state 33
    equality                       shift and go to state 34
    primary                        shift and go to state 35
    comparison                     shift and go to state 36
    term                           shift and go to state 45
    factor                         shift and go to state 46
    unary                          shift and go to state 47
    oper5                          shift and go to state 48

state 168

    (137) parameters -> IDENT _23_repeat .
    RPAREN          reduce using rule 137 (parameters -> IDENT _23_repeat .)


state 169

    (138) _23_repeat -> _23_items .
    (140) _23_items -> _23_items . _23_item
    (142) _23_item -> . COMMA IDENT
    RPAREN          reduce using rule 138 (_23_repeat -> _23_items .)
    COMMA           shift and go to state 171

    _23_item                       shift and go to state 183

state 170

    (141) _23_items -> _23_item .
    COMMA           reduce using rule 141 (_23_items -> _23_item .)
    RPAREN          reduce using rule 141 (_23_items -> _23_item .)


state 171

    (142) _23_item -> COMMA . IDENT
    IDENT           shift and go to state 184


state 172

    (134) function -> IDENT LPAREN _22_optional RPAREN . block
    (53) block -> . LBRACE _12_repeat RBRACE
    LBRACE          shift and go to state 21

    block                          shift and go to state 185

state 173

    (11) class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat . RBRACE
    RBRACE          shift and go to state 186


state 174

    (14) _3_repeat -> _3_items .
    (16) _3_items -> _3_items . _3_item
    (18) _3_item -> . function
    (134) function -> . IDENT LPAREN _22_optional RPAREN block
    RBRACE          reduce using rule 14 (_3_repeat -> _3_items .)
    IDENT           shift and go to state 54

    _3_item                        shift and go to state 187
    function                       shift and go to state 176

state 175

    (17) _3_items -> _3_item .
    IDENT           reduce using rule 17 (_3_items -> _3_item .)
    RBRACE          reduce using rule 17 (_3_items -> _3_item .)


state 176

    (18) _3_item -> function .
    IDENT           reduce using rule 18 (_3_item -> function .)
    RBRACE          reduce using rule 18 (_3_item -> function .)


state 177

    (52) while_stmt -> WHILE LPAREN expression RPAREN statement .
    VAR             reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    FUN             reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    CLASS           reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    PRINT           reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    FOR             reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    SUPER           reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    IDENT           reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    STRING          reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    NUM             reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    REAL            reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    THIS            reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    NIL             reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    FALSE           reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    TRUE            reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    MINUS           reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    NOT             reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    $end            reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 52 (while_stmt -> WHILE LPAREN expression RPAREN statement .)


state 178

    (43) if_stmt -> IF LPAREN _9_optional RPAREN statement . _10_optional
    (46) _10_optional -> . ELSE statement
    (47) _10_optional -> .
  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 189
    VAR             reduce using rule 47 (_10_optional -> .)
    FUN             reduce using rule 47 (_10_optional -> .)
    CLASS           reduce using rule 47 (_10_optional -> .)
    LBRACE          reduce using rule 47 (_10_optional -> .)
    WHILE           reduce using rule 47 (_10_optional -> .)
    RETURN          reduce using rule 47 (_10_optional -> .)
    PRINT           reduce using rule 47 (_10_optional -> .)
    IF              reduce using rule 47 (_10_optional -> .)
    FOR             reduce using rule 47 (_10_optional -> .)
    SUPER           reduce using rule 47 (_10_optional -> .)
    LPAREN          reduce using rule 47 (_10_optional -> .)
    IDENT           reduce using rule 47 (_10_optional -> .)
    STRING          reduce using rule 47 (_10_optional -> .)
    NUM             reduce using rule 47 (_10_optional -> .)
    REAL            reduce using rule 47 (_10_optional -> .)
    THIS            reduce using rule 47 (_10_optional -> .)
    NIL             reduce using rule 47 (_10_optional -> .)
    FALSE           reduce using rule 47 (_10_optional -> .)
    TRUE            reduce using rule 47 (_10_optional -> .)
    MINUS           reduce using rule 47 (_10_optional -> .)
    NOT             reduce using rule 47 (_10_optional -> .)
    $end            reduce using rule 47 (_10_optional -> .)
    RBRACE          reduce using rule 47 (_10_optional -> .)

    _10_optional                   shift and go to state 188

state 179

    (31) for_stmt -> FOR LPAREN SEMI _5_optional SEMI . _6_optional RPAREN statement
    (34) _6_optional -> . expression
    (35) _6_optional -> .
    (59) expression -> . assignment
    (60) assignment -> . logic_or
    (61) assignment -> . _13_optional IDENT ASSIGN expression
    (64) logic_or -> . logic_and _14_repeat
    (62) _13_optional -> . call POINT
    (63) _13_optional -> .
    (70) logic_and -> . equality _15_repeat
    (114) call -> . primary _20_repeat
    (76) equality -> . comparison _16_repeat
    (124) primary -> . SUPER POINT IDENT
    (125) primary -> . LPAREN expression RPAREN
    (126) primary -> . IDENT
    (127) primary -> . STRING
    (128) primary -> . NUM
    (129) primary -> . REAL
    (130) primary -> . THIS
    (131) primary -> . NIL
    (132) primary -> . FALSE
    (133) primary -> . TRUE
    (84) comparison -> . term _17_repeat
    (94) term -> . factor _18_repeat
    (102) factor -> . unary _19_repeat
    (110) unary -> . call
    (111) unary -> . oper5 unary
    (112) oper5 -> . MINUS
    (113) oper5 -> . NOT
  ! shift/reduce conflict for IDENT resolved as shift
    RPAREN          reduce using rule 35 (_6_optional -> .)
    SUPER           shift and go to state 37
    LPAREN          shift and go to state 23
    IDENT           shift and go to state 18
    STRING          shift and go to state 38
    NUM             shift and go to state 39
    REAL            shift and go to state 40
    THIS            shift and go to state 41
    NIL             shift and go to state 42
    FALSE           shift and go to state 43
    TRUE            shift and go to state 44
    MINUS           shift and go to state 49
    NOT             shift and go to state 50

    _6_optional                    shift and go to state 190
    expression                     shift and go to state 191
    assignment                     shift and go to state 29
    logic_or                       shift and go to state 30
    _13_optional                   shift and go to state 31
    logic_and                      shift and go to state 32
    call                           shift and go to state 33
    equality                       shift and go to state 34
    primary                        shift and go to state 35
    comparison                     shift and go to state 36
    term                           shift and go to state 45
    factor                         shift and go to state 46
    unary                          shift and go to state 47
    oper5                          shift and go to state 48

state 180

    (36) for_stmt -> FOR LPAREN for_initialize _7_optional SEMI . _8_optional RPAREN statement
    (39) _8_optional -> . expression
    (40) _8_optional -> .
    (59) expression -> . assignment
    (60) assignment -> . logic_or
    (61) assignment -> . _13_optional IDENT ASSIGN expression
    (64) logic_or -> . logic_and _14_repeat
    (62) _13_optional -> . call POINT
    (63) _13_optional -> .
    (70) logic_and -> . equality _15_repeat
    (114) call -> . primary _20_repeat
    (76) equality -> . comparison _16_repeat
    (124) primary -> . SUPER POINT IDENT
    (125) primary -> . LPAREN expression RPAREN
    (126) primary -> . IDENT
    (127) primary -> . STRING
    (128) primary -> . NUM
    (129) primary -> . REAL
    (130) primary -> . THIS
    (131) primary -> . NIL
    (132) primary -> . FALSE
    (133) primary -> . TRUE
    (84) comparison -> . term _17_repeat
    (94) term -> . factor _18_repeat
    (102) factor -> . unary _19_repeat
    (110) unary -> . call
    (111) unary -> . oper5 unary
    (112) oper5 -> . MINUS
    (113) oper5 -> . NOT
  ! shift/reduce conflict for IDENT resolved as shift
    RPAREN          reduce using rule 40 (_8_optional -> .)
    SUPER           shift and go to state 37
    LPAREN          shift and go to state 23
    IDENT           shift and go to state 18
    STRING          shift and go to state 38
    NUM             shift and go to state 39
    REAL            shift and go to state 40
    THIS            shift and go to state 41
    NIL             shift and go to state 42
    FALSE           shift and go to state 43
    TRUE            shift and go to state 44
    MINUS           shift and go to state 49
    NOT             shift and go to state 50

    _8_optional                    shift and go to state 192
    expression                     shift and go to state 193
    assignment                     shift and go to state 29
    logic_or                       shift and go to state 30
    _13_optional                   shift and go to state 31
    logic_and                      shift and go to state 32
    call                           shift and go to state 33
    equality                       shift and go to state 34
    primary                        shift and go to state 35
    comparison                     shift and go to state 36
    term                           shift and go to state 45
    factor                         shift and go to state 46
    unary                          shift and go to state 47
    oper5                          shift and go to state 48

state 181

    (146) _24_items -> _24_items _24_item .
    COMMA           reduce using rule 146 (_24_items -> _24_items _24_item .)
    RPAREN          reduce using rule 146 (_24_items -> _24_items _24_item .)


state 182

    (148) _24_item -> COMMA expression .
    COMMA           reduce using rule 148 (_24_item -> COMMA expression .)
    RPAREN          reduce using rule 148 (_24_item -> COMMA expression .)


state 183

    (140) _23_items -> _23_items _23_item .
    COMMA           reduce using rule 140 (_23_items -> _23_items _23_item .)
    RPAREN          reduce using rule 140 (_23_items -> _23_items _23_item .)


state 184

    (142) _23_item -> COMMA IDENT .
    COMMA           reduce using rule 142 (_23_item -> COMMA IDENT .)
    RPAREN          reduce using rule 142 (_23_item -> COMMA IDENT .)


state 185

    (134) function -> IDENT LPAREN _22_optional RPAREN block .
    VAR             reduce using rule 134 (function -> IDENT LPAREN _22_optional RPAREN block .)
    FUN             reduce using rule 134 (function -> IDENT LPAREN _22_optional RPAREN block .)
    CLASS           reduce using rule 134 (function -> IDENT LPAREN _22_optional RPAREN block .)
    LBRACE          reduce using rule 134 (function -> IDENT LPAREN _22_optional RPAREN block .)
    WHILE           reduce using rule 134 (function -> IDENT LPAREN _22_optional RPAREN block .)
    RETURN          reduce using rule 134 (function -> IDENT LPAREN _22_optional RPAREN block .)
    PRINT           reduce using rule 134 (function -> IDENT LPAREN _22_optional RPAREN block .)
    IF              reduce using rule 134 (function -> IDENT LPAREN _22_optional RPAREN block .)
    FOR             reduce using rule 134 (function -> IDENT LPAREN _22_optional RPAREN block .)
    SUPER           reduce using rule 134 (function -> IDENT LPAREN _22_optional RPAREN block .)
    LPAREN          reduce using rule 134 (function -> IDENT LPAREN _22_optional RPAREN block .)
    IDENT           reduce using rule 134 (function -> IDENT LPAREN _22_optional RPAREN block .)
    STRING          reduce using rule 134 (function -> IDENT LPAREN _22_optional RPAREN block .)
    NUM             reduce using rule 134 (function -> IDENT LPAREN _22_optional RPAREN block .)
    REAL            reduce using rule 134 (function -> IDENT LPAREN _22_optional RPAREN block .)
    THIS            reduce using rule 134 (function -> IDENT LPAREN _22_optional RPAREN block .)
    NIL             reduce using rule 134 (function -> IDENT LPAREN _22_optional RPAREN block .)
    FALSE           reduce using rule 134 (function -> IDENT LPAREN _22_optional RPAREN block .)
    TRUE            reduce using rule 134 (function -> IDENT LPAREN _22_optional RPAREN block .)
    MINUS           reduce using rule 134 (function -> IDENT LPAREN _22_optional RPAREN block .)
    NOT             reduce using rule 134 (function -> IDENT LPAREN _22_optional RPAREN block .)
    $end            reduce using rule 134 (function -> IDENT LPAREN _22_optional RPAREN block .)
    RBRACE          reduce using rule 134 (function -> IDENT LPAREN _22_optional RPAREN block .)


state 186

    (11) class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .
    VAR             reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    FUN             reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    CLASS           reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    LBRACE          reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    WHILE           reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    RETURN          reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    PRINT           reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    IF              reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    FOR             reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    SUPER           reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    LPAREN          reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    IDENT           reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    STRING          reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    NUM             reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    REAL            reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    THIS            reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    NIL             reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    FALSE           reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    TRUE            reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    MINUS           reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    NOT             reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    $end            reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    RBRACE          reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)


state 187

    (16) _3_items -> _3_items _3_item .
    IDENT           reduce using rule 16 (_3_items -> _3_items _3_item .)
    RBRACE          reduce using rule 16 (_3_items -> _3_items _3_item .)


state 188

    (43) if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .
    VAR             reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    FUN             reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    CLASS           reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    LBRACE          reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    WHILE           reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    RETURN          reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    PRINT           reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    IF              reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    FOR             reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    SUPER           reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    LPAREN          reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    IDENT           reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    STRING          reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    NUM             reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    REAL            reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    THIS            reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    NIL             reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    FALSE           reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    TRUE            reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    MINUS           reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    NOT             reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    $end            reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    RBRACE          reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)
    ELSE            reduce using rule 43 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional .)


state 189

    (46) _10_optional -> ELSE . statement
    (23) statement -> . block
    (24) statement -> . while_stmt
    (25) statement -> . return_stmt
    (26) statement -> . print_stmt
    (27) statement -> . if_stmt
    (28) statement -> . for_stmt
    (29) statement -> . expr_stmt
    (53) block -> . LBRACE _12_repeat RBRACE
    (52) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (49) return_stmt -> . RETURN _11_optional SEMI
    (48) print_stmt -> . PRINT expression SEMI
    (43) if_stmt -> . IF LPAREN _9_optional RPAREN statement _10_optional
    (31) for_stmt -> . FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
    (36) for_stmt -> . FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
    (30) expr_stmt -> . expression SEMI
    (59) expression -> . assignment
    (60) assignment -> . logic_or
    (61) assignment -> . _13_optional IDENT ASSIGN expression
    (64) logic_or -> . logic_and _14_repeat
    (62) _13_optional -> . call POINT
    (63) _13_optional -> .
    (70) logic_and -> . equality _15_repeat
    (114) call -> . primary _20_repeat
    (76) equality -> . comparison _16_repeat
    (124) primary -> . SUPER POINT IDENT
    (125) primary -> . LPAREN expression RPAREN
    (126) primary -> . IDENT
    (127) primary -> . STRING
    (128) primary -> . NUM
    (129) primary -> . REAL
    (130) primary -> . THIS
    (131) primary -> . NIL
    (132) primary -> . FALSE
    (133) primary -> . TRUE
    (84) comparison -> . term _17_repeat
    (94) term -> . factor _18_repeat
    (102) factor -> . unary _19_repeat
    (110) unary -> . call
    (111) unary -> . oper5 unary
    (112) oper5 -> . MINUS
    (113) oper5 -> . NOT
  ! shift/reduce conflict for IDENT resolved as shift
    LBRACE          shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    FOR             shift and go to state 28
    SUPER           shift and go to state 37
    LPAREN          shift and go to state 23
    IDENT           shift and go to state 18
    STRING          shift and go to state 38
    NUM             shift and go to state 39
    REAL            shift and go to state 40
    THIS            shift and go to state 41
    NIL             shift and go to state 42
    FALSE           shift and go to state 43
    TRUE            shift and go to state 44
    MINUS           shift and go to state 49
    NOT             shift and go to state 50

    statement                      shift and go to state 194
    block                          shift and go to state 10
    while_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    print_stmt                     shift and go to state 13
    if_stmt                        shift and go to state 14
    for_stmt                       shift and go to state 15
    expr_stmt                      shift and go to state 16
    expression                     shift and go to state 24
    assignment                     shift and go to state 29
    logic_or                       shift and go to state 30
    _13_optional                   shift and go to state 31
    logic_and                      shift and go to state 32
    call                           shift and go to state 33
    equality                       shift and go to state 34
    primary                        shift and go to state 35
    comparison                     shift and go to state 36
    term                           shift and go to state 45
    factor                         shift and go to state 46
    unary                          shift and go to state 47
    oper5                          shift and go to state 48

state 190

    (31) for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional . RPAREN statement
    RPAREN          shift and go to state 195


state 191

    (34) _6_optional -> expression .
    RPAREN          reduce using rule 34 (_6_optional -> expression .)


state 192

    (36) for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional . RPAREN statement
    RPAREN          shift and go to state 196


state 193

    (39) _8_optional -> expression .
    RPAREN          reduce using rule 39 (_8_optional -> expression .)


state 194

    (46) _10_optional -> ELSE statement .
    VAR             reduce using rule 46 (_10_optional -> ELSE statement .)
    FUN             reduce using rule 46 (_10_optional -> ELSE statement .)
    CLASS           reduce using rule 46 (_10_optional -> ELSE statement .)
    LBRACE          reduce using rule 46 (_10_optional -> ELSE statement .)
    WHILE           reduce using rule 46 (_10_optional -> ELSE statement .)
    RETURN          reduce using rule 46 (_10_optional -> ELSE statement .)
    PRINT           reduce using rule 46 (_10_optional -> ELSE statement .)
    IF              reduce using rule 46 (_10_optional -> ELSE statement .)
    FOR             reduce using rule 46 (_10_optional -> ELSE statement .)
    SUPER           reduce using rule 46 (_10_optional -> ELSE statement .)
    LPAREN          reduce using rule 46 (_10_optional -> ELSE statement .)
    IDENT           reduce using rule 46 (_10_optional -> ELSE statement .)
    STRING          reduce using rule 46 (_10_optional -> ELSE statement .)
    NUM             reduce using rule 46 (_10_optional -> ELSE statement .)
    REAL            reduce using rule 46 (_10_optional -> ELSE statement .)
    THIS            reduce using rule 46 (_10_optional -> ELSE statement .)
    NIL             reduce using rule 46 (_10_optional -> ELSE statement .)
    FALSE           reduce using rule 46 (_10_optional -> ELSE statement .)
    TRUE            reduce using rule 46 (_10_optional -> ELSE statement .)
    MINUS           reduce using rule 46 (_10_optional -> ELSE statement .)
    NOT             reduce using rule 46 (_10_optional -> ELSE statement .)
    $end            reduce using rule 46 (_10_optional -> ELSE statement .)
    RBRACE          reduce using rule 46 (_10_optional -> ELSE statement .)
    ELSE            reduce using rule 46 (_10_optional -> ELSE statement .)


state 195

    (31) for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN . statement
    (23) statement -> . block
    (24) statement -> . while_stmt
    (25) statement -> . return_stmt
    (26) statement -> . print_stmt
    (27) statement -> . if_stmt
    (28) statement -> . for_stmt
    (29) statement -> . expr_stmt
    (53) block -> . LBRACE _12_repeat RBRACE
    (52) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (49) return_stmt -> . RETURN _11_optional SEMI
    (48) print_stmt -> . PRINT expression SEMI
    (43) if_stmt -> . IF LPAREN _9_optional RPAREN statement _10_optional
    (31) for_stmt -> . FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
    (36) for_stmt -> . FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
    (30) expr_stmt -> . expression SEMI
    (59) expression -> . assignment
    (60) assignment -> . logic_or
    (61) assignment -> . _13_optional IDENT ASSIGN expression
    (64) logic_or -> . logic_and _14_repeat
    (62) _13_optional -> . call POINT
    (63) _13_optional -> .
    (70) logic_and -> . equality _15_repeat
    (114) call -> . primary _20_repeat
    (76) equality -> . comparison _16_repeat
    (124) primary -> . SUPER POINT IDENT
    (125) primary -> . LPAREN expression RPAREN
    (126) primary -> . IDENT
    (127) primary -> . STRING
    (128) primary -> . NUM
    (129) primary -> . REAL
    (130) primary -> . THIS
    (131) primary -> . NIL
    (132) primary -> . FALSE
    (133) primary -> . TRUE
    (84) comparison -> . term _17_repeat
    (94) term -> . factor _18_repeat
    (102) factor -> . unary _19_repeat
    (110) unary -> . call
    (111) unary -> . oper5 unary
    (112) oper5 -> . MINUS
    (113) oper5 -> . NOT
  ! shift/reduce conflict for IDENT resolved as shift
    LBRACE          shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    FOR             shift and go to state 28
    SUPER           shift and go to state 37
    LPAREN          shift and go to state 23
    IDENT           shift and go to state 18
    STRING          shift and go to state 38
    NUM             shift and go to state 39
    REAL            shift and go to state 40
    THIS            shift and go to state 41
    NIL             shift and go to state 42
    FALSE           shift and go to state 43
    TRUE            shift and go to state 44
    MINUS           shift and go to state 49
    NOT             shift and go to state 50

    statement                      shift and go to state 197
    block                          shift and go to state 10
    while_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    print_stmt                     shift and go to state 13
    if_stmt                        shift and go to state 14
    for_stmt                       shift and go to state 15
    expr_stmt                      shift and go to state 16
    expression                     shift and go to state 24
    assignment                     shift and go to state 29
    logic_or                       shift and go to state 30
    _13_optional                   shift and go to state 31
    logic_and                      shift and go to state 32
    call                           shift and go to state 33
    equality                       shift and go to state 34
    primary                        shift and go to state 35
    comparison                     shift and go to state 36
    term                           shift and go to state 45
    factor                         shift and go to state 46
    unary                          shift and go to state 47
    oper5                          shift and go to state 48

state 196

    (36) for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN . statement
    (23) statement -> . block
    (24) statement -> . while_stmt
    (25) statement -> . return_stmt
    (26) statement -> . print_stmt
    (27) statement -> . if_stmt
    (28) statement -> . for_stmt
    (29) statement -> . expr_stmt
    (53) block -> . LBRACE _12_repeat RBRACE
    (52) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (49) return_stmt -> . RETURN _11_optional SEMI
    (48) print_stmt -> . PRINT expression SEMI
    (43) if_stmt -> . IF LPAREN _9_optional RPAREN statement _10_optional
    (31) for_stmt -> . FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
    (36) for_stmt -> . FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
    (30) expr_stmt -> . expression SEMI
    (59) expression -> . assignment
    (60) assignment -> . logic_or
    (61) assignment -> . _13_optional IDENT ASSIGN expression
    (64) logic_or -> . logic_and _14_repeat
    (62) _13_optional -> . call POINT
    (63) _13_optional -> .
    (70) logic_and -> . equality _15_repeat
    (114) call -> . primary _20_repeat
    (76) equality -> . comparison _16_repeat
    (124) primary -> . SUPER POINT IDENT
    (125) primary -> . LPAREN expression RPAREN
    (126) primary -> . IDENT
    (127) primary -> . STRING
    (128) primary -> . NUM
    (129) primary -> . REAL
    (130) primary -> . THIS
    (131) primary -> . NIL
    (132) primary -> . FALSE
    (133) primary -> . TRUE
    (84) comparison -> . term _17_repeat
    (94) term -> . factor _18_repeat
    (102) factor -> . unary _19_repeat
    (110) unary -> . call
    (111) unary -> . oper5 unary
    (112) oper5 -> . MINUS
    (113) oper5 -> . NOT
  ! shift/reduce conflict for IDENT resolved as shift
    LBRACE          shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    FOR             shift and go to state 28
    SUPER           shift and go to state 37
    LPAREN          shift and go to state 23
    IDENT           shift and go to state 18
    STRING          shift and go to state 38
    NUM             shift and go to state 39
    REAL            shift and go to state 40
    THIS            shift and go to state 41
    NIL             shift and go to state 42
    FALSE           shift and go to state 43
    TRUE            shift and go to state 44
    MINUS           shift and go to state 49
    NOT             shift and go to state 50

    statement                      shift and go to state 198
    block                          shift and go to state 10
    while_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    print_stmt                     shift and go to state 13
    if_stmt                        shift and go to state 14
    for_stmt                       shift and go to state 15
    expr_stmt                      shift and go to state 16
    expression                     shift and go to state 24
    assignment                     shift and go to state 29
    logic_or                       shift and go to state 30
    _13_optional                   shift and go to state 31
    logic_and                      shift and go to state 32
    call                           shift and go to state 33
    equality                       shift and go to state 34
    primary                        shift and go to state 35
    comparison                     shift and go to state 36
    term                           shift and go to state 45
    factor                         shift and go to state 46
    unary                          shift and go to state 47
    oper5                          shift and go to state 48

state 197

    (31) for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .
    VAR             reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    FUN             reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    CLASS           reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    LBRACE          reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    WHILE           reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    RETURN          reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    PRINT           reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    IF              reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    FOR             reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    SUPER           reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    LPAREN          reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    IDENT           reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    STRING          reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    NUM             reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    REAL            reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    THIS            reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    NIL             reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    FALSE           reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    TRUE            reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    MINUS           reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    NOT             reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    $end            reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    RBRACE          reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    ELSE            reduce using rule 31 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)


state 198

    (36) for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .
    VAR             reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    FUN             reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    CLASS           reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    LBRACE          reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    WHILE           reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    RETURN          reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    PRINT           reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    IF              reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    FOR             reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    SUPER           reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    LPAREN          reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    IDENT           reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    STRING          reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    NUM             reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    REAL            reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    THIS            reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    NIL             reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    FALSE           reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    TRUE            reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    MINUS           reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    NOT             reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    $end            reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    RBRACE          reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    ELSE            reduce using rule 36 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)


Conflicts:

shift/reduce conflict for IDENT in state 0 resolved as shift
shift/reduce conflict for IDENT in state 3 resolved as shift
shift/reduce conflict for IDENT in state 21 resolved as shift
shift/reduce conflict for IDENT in state 23 resolved as shift
shift/reduce conflict for IDENT in state 25 resolved as shift
shift/reduce conflict for IDENT in state 26 resolved as shift
shift/reduce conflict for POINT in state 35 resolved as shift
shift/reduce conflict for IDENT in state 57 resolved as shift
shift/reduce conflict for IDENT in state 60 resolved as shift
shift/reduce conflict for IDENT in state 66 resolved as shift
shift/reduce conflict for IDENT in state 67 resolved as shift
shift/reduce conflict for POINT in state 79 resolved as shift
shift/reduce conflict for IDENT in state 83 resolved as shift
shift/reduce conflict for IDENT in state 114 resolved as shift
shift/reduce conflict for IDENT in state 126 resolved as shift
shift/reduce conflict for IDENT in state 127 resolved as shift
shift/reduce conflict for IDENT in state 130 resolved as shift
shift/reduce conflict for IDENT in state 156 resolved as shift
shift/reduce conflict for IDENT in state 157 resolved as shift
shift/reduce conflict for IDENT in state 167 resolved as shift
shift/reduce conflict for ELSE in state 178 resolved as shift
shift/reduce conflict for IDENT in state 179 resolved as shift
shift/reduce conflict for IDENT in state 180 resolved as shift
shift/reduce conflict for IDENT in state 189 resolved as shift
shift/reduce conflict for IDENT in state 195 resolved as shift
shift/reduce conflict for IDENT in state 196 resolved as shift